namespace NeoSmart.Unicode
{
    // This file is machine-generated based on the official Unicode Consortium publication (https://unicode.org/Public/emoji/12.0/emoji-test.txt).
    // See https://github.com/UWPX/Emoji-List-Parser for the generator.
    public static partial class Emoji
    {
        /* üòÄ */
        public static readonly SingleEmoji GrinningFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f600 }),
            name: "grinning face",
            searchTerms: new string[] { "grinning", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 0
        );

        /* üòÉ */
        public static readonly SingleEmoji GrinningFaceBigEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f603 }),
            name: "grinning face with big eyes",
            searchTerms: new string[] { "grinning", "face", "big", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 1
        );

        /* üòÑ */
        public static readonly SingleEmoji GrinningFaceSmilingEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f604 }),
            name: "grinning face with smiling eyes",
            searchTerms: new string[] { "grinning", "face", "smiling", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 2
        );

        /* üòÅ */
        public static readonly SingleEmoji BeamingFaceSmilingEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f601 }),
            name: "beaming face with smiling eyes",
            searchTerms: new string[] { "beaming", "face", "smiling", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 3
        );

        /* üòÜ */
        public static readonly SingleEmoji GrinningSquintingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f606 }),
            name: "grinning squinting face",
            searchTerms: new string[] { "grinning", "squinting", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 4
        );

        /* üòÖ */
        public static readonly SingleEmoji GrinningFaceSweat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f605 }),
            name: "grinning face with sweat",
            searchTerms: new string[] { "grinning", "face", "sweat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 5
        );

        /* ü§£ */
        public static readonly SingleEmoji RollingFloorLaughing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f923 }),
            name: "rolling on the floor laughing",
            searchTerms: new string[] { "rolling", "floor", "laughing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 6
        );

        /* üòÇ */
        public static readonly SingleEmoji FaceTearsJoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f602 }),
            name: "face with tears of joy",
            searchTerms: new string[] { "face", "tears", "joy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 7
        );

        /* üôÇ */
        public static readonly SingleEmoji SlightlySmilingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f642 }),
            name: "slightly smiling face",
            searchTerms: new string[] { "slightly", "smiling", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 8
        );

        /* üôÉ */
        public static readonly SingleEmoji UpsideDownFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f643 }),
            name: "upside-down face",
            searchTerms: new string[] { "upside", "down", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 9
        );

        /* üòâ */
        public static readonly SingleEmoji WinkingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f609 }),
            name: "winking face",
            searchTerms: new string[] { "winking", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 10
        );

        /* üòä */
        public static readonly SingleEmoji SmilingFaceSmilingEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f60a }),
            name: "smiling face with smiling eyes",
            searchTerms: new string[] { "smiling", "face", "smiling", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 11
        );

        /* üòá */
        public static readonly SingleEmoji SmilingFaceHalo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f607 }),
            name: "smiling face with halo",
            searchTerms: new string[] { "smiling", "face", "halo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SMILING,
            hasGlyph: true,
            sortOrder: 12
        );

        /* ü•∞ */
        public static readonly SingleEmoji SmilingFaceHearts = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f970 }),
            name: "smiling face with hearts",
            searchTerms: new string[] { "smiling", "face", "hearts" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_AFFECTION,
            hasGlyph: true,
            sortOrder: 13
        );

        /* üòç */
        public static readonly SingleEmoji SmilingFaceHeartEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f60d }),
            name: "smiling face with heart-eyes",
            searchTerms: new string[] { "smiling", "face", "heart", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_AFFECTION,
            hasGlyph: true,
            sortOrder: 14
        );

        /* ü§© */
        public static readonly SingleEmoji StarStruck = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f929 }),
            name: "star-struck",
            searchTerms: new string[] { "star", "struck" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_AFFECTION,
            hasGlyph: true,
            sortOrder: 15
        );

        /* üòò */
        public static readonly SingleEmoji FaceBlowingAKiss = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f618 }),
            name: "face blowing a kiss",
            searchTerms: new string[] { "face", "blowing", "a", "kiss" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_AFFECTION,
            hasGlyph: true,
            sortOrder: 16
        );

        /* üòó */
        public static readonly SingleEmoji KissingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f617 }),
            name: "kissing face",
            searchTerms: new string[] { "kissing", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_AFFECTION,
            hasGlyph: true,
            sortOrder: 17
        );

        /* ‚ò∫Ô∏è */
        public static readonly SingleEmoji SmilingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x263a, 0xfe0f }),
            name: "smiling face",
            searchTerms: new string[] { "smiling", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_AFFECTION,
            hasGlyph: true,
            sortOrder: 18
        );

        /* üòö */
        public static readonly SingleEmoji KissingFaceClosedEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f61a }),
            name: "kissing face with closed eyes",
            searchTerms: new string[] { "kissing", "face", "closed", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_AFFECTION,
            hasGlyph: true,
            sortOrder: 20
        );

        /* üòô */
        public static readonly SingleEmoji KissingFaceSmilingEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f619 }),
            name: "kissing face with smiling eyes",
            searchTerms: new string[] { "kissing", "face", "smiling", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_AFFECTION,
            hasGlyph: true,
            sortOrder: 21
        );

        /* üòã */
        public static readonly SingleEmoji FaceSavoringFood = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f60b }),
            name: "face savoring food",
            searchTerms: new string[] { "face", "savoring", "food" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_TONGUE,
            hasGlyph: true,
            sortOrder: 22
        );

        /* üòõ */
        public static readonly SingleEmoji FaceTongue = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f61b }),
            name: "face with tongue",
            searchTerms: new string[] { "face", "tongue" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_TONGUE,
            hasGlyph: true,
            sortOrder: 23
        );

        /* üòú */
        public static readonly SingleEmoji WinkingFaceTongue = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f61c }),
            name: "winking face with tongue",
            searchTerms: new string[] { "winking", "face", "tongue" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_TONGUE,
            hasGlyph: true,
            sortOrder: 24
        );

        /* ü§™ */
        public static readonly SingleEmoji ZanyFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f92a }),
            name: "zany face",
            searchTerms: new string[] { "zany", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_TONGUE,
            hasGlyph: true,
            sortOrder: 25
        );

        /* üòù */
        public static readonly SingleEmoji SquintingFaceTongue = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f61d }),
            name: "squinting face with tongue",
            searchTerms: new string[] { "squinting", "face", "tongue" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_TONGUE,
            hasGlyph: true,
            sortOrder: 26
        );

        /* ü§ë */
        public static readonly SingleEmoji MoneyMouthFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f911 }),
            name: "money-mouth face",
            searchTerms: new string[] { "money", "mouth", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_TONGUE,
            hasGlyph: true,
            sortOrder: 27
        );

        /* ü§ó */
        public static readonly SingleEmoji HuggingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f917 }),
            name: "hugging face",
            searchTerms: new string[] { "hugging", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_HAND,
            hasGlyph: true,
            sortOrder: 28
        );

        /* ü§≠ */
        public static readonly SingleEmoji FaceHandOverMouth = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f92d }),
            name: "face with hand over mouth",
            searchTerms: new string[] { "face", "hand", "over", "mouth" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_HAND,
            hasGlyph: true,
            sortOrder: 29
        );

        /* ü§´ */
        public static readonly SingleEmoji ShushingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f92b }),
            name: "shushing face",
            searchTerms: new string[] { "shushing", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_HAND,
            hasGlyph: true,
            sortOrder: 30
        );

        /* ü§î */
        public static readonly SingleEmoji ThinkingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f914 }),
            name: "thinking face",
            searchTerms: new string[] { "thinking", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_HAND,
            hasGlyph: true,
            sortOrder: 31
        );

        /* ü§ê */
        public static readonly SingleEmoji ZipperMouthFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f910 }),
            name: "zipper-mouth face",
            searchTerms: new string[] { "zipper", "mouth", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 32
        );

        /* ü§® */
        public static readonly SingleEmoji FaceRaisedEyebrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f928 }),
            name: "face with raised eyebrow",
            searchTerms: new string[] { "face", "raised", "eyebrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 33
        );

        /* üòê */
        public static readonly SingleEmoji NeutralFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f610 }),
            name: "neutral face",
            searchTerms: new string[] { "neutral", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 34
        );

        /* üòë */
        public static readonly SingleEmoji ExpressionlessFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f611 }),
            name: "expressionless face",
            searchTerms: new string[] { "expressionless", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 35
        );

        /* üò∂ */
        public static readonly SingleEmoji FaceMouth = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f636 }),
            name: "face without mouth",
            searchTerms: new string[] { "face", "mouth" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 36
        );

        /* üòè */
        public static readonly SingleEmoji SmirkingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f60f }),
            name: "smirking face",
            searchTerms: new string[] { "smirking", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 37
        );

        /* üòí */
        public static readonly SingleEmoji UnamusedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f612 }),
            name: "unamused face",
            searchTerms: new string[] { "unamused", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 38
        );

        /* üôÑ */
        public static readonly SingleEmoji FaceRollingEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f644 }),
            name: "face with rolling eyes",
            searchTerms: new string[] { "face", "rolling", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 39
        );

        /* üò¨ */
        public static readonly SingleEmoji GrimacingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f62c }),
            name: "grimacing face",
            searchTerms: new string[] { "grimacing", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 40
        );

        /* ü§• */
        public static readonly SingleEmoji LyingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f925 }),
            name: "lying face",
            searchTerms: new string[] { "lying", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEUTRAL_SKEPTICAL,
            hasGlyph: true,
            sortOrder: 41
        );

        /* üòå */
        public static readonly SingleEmoji RelievedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f60c }),
            name: "relieved face",
            searchTerms: new string[] { "relieved", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SLEEPY,
            hasGlyph: true,
            sortOrder: 42
        );

        /* üòî */
        public static readonly SingleEmoji PensiveFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f614 }),
            name: "pensive face",
            searchTerms: new string[] { "pensive", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SLEEPY,
            hasGlyph: true,
            sortOrder: 43
        );

        /* üò™ */
        public static readonly SingleEmoji SleepyFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f62a }),
            name: "sleepy face",
            searchTerms: new string[] { "sleepy", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SLEEPY,
            hasGlyph: true,
            sortOrder: 44
        );

        /* ü§§ */
        public static readonly SingleEmoji DroolingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f924 }),
            name: "drooling face",
            searchTerms: new string[] { "drooling", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SLEEPY,
            hasGlyph: true,
            sortOrder: 45
        );

        /* üò¥ */
        public static readonly SingleEmoji SleepingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f634 }),
            name: "sleeping face",
            searchTerms: new string[] { "sleeping", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_SLEEPY,
            hasGlyph: true,
            sortOrder: 46
        );

        /* üò∑ */
        public static readonly SingleEmoji FaceMedicalMask = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f637 }),
            name: "face with medical mask",
            searchTerms: new string[] { "face", "medical", "mask" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 47
        );

        /* ü§í */
        public static readonly SingleEmoji FaceThermometer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f912 }),
            name: "face with thermometer",
            searchTerms: new string[] { "face", "thermometer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 48
        );

        /* ü§ï */
        public static readonly SingleEmoji FaceHeadBandage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f915 }),
            name: "face with head-bandage",
            searchTerms: new string[] { "face", "head", "bandage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 49
        );

        /* ü§¢ */
        public static readonly SingleEmoji NauseatedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f922 }),
            name: "nauseated face",
            searchTerms: new string[] { "nauseated", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 50
        );

        /* ü§Æ */
        public static readonly SingleEmoji FaceVomiting = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f92e }),
            name: "face vomiting",
            searchTerms: new string[] { "face", "vomiting" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 51
        );

        /* ü§ß */
        public static readonly SingleEmoji SneezingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f927 }),
            name: "sneezing face",
            searchTerms: new string[] { "sneezing", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 52
        );

        /* ü•µ */
        public static readonly SingleEmoji HotFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f975 }),
            name: "hot face",
            searchTerms: new string[] { "hot", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 53
        );

        /* ü•∂ */
        public static readonly SingleEmoji ColdFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f976 }),
            name: "cold face",
            searchTerms: new string[] { "cold", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 54
        );

        /* ü•¥ */
        public static readonly SingleEmoji WoozyFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f974 }),
            name: "woozy face",
            searchTerms: new string[] { "woozy", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 55
        );

        /* üòµ */
        public static readonly SingleEmoji DizzyFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f635 }),
            name: "dizzy face",
            searchTerms: new string[] { "dizzy", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 56
        );

        /* ü§Ø */
        public static readonly SingleEmoji ExplodingHead = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f92f }),
            name: "exploding head",
            searchTerms: new string[] { "exploding", "head" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_UNWELL,
            hasGlyph: true,
            sortOrder: 57
        );

        /* ü§† */
        public static readonly SingleEmoji CowboyHatFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f920 }),
            name: "cowboy hat face",
            searchTerms: new string[] { "cowboy", "hat", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_HAT,
            hasGlyph: true,
            sortOrder: 58
        );

        /* ü•≥ */
        public static readonly SingleEmoji PartyingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f973 }),
            name: "partying face",
            searchTerms: new string[] { "partying", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_HAT,
            hasGlyph: true,
            sortOrder: 59
        );

        /* üòé */
        public static readonly SingleEmoji SmilingFaceSunglasses = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f60e }),
            name: "smiling face with sunglasses",
            searchTerms: new string[] { "smiling", "face", "sunglasses" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_GLASSES,
            hasGlyph: true,
            sortOrder: 60
        );

        /* ü§ì */
        public static readonly SingleEmoji NerdFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f913 }),
            name: "nerd face",
            searchTerms: new string[] { "nerd", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_GLASSES,
            hasGlyph: true,
            sortOrder: 61
        );

        /* üßê */
        public static readonly SingleEmoji FaceMonocle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d0 }),
            name: "face with monocle",
            searchTerms: new string[] { "face", "monocle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_GLASSES,
            hasGlyph: true,
            sortOrder: 62
        );

        /* üòï */
        public static readonly SingleEmoji ConfusedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f615 }),
            name: "confused face",
            searchTerms: new string[] { "confused", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 63
        );

        /* üòü */
        public static readonly SingleEmoji WorriedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f61f }),
            name: "worried face",
            searchTerms: new string[] { "worried", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 64
        );

        /* üôÅ */
        public static readonly SingleEmoji SlightlyFrowningFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f641 }),
            name: "slightly frowning face",
            searchTerms: new string[] { "slightly", "frowning", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 65
        );

        /* ‚òπÔ∏è */
        public static readonly SingleEmoji FrowningFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2639, 0xfe0f }),
            name: "frowning face",
            searchTerms: new string[] { "frowning", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 66
        );

        /* üòÆ */
        public static readonly SingleEmoji FaceOpenMouth = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f62e }),
            name: "face with open mouth",
            searchTerms: new string[] { "face", "open", "mouth" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 68
        );

        /* üòØ */
        public static readonly SingleEmoji HushedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f62f }),
            name: "hushed face",
            searchTerms: new string[] { "hushed", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 69
        );

        /* üò≤ */
        public static readonly SingleEmoji AstonishedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f632 }),
            name: "astonished face",
            searchTerms: new string[] { "astonished", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 70
        );

        /* üò≥ */
        public static readonly SingleEmoji FlushedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f633 }),
            name: "flushed face",
            searchTerms: new string[] { "flushed", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 71
        );

        /* ü•∫ */
        public static readonly SingleEmoji PleadingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f97a }),
            name: "pleading face",
            searchTerms: new string[] { "pleading", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 72
        );

        /* üò¶ */
        public static readonly SingleEmoji FrowningFaceOpenMouth = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f626 }),
            name: "frowning face with open mouth",
            searchTerms: new string[] { "frowning", "face", "open", "mouth" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 73
        );

        /* üòß */
        public static readonly SingleEmoji AnguishedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f627 }),
            name: "anguished face",
            searchTerms: new string[] { "anguished", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 74
        );

        /* üò® */
        public static readonly SingleEmoji FearfulFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f628 }),
            name: "fearful face",
            searchTerms: new string[] { "fearful", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 75
        );

        /* üò∞ */
        public static readonly SingleEmoji AnxiousFaceSweat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f630 }),
            name: "anxious face with sweat",
            searchTerms: new string[] { "anxious", "face", "sweat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 76
        );

        /* üò• */
        public static readonly SingleEmoji SadButRelievedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f625 }),
            name: "sad but relieved face",
            searchTerms: new string[] { "sad", "but", "relieved", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 77
        );

        /* üò¢ */
        public static readonly SingleEmoji CryingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f622 }),
            name: "crying face",
            searchTerms: new string[] { "crying", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 78
        );

        /* üò≠ */
        public static readonly SingleEmoji LoudlyCryingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f62d }),
            name: "loudly crying face",
            searchTerms: new string[] { "loudly", "crying", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 79
        );

        /* üò± */
        public static readonly SingleEmoji FaceScreamingFear = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f631 }),
            name: "face screaming in fear",
            searchTerms: new string[] { "face", "screaming", "fear" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 80
        );

        /* üòñ */
        public static readonly SingleEmoji ConfoundedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f616 }),
            name: "confounded face",
            searchTerms: new string[] { "confounded", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 81
        );

        /* üò£ */
        public static readonly SingleEmoji PerseveringFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f623 }),
            name: "persevering face",
            searchTerms: new string[] { "persevering", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 82
        );

        /* üòû */
        public static readonly SingleEmoji DisappointedFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f61e }),
            name: "disappointed face",
            searchTerms: new string[] { "disappointed", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 83
        );

        /* üòì */
        public static readonly SingleEmoji DowncastFaceSweat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f613 }),
            name: "downcast face with sweat",
            searchTerms: new string[] { "downcast", "face", "sweat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 84
        );

        /* üò© */
        public static readonly SingleEmoji WearyFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f629 }),
            name: "weary face",
            searchTerms: new string[] { "weary", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 85
        );

        /* üò´ */
        public static readonly SingleEmoji TiredFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f62b }),
            name: "tired face",
            searchTerms: new string[] { "tired", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 86
        );

        /* ü•± */
        public static readonly SingleEmoji YawningFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f971 }),
            name: "yawning face",
            searchTerms: new string[] { "yawning", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_CONCERNED,
            hasGlyph: true,
            sortOrder: 87
        );

        /* üò§ */
        public static readonly SingleEmoji FaceSteamFromNose = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f624 }),
            name: "face with steam from nose",
            searchTerms: new string[] { "face", "steam", "from", "nose" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEGATIVE,
            hasGlyph: true,
            sortOrder: 88
        );

        /* üò° */
        public static readonly SingleEmoji PoutingFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f621 }),
            name: "pouting face",
            searchTerms: new string[] { "pouting", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEGATIVE,
            hasGlyph: true,
            sortOrder: 89
        );

        /* üò† */
        public static readonly SingleEmoji AngryFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f620 }),
            name: "angry face",
            searchTerms: new string[] { "angry", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEGATIVE,
            hasGlyph: true,
            sortOrder: 90
        );

        /* ü§¨ */
        public static readonly SingleEmoji FaceSymbolsMouth = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f92c }),
            name: "face with symbols on mouth",
            searchTerms: new string[] { "face", "symbols", "mouth" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEGATIVE,
            hasGlyph: true,
            sortOrder: 91
        );

        /* üòà */
        public static readonly SingleEmoji SmilingFaceHorns = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f608 }),
            name: "smiling face with horns",
            searchTerms: new string[] { "smiling", "face", "horns" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEGATIVE,
            hasGlyph: true,
            sortOrder: 92
        );

        /* üëø */
        public static readonly SingleEmoji AngryFaceHorns = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47f }),
            name: "angry face with horns",
            searchTerms: new string[] { "angry", "face", "horns" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEGATIVE,
            hasGlyph: true,
            sortOrder: 93
        );

        /* üíÄ */
        public static readonly SingleEmoji Skull = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f480 }),
            name: "skull",
            searchTerms: new string[] { "skull" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEGATIVE,
            hasGlyph: true,
            sortOrder: 94
        );

        /* ‚ò†Ô∏è */
        public static readonly SingleEmoji SkullCrossbones = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2620, 0xfe0f }),
            name: "skull and crossbones",
            searchTerms: new string[] { "skull", "crossbones" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_NEGATIVE,
            hasGlyph: true,
            sortOrder: 95
        );

        /* üí© */
        public static readonly SingleEmoji PilePoo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a9 }),
            name: "pile of poo",
            searchTerms: new string[] { "pile", "poo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_COSTUME,
            hasGlyph: true,
            sortOrder: 97
        );

        /* ü§° */
        public static readonly SingleEmoji ClownFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f921 }),
            name: "clown face",
            searchTerms: new string[] { "clown", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_COSTUME,
            hasGlyph: true,
            sortOrder: 98
        );

        /* üëπ */
        public static readonly SingleEmoji Ogre = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f479 }),
            name: "ogre",
            searchTerms: new string[] { "ogre" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_COSTUME,
            hasGlyph: true,
            sortOrder: 99
        );

        /* üë∫ */
        public static readonly SingleEmoji Goblin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47a }),
            name: "goblin",
            searchTerms: new string[] { "goblin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_COSTUME,
            hasGlyph: true,
            sortOrder: 100
        );

        /* üëª */
        public static readonly SingleEmoji Ghost = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47b }),
            name: "ghost",
            searchTerms: new string[] { "ghost" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_COSTUME,
            hasGlyph: true,
            sortOrder: 101
        );

        /* üëΩ */
        public static readonly SingleEmoji Alien = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47d }),
            name: "alien",
            searchTerms: new string[] { "alien" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_COSTUME,
            hasGlyph: true,
            sortOrder: 102
        );

        /* üëæ */
        public static readonly SingleEmoji AlienMonster = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47e }),
            name: "alien monster",
            searchTerms: new string[] { "alien", "monster" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_COSTUME,
            hasGlyph: true,
            sortOrder: 103
        );

        /* ü§ñ */
        public static readonly SingleEmoji Robot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f916 }),
            name: "robot",
            searchTerms: new string[] { "robot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.FACE_COSTUME,
            hasGlyph: true,
            sortOrder: 104
        );

        /* üò∫ */
        public static readonly SingleEmoji GrinningCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f63a }),
            name: "grinning cat",
            searchTerms: new string[] { "grinning", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.CAT_FACE,
            hasGlyph: true,
            sortOrder: 105
        );

        /* üò∏ */
        public static readonly SingleEmoji GrinningCatSmilingEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f638 }),
            name: "grinning cat with smiling eyes",
            searchTerms: new string[] { "grinning", "cat", "smiling", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.CAT_FACE,
            hasGlyph: true,
            sortOrder: 106
        );

        /* üòπ */
        public static readonly SingleEmoji CatTearsJoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f639 }),
            name: "cat with tears of joy",
            searchTerms: new string[] { "cat", "tears", "joy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.CAT_FACE,
            hasGlyph: true,
            sortOrder: 107
        );

        /* üòª */
        public static readonly SingleEmoji SmilingCatHeartEyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f63b }),
            name: "smiling cat with heart-eyes",
            searchTerms: new string[] { "smiling", "cat", "heart", "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.CAT_FACE,
            hasGlyph: true,
            sortOrder: 108
        );

        /* üòº */
        public static readonly SingleEmoji CatWrySmile = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f63c }),
            name: "cat with wry smile",
            searchTerms: new string[] { "cat", "wry", "smile" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.CAT_FACE,
            hasGlyph: true,
            sortOrder: 109
        );

        /* üòΩ */
        public static readonly SingleEmoji KissingCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f63d }),
            name: "kissing cat",
            searchTerms: new string[] { "kissing", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.CAT_FACE,
            hasGlyph: true,
            sortOrder: 110
        );

        /* üôÄ */
        public static readonly SingleEmoji WearyCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f640 }),
            name: "weary cat",
            searchTerms: new string[] { "weary", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.CAT_FACE,
            hasGlyph: true,
            sortOrder: 111
        );

        /* üòø */
        public static readonly SingleEmoji CryingCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f63f }),
            name: "crying cat",
            searchTerms: new string[] { "crying", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.CAT_FACE,
            hasGlyph: true,
            sortOrder: 112
        );

        /* üòæ */
        public static readonly SingleEmoji PoutingCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f63e }),
            name: "pouting cat",
            searchTerms: new string[] { "pouting", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.CAT_FACE,
            hasGlyph: true,
            sortOrder: 113
        );

        /* üôà */
        public static readonly SingleEmoji SeeNoEvilMonkey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f648 }),
            name: "see-no-evil monkey",
            searchTerms: new string[] { "see", "no", "evil", "monkey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.MONKEY_FACE,
            hasGlyph: true,
            sortOrder: 114
        );

        /* üôâ */
        public static readonly SingleEmoji HearNoEvilMonkey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f649 }),
            name: "hear-no-evil monkey",
            searchTerms: new string[] { "hear", "no", "evil", "monkey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.MONKEY_FACE,
            hasGlyph: true,
            sortOrder: 115
        );

        /* üôä */
        public static readonly SingleEmoji SpeakNoEvilMonkey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64a }),
            name: "speak-no-evil monkey",
            searchTerms: new string[] { "speak", "no", "evil", "monkey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.MONKEY_FACE,
            hasGlyph: true,
            sortOrder: 116
        );

        /* üíã */
        public static readonly SingleEmoji KissMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f48b }),
            name: "kiss mark",
            searchTerms: new string[] { "kiss", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 117
        );

        /* üíå */
        public static readonly SingleEmoji LoveLetter = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f48c }),
            name: "love letter",
            searchTerms: new string[] { "love", "letter" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 118
        );

        /* üíò */
        public static readonly SingleEmoji HeartArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f498 }),
            name: "heart with arrow",
            searchTerms: new string[] { "heart", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 119
        );

        /* üíù */
        public static readonly SingleEmoji HeartRibbon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f49d }),
            name: "heart with ribbon",
            searchTerms: new string[] { "heart", "ribbon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 120
        );

        /* üíñ */
        public static readonly SingleEmoji SparklingHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f496 }),
            name: "sparkling heart",
            searchTerms: new string[] { "sparkling", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 121
        );

        /* üíó */
        public static readonly SingleEmoji GrowingHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f497 }),
            name: "growing heart",
            searchTerms: new string[] { "growing", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 122
        );

        /* üíì */
        public static readonly SingleEmoji BeatingHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f493 }),
            name: "beating heart",
            searchTerms: new string[] { "beating", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 123
        );

        /* üíû */
        public static readonly SingleEmoji RevolvingHearts = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f49e }),
            name: "revolving hearts",
            searchTerms: new string[] { "revolving", "hearts" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 124
        );

        /* üíï */
        public static readonly SingleEmoji TwoHearts = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f495 }),
            name: "two hearts",
            searchTerms: new string[] { "two", "hearts" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 125
        );

        /* üíü */
        public static readonly SingleEmoji HeartDecoration = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f49f }),
            name: "heart decoration",
            searchTerms: new string[] { "heart", "decoration" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 126
        );

        /* ‚ù£Ô∏è */
        public static readonly SingleEmoji HeartExclamation = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2763, 0xfe0f }),
            name: "heart exclamation",
            searchTerms: new string[] { "heart", "exclamation" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 127
        );

        /* üíî */
        public static readonly SingleEmoji BrokenHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f494 }),
            name: "broken heart",
            searchTerms: new string[] { "broken", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 129
        );

        /* ‚ù§Ô∏è */
        public static readonly SingleEmoji RedHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2764, 0xfe0f }),
            name: "red heart",
            searchTerms: new string[] { "red", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 130
        );

        /* üß° */
        public static readonly SingleEmoji OrangeHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e1 }),
            name: "orange heart",
            searchTerms: new string[] { "orange", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 132
        );

        /* üíõ */
        public static readonly SingleEmoji YellowHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f49b }),
            name: "yellow heart",
            searchTerms: new string[] { "yellow", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 133
        );

        /* üíö */
        public static readonly SingleEmoji GreenHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f49a }),
            name: "green heart",
            searchTerms: new string[] { "green", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 134
        );

        /* üíô */
        public static readonly SingleEmoji BlueHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f499 }),
            name: "blue heart",
            searchTerms: new string[] { "blue", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 135
        );

        /* üíú */
        public static readonly SingleEmoji PurpleHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f49c }),
            name: "purple heart",
            searchTerms: new string[] { "purple", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 136
        );

        /* ü§é */
        public static readonly SingleEmoji BrownHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f90e }),
            name: "brown heart",
            searchTerms: new string[] { "brown", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 137
        );

        /* üñ§ */
        public static readonly SingleEmoji BlackHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5a4 }),
            name: "black heart",
            searchTerms: new string[] { "black", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 138
        );

        /* ü§ç */
        public static readonly SingleEmoji WhiteHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f90d }),
            name: "white heart",
            searchTerms: new string[] { "white", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 139
        );

        /* üíØ */
        public static readonly SingleEmoji HundredPoints = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4af }),
            name: "hundred points",
            searchTerms: new string[] { "hundred", "points" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 140
        );

        /* üí¢ */
        public static readonly SingleEmoji AngerSymbol = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a2 }),
            name: "anger symbol",
            searchTerms: new string[] { "anger", "symbol" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 141
        );

        /* üí• */
        public static readonly SingleEmoji Collision = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a5 }),
            name: "collision",
            searchTerms: new string[] { "collision" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 142
        );

        /* üí´ */
        public static readonly SingleEmoji Dizzy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ab }),
            name: "dizzy",
            searchTerms: new string[] { "dizzy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 143
        );

        /* üí¶ */
        public static readonly SingleEmoji SweatDroplets = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a6 }),
            name: "sweat droplets",
            searchTerms: new string[] { "sweat", "droplets" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 144
        );

        /* üí® */
        public static readonly SingleEmoji DashingAway = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a8 }),
            name: "dashing away",
            searchTerms: new string[] { "dashing", "away" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 145
        );

        /* üï≥Ô∏è */
        public static readonly SingleEmoji Hole = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f573, 0xfe0f }),
            name: "hole",
            searchTerms: new string[] { "hole" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 146
        );

        /* üí£ */
        public static readonly SingleEmoji Bomb = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a3 }),
            name: "bomb",
            searchTerms: new string[] { "bomb" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 148
        );

        /* üí¨ */
        public static readonly SingleEmoji SpeechBalloon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ac }),
            name: "speech balloon",
            searchTerms: new string[] { "speech", "balloon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 149
        );

        /* üëÅÔ∏è‚Äçüó®Ô∏è */
        public static readonly SingleEmoji EyeSpeechBubble = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f441, 0xfe0f, 0x200d, 0x1f5e8, 0xfe0f }),
            name: "eye in speech bubble",
            searchTerms: new string[] { "eye", "speech", "bubble" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 150
        );

        /* üó®Ô∏è */
        public static readonly SingleEmoji LeftSpeechBubble = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5e8, 0xfe0f }),
            name: "left speech bubble",
            searchTerms: new string[] { "left", "speech", "bubble" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 154
        );

        /* üóØÔ∏è */
        public static readonly SingleEmoji RightAngerBubble = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5ef, 0xfe0f }),
            name: "right anger bubble",
            searchTerms: new string[] { "right", "anger", "bubble" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 156
        );

        /* üí≠ */
        public static readonly SingleEmoji ThoughtBalloon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ad }),
            name: "thought balloon",
            searchTerms: new string[] { "thought", "balloon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 158
        );

        /* üí§ */
        public static readonly SingleEmoji Zzz = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a4 }),
            name: "zzz",
            searchTerms: new string[] { "zzz" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SMILEYS_AND_EMOTION,
            subgroup: Subgroups.EMOTION,
            hasGlyph: true,
            sortOrder: 159
        );

        /* üëã */
        public static readonly SingleEmoji WavingHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44b }),
            name: "waving hand",
            searchTerms: new string[] { "waving", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 160
        );

        /* üëãüèª */
        public static readonly SingleEmoji WavingHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44b, 0x1f3fb }),
            name: "waving hand: light skin tone",
            searchTerms: new string[] { "waving", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 161
        );

        /* üëãüèº */
        public static readonly SingleEmoji WavingHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44b, 0x1f3fc }),
            name: "waving hand: medium-light skin tone",
            searchTerms: new string[] { "waving", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 162
        );

        /* üëãüèΩ */
        public static readonly SingleEmoji WavingHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44b, 0x1f3fd }),
            name: "waving hand: medium skin tone",
            searchTerms: new string[] { "waving", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 163
        );

        /* üëãüèæ */
        public static readonly SingleEmoji WavingHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44b, 0x1f3fe }),
            name: "waving hand: medium-dark skin tone",
            searchTerms: new string[] { "waving", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 164
        );

        /* üëãüèø */
        public static readonly SingleEmoji WavingHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44b, 0x1f3ff }),
            name: "waving hand: dark skin tone",
            searchTerms: new string[] { "waving", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 165
        );

        /* ü§ö */
        public static readonly SingleEmoji RaisedBackHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91a }),
            name: "raised back of hand",
            searchTerms: new string[] { "raised", "back", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 166
        );

        /* ü§öüèª */
        public static readonly SingleEmoji RaisedBackHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91a, 0x1f3fb }),
            name: "raised back of hand: light skin tone",
            searchTerms: new string[] { "raised", "back", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 167
        );

        /* ü§öüèº */
        public static readonly SingleEmoji RaisedBackHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91a, 0x1f3fc }),
            name: "raised back of hand: medium-light skin tone",
            searchTerms: new string[] { "raised", "back", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 168
        );

        /* ü§öüèΩ */
        public static readonly SingleEmoji RaisedBackHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91a, 0x1f3fd }),
            name: "raised back of hand: medium skin tone",
            searchTerms: new string[] { "raised", "back", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 169
        );

        /* ü§öüèæ */
        public static readonly SingleEmoji RaisedBackHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91a, 0x1f3fe }),
            name: "raised back of hand: medium-dark skin tone",
            searchTerms: new string[] { "raised", "back", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 170
        );

        /* ü§öüèø */
        public static readonly SingleEmoji RaisedBackHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91a, 0x1f3ff }),
            name: "raised back of hand: dark skin tone",
            searchTerms: new string[] { "raised", "back", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 171
        );

        /* üñêÔ∏è */
        public static readonly SingleEmoji HandFingersSplayed = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f590, 0xfe0f }),
            name: "hand with fingers splayed",
            searchTerms: new string[] { "hand", "fingers", "splayed" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 172
        );

        /* üñêüèª */
        public static readonly SingleEmoji HandFingersSplayedLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f590, 0x1f3fb }),
            name: "hand with fingers splayed: light skin tone",
            searchTerms: new string[] { "hand", "fingers", "splayed", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 174
        );

        /* üñêüèº */
        public static readonly SingleEmoji HandFingersSplayedMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f590, 0x1f3fc }),
            name: "hand with fingers splayed: medium-light skin tone",
            searchTerms: new string[] { "hand", "fingers", "splayed", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 175
        );

        /* üñêüèΩ */
        public static readonly SingleEmoji HandFingersSplayedMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f590, 0x1f3fd }),
            name: "hand with fingers splayed: medium skin tone",
            searchTerms: new string[] { "hand", "fingers", "splayed", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 176
        );

        /* üñêüèæ */
        public static readonly SingleEmoji HandFingersSplayedMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f590, 0x1f3fe }),
            name: "hand with fingers splayed: medium-dark skin tone",
            searchTerms: new string[] { "hand", "fingers", "splayed", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 177
        );

        /* üñêüèø */
        public static readonly SingleEmoji HandFingersSplayedDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f590, 0x1f3ff }),
            name: "hand with fingers splayed: dark skin tone",
            searchTerms: new string[] { "hand", "fingers", "splayed", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 178
        );

        /* ‚úã */
        public static readonly SingleEmoji RaisedHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270b }),
            name: "raised hand",
            searchTerms: new string[] { "raised", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 179
        );

        /* ‚úãüèª */
        public static readonly SingleEmoji RaisedHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270b, 0x1f3fb }),
            name: "raised hand: light skin tone",
            searchTerms: new string[] { "raised", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 180
        );

        /* ‚úãüèº */
        public static readonly SingleEmoji RaisedHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270b, 0x1f3fc }),
            name: "raised hand: medium-light skin tone",
            searchTerms: new string[] { "raised", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 181
        );

        /* ‚úãüèΩ */
        public static readonly SingleEmoji RaisedHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270b, 0x1f3fd }),
            name: "raised hand: medium skin tone",
            searchTerms: new string[] { "raised", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 182
        );

        /* ‚úãüèæ */
        public static readonly SingleEmoji RaisedHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270b, 0x1f3fe }),
            name: "raised hand: medium-dark skin tone",
            searchTerms: new string[] { "raised", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 183
        );

        /* ‚úãüèø */
        public static readonly SingleEmoji RaisedHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270b, 0x1f3ff }),
            name: "raised hand: dark skin tone",
            searchTerms: new string[] { "raised", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 184
        );

        /* üññ */
        public static readonly SingleEmoji VulcanSalute = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f596 }),
            name: "vulcan salute",
            searchTerms: new string[] { "vulcan", "salute" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 185
        );

        /* üññüèª */
        public static readonly SingleEmoji VulcanSaluteLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f596, 0x1f3fb }),
            name: "vulcan salute: light skin tone",
            searchTerms: new string[] { "vulcan", "salute", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 186
        );

        /* üññüèº */
        public static readonly SingleEmoji VulcanSaluteMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f596, 0x1f3fc }),
            name: "vulcan salute: medium-light skin tone",
            searchTerms: new string[] { "vulcan", "salute", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 187
        );

        /* üññüèΩ */
        public static readonly SingleEmoji VulcanSaluteMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f596, 0x1f3fd }),
            name: "vulcan salute: medium skin tone",
            searchTerms: new string[] { "vulcan", "salute", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 188
        );

        /* üññüèæ */
        public static readonly SingleEmoji VulcanSaluteMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f596, 0x1f3fe }),
            name: "vulcan salute: medium-dark skin tone",
            searchTerms: new string[] { "vulcan", "salute", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 189
        );

        /* üññüèø */
        public static readonly SingleEmoji VulcanSaluteDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f596, 0x1f3ff }),
            name: "vulcan salute: dark skin tone",
            searchTerms: new string[] { "vulcan", "salute", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_OPEN,
            hasGlyph: true,
            sortOrder: 190
        );

        /* üëå */
        public static readonly SingleEmoji OkHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44c }),
            name: "OK hand",
            searchTerms: new string[] { "ok", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 191
        );

        /* üëåüèª */
        public static readonly SingleEmoji OkHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44c, 0x1f3fb }),
            name: "OK hand: light skin tone",
            searchTerms: new string[] { "ok", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 192
        );

        /* üëåüèº */
        public static readonly SingleEmoji OkHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44c, 0x1f3fc }),
            name: "OK hand: medium-light skin tone",
            searchTerms: new string[] { "ok", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 193
        );

        /* üëåüèΩ */
        public static readonly SingleEmoji OkHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44c, 0x1f3fd }),
            name: "OK hand: medium skin tone",
            searchTerms: new string[] { "ok", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 194
        );

        /* üëåüèæ */
        public static readonly SingleEmoji OkHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44c, 0x1f3fe }),
            name: "OK hand: medium-dark skin tone",
            searchTerms: new string[] { "ok", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 195
        );

        /* üëåüèø */
        public static readonly SingleEmoji OkHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44c, 0x1f3ff }),
            name: "OK hand: dark skin tone",
            searchTerms: new string[] { "ok", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 196
        );

        /* ü§è */
        public static readonly SingleEmoji PinchingHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f90f }),
            name: "pinching hand",
            searchTerms: new string[] { "pinching", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 197
        );

        /* ü§èüèª */
        public static readonly SingleEmoji PinchingHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f90f, 0x1f3fb }),
            name: "pinching hand: light skin tone",
            searchTerms: new string[] { "pinching", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 198
        );

        /* ü§èüèº */
        public static readonly SingleEmoji PinchingHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f90f, 0x1f3fc }),
            name: "pinching hand: medium-light skin tone",
            searchTerms: new string[] { "pinching", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 199
        );

        /* ü§èüèΩ */
        public static readonly SingleEmoji PinchingHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f90f, 0x1f3fd }),
            name: "pinching hand: medium skin tone",
            searchTerms: new string[] { "pinching", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 200
        );

        /* ü§èüèæ */
        public static readonly SingleEmoji PinchingHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f90f, 0x1f3fe }),
            name: "pinching hand: medium-dark skin tone",
            searchTerms: new string[] { "pinching", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 201
        );

        /* ü§èüèø */
        public static readonly SingleEmoji PinchingHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f90f, 0x1f3ff }),
            name: "pinching hand: dark skin tone",
            searchTerms: new string[] { "pinching", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 202
        );

        /* ‚úåÔ∏è */
        public static readonly SingleEmoji VictoryHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270c, 0xfe0f }),
            name: "victory hand",
            searchTerms: new string[] { "victory", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 203
        );

        /* ‚úåüèª */
        public static readonly SingleEmoji VictoryHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270c, 0x1f3fb }),
            name: "victory hand: light skin tone",
            searchTerms: new string[] { "victory", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 205
        );

        /* ‚úåüèº */
        public static readonly SingleEmoji VictoryHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270c, 0x1f3fc }),
            name: "victory hand: medium-light skin tone",
            searchTerms: new string[] { "victory", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 206
        );

        /* ‚úåüèΩ */
        public static readonly SingleEmoji VictoryHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270c, 0x1f3fd }),
            name: "victory hand: medium skin tone",
            searchTerms: new string[] { "victory", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 207
        );

        /* ‚úåüèæ */
        public static readonly SingleEmoji VictoryHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270c, 0x1f3fe }),
            name: "victory hand: medium-dark skin tone",
            searchTerms: new string[] { "victory", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 208
        );

        /* ‚úåüèø */
        public static readonly SingleEmoji VictoryHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270c, 0x1f3ff }),
            name: "victory hand: dark skin tone",
            searchTerms: new string[] { "victory", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 209
        );

        /* ü§û */
        public static readonly SingleEmoji CrossedFingers = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91e }),
            name: "crossed fingers",
            searchTerms: new string[] { "crossed", "fingers" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 210
        );

        /* ü§ûüèª */
        public static readonly SingleEmoji CrossedFingersLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91e, 0x1f3fb }),
            name: "crossed fingers: light skin tone",
            searchTerms: new string[] { "crossed", "fingers", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 211
        );

        /* ü§ûüèº */
        public static readonly SingleEmoji CrossedFingersMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91e, 0x1f3fc }),
            name: "crossed fingers: medium-light skin tone",
            searchTerms: new string[] { "crossed", "fingers", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 212
        );

        /* ü§ûüèΩ */
        public static readonly SingleEmoji CrossedFingersMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91e, 0x1f3fd }),
            name: "crossed fingers: medium skin tone",
            searchTerms: new string[] { "crossed", "fingers", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 213
        );

        /* ü§ûüèæ */
        public static readonly SingleEmoji CrossedFingersMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91e, 0x1f3fe }),
            name: "crossed fingers: medium-dark skin tone",
            searchTerms: new string[] { "crossed", "fingers", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 214
        );

        /* ü§ûüèø */
        public static readonly SingleEmoji CrossedFingersDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91e, 0x1f3ff }),
            name: "crossed fingers: dark skin tone",
            searchTerms: new string[] { "crossed", "fingers", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 215
        );

        /* ü§ü */
        public static readonly SingleEmoji LoveYouGesture = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91f }),
            name: "love-you gesture",
            searchTerms: new string[] { "love", "you", "gesture" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 216
        );

        /* ü§üüèª */
        public static readonly SingleEmoji LoveYouGestureLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91f, 0x1f3fb }),
            name: "love-you gesture: light skin tone",
            searchTerms: new string[] { "love", "you", "gesture", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 217
        );

        /* ü§üüèº */
        public static readonly SingleEmoji LoveYouGestureMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91f, 0x1f3fc }),
            name: "love-you gesture: medium-light skin tone",
            searchTerms: new string[] { "love", "you", "gesture", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 218
        );

        /* ü§üüèΩ */
        public static readonly SingleEmoji LoveYouGestureMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91f, 0x1f3fd }),
            name: "love-you gesture: medium skin tone",
            searchTerms: new string[] { "love", "you", "gesture", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 219
        );

        /* ü§üüèæ */
        public static readonly SingleEmoji LoveYouGestureMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91f, 0x1f3fe }),
            name: "love-you gesture: medium-dark skin tone",
            searchTerms: new string[] { "love", "you", "gesture", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 220
        );

        /* ü§üüèø */
        public static readonly SingleEmoji LoveYouGestureDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91f, 0x1f3ff }),
            name: "love-you gesture: dark skin tone",
            searchTerms: new string[] { "love", "you", "gesture", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 221
        );

        /* ü§ò */
        public static readonly SingleEmoji SignHorns = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f918 }),
            name: "sign of the horns",
            searchTerms: new string[] { "sign", "horns" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 222
        );

        /* ü§òüèª */
        public static readonly SingleEmoji SignHornsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f918, 0x1f3fb }),
            name: "sign of the horns: light skin tone",
            searchTerms: new string[] { "sign", "horns", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 223
        );

        /* ü§òüèº */
        public static readonly SingleEmoji SignHornsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f918, 0x1f3fc }),
            name: "sign of the horns: medium-light skin tone",
            searchTerms: new string[] { "sign", "horns", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 224
        );

        /* ü§òüèΩ */
        public static readonly SingleEmoji SignHornsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f918, 0x1f3fd }),
            name: "sign of the horns: medium skin tone",
            searchTerms: new string[] { "sign", "horns", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 225
        );

        /* ü§òüèæ */
        public static readonly SingleEmoji SignHornsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f918, 0x1f3fe }),
            name: "sign of the horns: medium-dark skin tone",
            searchTerms: new string[] { "sign", "horns", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 226
        );

        /* ü§òüèø */
        public static readonly SingleEmoji SignHornsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f918, 0x1f3ff }),
            name: "sign of the horns: dark skin tone",
            searchTerms: new string[] { "sign", "horns", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 227
        );

        /* ü§ô */
        public static readonly SingleEmoji CallMeHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f919 }),
            name: "call me hand",
            searchTerms: new string[] { "call", "me", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 228
        );

        /* ü§ôüèª */
        public static readonly SingleEmoji CallMeHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f919, 0x1f3fb }),
            name: "call me hand: light skin tone",
            searchTerms: new string[] { "call", "me", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 229
        );

        /* ü§ôüèº */
        public static readonly SingleEmoji CallMeHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f919, 0x1f3fc }),
            name: "call me hand: medium-light skin tone",
            searchTerms: new string[] { "call", "me", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 230
        );

        /* ü§ôüèΩ */
        public static readonly SingleEmoji CallMeHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f919, 0x1f3fd }),
            name: "call me hand: medium skin tone",
            searchTerms: new string[] { "call", "me", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 231
        );

        /* ü§ôüèæ */
        public static readonly SingleEmoji CallMeHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f919, 0x1f3fe }),
            name: "call me hand: medium-dark skin tone",
            searchTerms: new string[] { "call", "me", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 232
        );

        /* ü§ôüèø */
        public static readonly SingleEmoji CallMeHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f919, 0x1f3ff }),
            name: "call me hand: dark skin tone",
            searchTerms: new string[] { "call", "me", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_PARTIAL,
            hasGlyph: true,
            sortOrder: 233
        );

        /* üëà */
        public static readonly SingleEmoji BackhandIndexPointingLeft = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f448 }),
            name: "backhand index pointing left",
            searchTerms: new string[] { "backhand", "index", "pointing", "left" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 234
        );

        /* üëàüèª */
        public static readonly SingleEmoji BackhandIndexPointingLeftLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f448, 0x1f3fb }),
            name: "backhand index pointing left: light skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "left", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 235
        );

        /* üëàüèº */
        public static readonly SingleEmoji BackhandIndexPointingLeftMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f448, 0x1f3fc }),
            name: "backhand index pointing left: medium-light skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "left", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 236
        );

        /* üëàüèΩ */
        public static readonly SingleEmoji BackhandIndexPointingLeftMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f448, 0x1f3fd }),
            name: "backhand index pointing left: medium skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "left", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 237
        );

        /* üëàüèæ */
        public static readonly SingleEmoji BackhandIndexPointingLeftMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f448, 0x1f3fe }),
            name: "backhand index pointing left: medium-dark skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "left", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 238
        );

        /* üëàüèø */
        public static readonly SingleEmoji BackhandIndexPointingLeftDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f448, 0x1f3ff }),
            name: "backhand index pointing left: dark skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "left", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 239
        );

        /* üëâ */
        public static readonly SingleEmoji BackhandIndexPointingRight = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f449 }),
            name: "backhand index pointing right",
            searchTerms: new string[] { "backhand", "index", "pointing", "right" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 240
        );

        /* üëâüèª */
        public static readonly SingleEmoji BackhandIndexPointingRightLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f449, 0x1f3fb }),
            name: "backhand index pointing right: light skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "right", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 241
        );

        /* üëâüèº */
        public static readonly SingleEmoji BackhandIndexPointingRightMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f449, 0x1f3fc }),
            name: "backhand index pointing right: medium-light skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "right", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 242
        );

        /* üëâüèΩ */
        public static readonly SingleEmoji BackhandIndexPointingRightMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f449, 0x1f3fd }),
            name: "backhand index pointing right: medium skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "right", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 243
        );

        /* üëâüèæ */
        public static readonly SingleEmoji BackhandIndexPointingRightMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f449, 0x1f3fe }),
            name: "backhand index pointing right: medium-dark skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "right", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 244
        );

        /* üëâüèø */
        public static readonly SingleEmoji BackhandIndexPointingRightDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f449, 0x1f3ff }),
            name: "backhand index pointing right: dark skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "right", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 245
        );

        /* üëÜ */
        public static readonly SingleEmoji BackhandIndexPointingUp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f446 }),
            name: "backhand index pointing up",
            searchTerms: new string[] { "backhand", "index", "pointing", "up" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 246
        );

        /* üëÜüèª */
        public static readonly SingleEmoji BackhandIndexPointingUpLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f446, 0x1f3fb }),
            name: "backhand index pointing up: light skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "up", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 247
        );

        /* üëÜüèº */
        public static readonly SingleEmoji BackhandIndexPointingUpMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f446, 0x1f3fc }),
            name: "backhand index pointing up: medium-light skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "up", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 248
        );

        /* üëÜüèΩ */
        public static readonly SingleEmoji BackhandIndexPointingUpMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f446, 0x1f3fd }),
            name: "backhand index pointing up: medium skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "up", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 249
        );

        /* üëÜüèæ */
        public static readonly SingleEmoji BackhandIndexPointingUpMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f446, 0x1f3fe }),
            name: "backhand index pointing up: medium-dark skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "up", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 250
        );

        /* üëÜüèø */
        public static readonly SingleEmoji BackhandIndexPointingUpDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f446, 0x1f3ff }),
            name: "backhand index pointing up: dark skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "up", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 251
        );

        /* üñï */
        public static readonly SingleEmoji MiddleFinger = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f595 }),
            name: "middle finger",
            searchTerms: new string[] { "middle", "finger" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 252
        );

        /* üñïüèª */
        public static readonly SingleEmoji MiddleFingerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f595, 0x1f3fb }),
            name: "middle finger: light skin tone",
            searchTerms: new string[] { "middle", "finger", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 253
        );

        /* üñïüèº */
        public static readonly SingleEmoji MiddleFingerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f595, 0x1f3fc }),
            name: "middle finger: medium-light skin tone",
            searchTerms: new string[] { "middle", "finger", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 254
        );

        /* üñïüèΩ */
        public static readonly SingleEmoji MiddleFingerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f595, 0x1f3fd }),
            name: "middle finger: medium skin tone",
            searchTerms: new string[] { "middle", "finger", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 255
        );

        /* üñïüèæ */
        public static readonly SingleEmoji MiddleFingerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f595, 0x1f3fe }),
            name: "middle finger: medium-dark skin tone",
            searchTerms: new string[] { "middle", "finger", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 256
        );

        /* üñïüèø */
        public static readonly SingleEmoji MiddleFingerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f595, 0x1f3ff }),
            name: "middle finger: dark skin tone",
            searchTerms: new string[] { "middle", "finger", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 257
        );

        /* üëá */
        public static readonly SingleEmoji BackhandIndexPointingDown = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f447 }),
            name: "backhand index pointing down",
            searchTerms: new string[] { "backhand", "index", "pointing", "down" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 258
        );

        /* üëáüèª */
        public static readonly SingleEmoji BackhandIndexPointingDownLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f447, 0x1f3fb }),
            name: "backhand index pointing down: light skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "down", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 259
        );

        /* üëáüèº */
        public static readonly SingleEmoji BackhandIndexPointingDownMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f447, 0x1f3fc }),
            name: "backhand index pointing down: medium-light skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "down", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 260
        );

        /* üëáüèΩ */
        public static readonly SingleEmoji BackhandIndexPointingDownMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f447, 0x1f3fd }),
            name: "backhand index pointing down: medium skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "down", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 261
        );

        /* üëáüèæ */
        public static readonly SingleEmoji BackhandIndexPointingDownMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f447, 0x1f3fe }),
            name: "backhand index pointing down: medium-dark skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "down", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 262
        );

        /* üëáüèø */
        public static readonly SingleEmoji BackhandIndexPointingDownDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f447, 0x1f3ff }),
            name: "backhand index pointing down: dark skin tone",
            searchTerms: new string[] { "backhand", "index", "pointing", "down", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 263
        );

        /* ‚òùÔ∏è */
        public static readonly SingleEmoji IndexPointingUp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x261d, 0xfe0f }),
            name: "index pointing up",
            searchTerms: new string[] { "index", "pointing", "up" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 264
        );

        /* ‚òùüèª */
        public static readonly SingleEmoji IndexPointingUpLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x261d, 0x1f3fb }),
            name: "index pointing up: light skin tone",
            searchTerms: new string[] { "index", "pointing", "up", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 266
        );

        /* ‚òùüèº */
        public static readonly SingleEmoji IndexPointingUpMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x261d, 0x1f3fc }),
            name: "index pointing up: medium-light skin tone",
            searchTerms: new string[] { "index", "pointing", "up", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 267
        );

        /* ‚òùüèΩ */
        public static readonly SingleEmoji IndexPointingUpMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x261d, 0x1f3fd }),
            name: "index pointing up: medium skin tone",
            searchTerms: new string[] { "index", "pointing", "up", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 268
        );

        /* ‚òùüèæ */
        public static readonly SingleEmoji IndexPointingUpMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x261d, 0x1f3fe }),
            name: "index pointing up: medium-dark skin tone",
            searchTerms: new string[] { "index", "pointing", "up", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 269
        );

        /* ‚òùüèø */
        public static readonly SingleEmoji IndexPointingUpDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x261d, 0x1f3ff }),
            name: "index pointing up: dark skin tone",
            searchTerms: new string[] { "index", "pointing", "up", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_SINGLE_FINGER,
            hasGlyph: true,
            sortOrder: 270
        );

        /* üëç */
        public static readonly SingleEmoji ThumbsUp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44d }),
            name: "thumbs up",
            searchTerms: new string[] { "thumbs", "up" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 271
        );

        /* üëçüèª */
        public static readonly SingleEmoji ThumbsUpLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44d, 0x1f3fb }),
            name: "thumbs up: light skin tone",
            searchTerms: new string[] { "thumbs", "up", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 272
        );

        /* üëçüèº */
        public static readonly SingleEmoji ThumbsUpMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44d, 0x1f3fc }),
            name: "thumbs up: medium-light skin tone",
            searchTerms: new string[] { "thumbs", "up", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 273
        );

        /* üëçüèΩ */
        public static readonly SingleEmoji ThumbsUpMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44d, 0x1f3fd }),
            name: "thumbs up: medium skin tone",
            searchTerms: new string[] { "thumbs", "up", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 274
        );

        /* üëçüèæ */
        public static readonly SingleEmoji ThumbsUpMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44d, 0x1f3fe }),
            name: "thumbs up: medium-dark skin tone",
            searchTerms: new string[] { "thumbs", "up", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 275
        );

        /* üëçüèø */
        public static readonly SingleEmoji ThumbsUpDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44d, 0x1f3ff }),
            name: "thumbs up: dark skin tone",
            searchTerms: new string[] { "thumbs", "up", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 276
        );

        /* üëé */
        public static readonly SingleEmoji ThumbsDown = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44e }),
            name: "thumbs down",
            searchTerms: new string[] { "thumbs", "down" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 277
        );

        /* üëéüèª */
        public static readonly SingleEmoji ThumbsDownLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44e, 0x1f3fb }),
            name: "thumbs down: light skin tone",
            searchTerms: new string[] { "thumbs", "down", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 278
        );

        /* üëéüèº */
        public static readonly SingleEmoji ThumbsDownMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44e, 0x1f3fc }),
            name: "thumbs down: medium-light skin tone",
            searchTerms: new string[] { "thumbs", "down", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 279
        );

        /* üëéüèΩ */
        public static readonly SingleEmoji ThumbsDownMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44e, 0x1f3fd }),
            name: "thumbs down: medium skin tone",
            searchTerms: new string[] { "thumbs", "down", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 280
        );

        /* üëéüèæ */
        public static readonly SingleEmoji ThumbsDownMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44e, 0x1f3fe }),
            name: "thumbs down: medium-dark skin tone",
            searchTerms: new string[] { "thumbs", "down", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 281
        );

        /* üëéüèø */
        public static readonly SingleEmoji ThumbsDownDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44e, 0x1f3ff }),
            name: "thumbs down: dark skin tone",
            searchTerms: new string[] { "thumbs", "down", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 282
        );

        /* ‚úä */
        public static readonly SingleEmoji RaisedFist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270a }),
            name: "raised fist",
            searchTerms: new string[] { "raised", "fist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 283
        );

        /* ‚úäüèª */
        public static readonly SingleEmoji RaisedFistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270a, 0x1f3fb }),
            name: "raised fist: light skin tone",
            searchTerms: new string[] { "raised", "fist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 284
        );

        /* ‚úäüèº */
        public static readonly SingleEmoji RaisedFistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270a, 0x1f3fc }),
            name: "raised fist: medium-light skin tone",
            searchTerms: new string[] { "raised", "fist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 285
        );

        /* ‚úäüèΩ */
        public static readonly SingleEmoji RaisedFistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270a, 0x1f3fd }),
            name: "raised fist: medium skin tone",
            searchTerms: new string[] { "raised", "fist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 286
        );

        /* ‚úäüèæ */
        public static readonly SingleEmoji RaisedFistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270a, 0x1f3fe }),
            name: "raised fist: medium-dark skin tone",
            searchTerms: new string[] { "raised", "fist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 287
        );

        /* ‚úäüèø */
        public static readonly SingleEmoji RaisedFistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270a, 0x1f3ff }),
            name: "raised fist: dark skin tone",
            searchTerms: new string[] { "raised", "fist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 288
        );

        /* üëä */
        public static readonly SingleEmoji OncomingFist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44a }),
            name: "oncoming fist",
            searchTerms: new string[] { "oncoming", "fist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 289
        );

        /* üëäüèª */
        public static readonly SingleEmoji OncomingFistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44a, 0x1f3fb }),
            name: "oncoming fist: light skin tone",
            searchTerms: new string[] { "oncoming", "fist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 290
        );

        /* üëäüèº */
        public static readonly SingleEmoji OncomingFistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44a, 0x1f3fc }),
            name: "oncoming fist: medium-light skin tone",
            searchTerms: new string[] { "oncoming", "fist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 291
        );

        /* üëäüèΩ */
        public static readonly SingleEmoji OncomingFistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44a, 0x1f3fd }),
            name: "oncoming fist: medium skin tone",
            searchTerms: new string[] { "oncoming", "fist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 292
        );

        /* üëäüèæ */
        public static readonly SingleEmoji OncomingFistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44a, 0x1f3fe }),
            name: "oncoming fist: medium-dark skin tone",
            searchTerms: new string[] { "oncoming", "fist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 293
        );

        /* üëäüèø */
        public static readonly SingleEmoji OncomingFistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44a, 0x1f3ff }),
            name: "oncoming fist: dark skin tone",
            searchTerms: new string[] { "oncoming", "fist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 294
        );

        /* ü§õ */
        public static readonly SingleEmoji LeftFacingFist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91b }),
            name: "left-facing fist",
            searchTerms: new string[] { "left", "facing", "fist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 295
        );

        /* ü§õüèª */
        public static readonly SingleEmoji LeftFacingFistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91b, 0x1f3fb }),
            name: "left-facing fist: light skin tone",
            searchTerms: new string[] { "left", "facing", "fist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 296
        );

        /* ü§õüèº */
        public static readonly SingleEmoji LeftFacingFistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91b, 0x1f3fc }),
            name: "left-facing fist: medium-light skin tone",
            searchTerms: new string[] { "left", "facing", "fist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 297
        );

        /* ü§õüèΩ */
        public static readonly SingleEmoji LeftFacingFistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91b, 0x1f3fd }),
            name: "left-facing fist: medium skin tone",
            searchTerms: new string[] { "left", "facing", "fist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 298
        );

        /* ü§õüèæ */
        public static readonly SingleEmoji LeftFacingFistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91b, 0x1f3fe }),
            name: "left-facing fist: medium-dark skin tone",
            searchTerms: new string[] { "left", "facing", "fist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 299
        );

        /* ü§õüèø */
        public static readonly SingleEmoji LeftFacingFistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91b, 0x1f3ff }),
            name: "left-facing fist: dark skin tone",
            searchTerms: new string[] { "left", "facing", "fist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 300
        );

        /* ü§ú */
        public static readonly SingleEmoji RightFacingFist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91c }),
            name: "right-facing fist",
            searchTerms: new string[] { "right", "facing", "fist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 301
        );

        /* ü§úüèª */
        public static readonly SingleEmoji RightFacingFistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91c, 0x1f3fb }),
            name: "right-facing fist: light skin tone",
            searchTerms: new string[] { "right", "facing", "fist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 302
        );

        /* ü§úüèº */
        public static readonly SingleEmoji RightFacingFistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91c, 0x1f3fc }),
            name: "right-facing fist: medium-light skin tone",
            searchTerms: new string[] { "right", "facing", "fist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 303
        );

        /* ü§úüèΩ */
        public static readonly SingleEmoji RightFacingFistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91c, 0x1f3fd }),
            name: "right-facing fist: medium skin tone",
            searchTerms: new string[] { "right", "facing", "fist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 304
        );

        /* ü§úüèæ */
        public static readonly SingleEmoji RightFacingFistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91c, 0x1f3fe }),
            name: "right-facing fist: medium-dark skin tone",
            searchTerms: new string[] { "right", "facing", "fist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 305
        );

        /* ü§úüèø */
        public static readonly SingleEmoji RightFacingFistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91c, 0x1f3ff }),
            name: "right-facing fist: dark skin tone",
            searchTerms: new string[] { "right", "facing", "fist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_FINGERS_CLOSED,
            hasGlyph: true,
            sortOrder: 306
        );

        /* üëè */
        public static readonly SingleEmoji ClappingHands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44f }),
            name: "clapping hands",
            searchTerms: new string[] { "clapping", "hands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 307
        );

        /* üëèüèª */
        public static readonly SingleEmoji ClappingHandsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44f, 0x1f3fb }),
            name: "clapping hands: light skin tone",
            searchTerms: new string[] { "clapping", "hands", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 308
        );

        /* üëèüèº */
        public static readonly SingleEmoji ClappingHandsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44f, 0x1f3fc }),
            name: "clapping hands: medium-light skin tone",
            searchTerms: new string[] { "clapping", "hands", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 309
        );

        /* üëèüèΩ */
        public static readonly SingleEmoji ClappingHandsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44f, 0x1f3fd }),
            name: "clapping hands: medium skin tone",
            searchTerms: new string[] { "clapping", "hands", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 310
        );

        /* üëèüèæ */
        public static readonly SingleEmoji ClappingHandsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44f, 0x1f3fe }),
            name: "clapping hands: medium-dark skin tone",
            searchTerms: new string[] { "clapping", "hands", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 311
        );

        /* üëèüèø */
        public static readonly SingleEmoji ClappingHandsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f44f, 0x1f3ff }),
            name: "clapping hands: dark skin tone",
            searchTerms: new string[] { "clapping", "hands", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 312
        );

        /* üôå */
        public static readonly SingleEmoji RaisingHands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64c }),
            name: "raising hands",
            searchTerms: new string[] { "raising", "hands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 313
        );

        /* üôåüèª */
        public static readonly SingleEmoji RaisingHandsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64c, 0x1f3fb }),
            name: "raising hands: light skin tone",
            searchTerms: new string[] { "raising", "hands", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 314
        );

        /* üôåüèº */
        public static readonly SingleEmoji RaisingHandsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64c, 0x1f3fc }),
            name: "raising hands: medium-light skin tone",
            searchTerms: new string[] { "raising", "hands", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 315
        );

        /* üôåüèΩ */
        public static readonly SingleEmoji RaisingHandsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64c, 0x1f3fd }),
            name: "raising hands: medium skin tone",
            searchTerms: new string[] { "raising", "hands", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 316
        );

        /* üôåüèæ */
        public static readonly SingleEmoji RaisingHandsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64c, 0x1f3fe }),
            name: "raising hands: medium-dark skin tone",
            searchTerms: new string[] { "raising", "hands", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 317
        );

        /* üôåüèø */
        public static readonly SingleEmoji RaisingHandsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64c, 0x1f3ff }),
            name: "raising hands: dark skin tone",
            searchTerms: new string[] { "raising", "hands", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 318
        );

        /* üëê */
        public static readonly SingleEmoji OpenHands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f450 }),
            name: "open hands",
            searchTerms: new string[] { "open", "hands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 319
        );

        /* üëêüèª */
        public static readonly SingleEmoji OpenHandsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f450, 0x1f3fb }),
            name: "open hands: light skin tone",
            searchTerms: new string[] { "open", "hands", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 320
        );

        /* üëêüèº */
        public static readonly SingleEmoji OpenHandsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f450, 0x1f3fc }),
            name: "open hands: medium-light skin tone",
            searchTerms: new string[] { "open", "hands", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 321
        );

        /* üëêüèΩ */
        public static readonly SingleEmoji OpenHandsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f450, 0x1f3fd }),
            name: "open hands: medium skin tone",
            searchTerms: new string[] { "open", "hands", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 322
        );

        /* üëêüèæ */
        public static readonly SingleEmoji OpenHandsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f450, 0x1f3fe }),
            name: "open hands: medium-dark skin tone",
            searchTerms: new string[] { "open", "hands", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 323
        );

        /* üëêüèø */
        public static readonly SingleEmoji OpenHandsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f450, 0x1f3ff }),
            name: "open hands: dark skin tone",
            searchTerms: new string[] { "open", "hands", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 324
        );

        /* ü§≤ */
        public static readonly SingleEmoji PalmsUpTogether = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f932 }),
            name: "palms up together",
            searchTerms: new string[] { "palms", "up", "together" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 325
        );

        /* ü§≤üèª */
        public static readonly SingleEmoji PalmsUpTogetherLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f932, 0x1f3fb }),
            name: "palms up together: light skin tone",
            searchTerms: new string[] { "palms", "up", "together", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 326
        );

        /* ü§≤üèº */
        public static readonly SingleEmoji PalmsUpTogetherMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f932, 0x1f3fc }),
            name: "palms up together: medium-light skin tone",
            searchTerms: new string[] { "palms", "up", "together", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 327
        );

        /* ü§≤üèΩ */
        public static readonly SingleEmoji PalmsUpTogetherMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f932, 0x1f3fd }),
            name: "palms up together: medium skin tone",
            searchTerms: new string[] { "palms", "up", "together", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 328
        );

        /* ü§≤üèæ */
        public static readonly SingleEmoji PalmsUpTogetherMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f932, 0x1f3fe }),
            name: "palms up together: medium-dark skin tone",
            searchTerms: new string[] { "palms", "up", "together", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 329
        );

        /* ü§≤üèø */
        public static readonly SingleEmoji PalmsUpTogetherDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f932, 0x1f3ff }),
            name: "palms up together: dark skin tone",
            searchTerms: new string[] { "palms", "up", "together", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 330
        );

        /* ü§ù */
        public static readonly SingleEmoji Handshake = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f91d }),
            name: "handshake",
            searchTerms: new string[] { "handshake" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 331
        );

        /* üôè */
        public static readonly SingleEmoji FoldedHands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64f }),
            name: "folded hands",
            searchTerms: new string[] { "folded", "hands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 332
        );

        /* üôèüèª */
        public static readonly SingleEmoji FoldedHandsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64f, 0x1f3fb }),
            name: "folded hands: light skin tone",
            searchTerms: new string[] { "folded", "hands", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 333
        );

        /* üôèüèº */
        public static readonly SingleEmoji FoldedHandsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64f, 0x1f3fc }),
            name: "folded hands: medium-light skin tone",
            searchTerms: new string[] { "folded", "hands", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 334
        );

        /* üôèüèΩ */
        public static readonly SingleEmoji FoldedHandsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64f, 0x1f3fd }),
            name: "folded hands: medium skin tone",
            searchTerms: new string[] { "folded", "hands", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 335
        );

        /* üôèüèæ */
        public static readonly SingleEmoji FoldedHandsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64f, 0x1f3fe }),
            name: "folded hands: medium-dark skin tone",
            searchTerms: new string[] { "folded", "hands", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 336
        );

        /* üôèüèø */
        public static readonly SingleEmoji FoldedHandsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64f, 0x1f3ff }),
            name: "folded hands: dark skin tone",
            searchTerms: new string[] { "folded", "hands", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HANDS,
            hasGlyph: true,
            sortOrder: 337
        );

        /* ‚úçÔ∏è */
        public static readonly SingleEmoji WritingHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270d, 0xfe0f }),
            name: "writing hand",
            searchTerms: new string[] { "writing", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 338
        );

        /* ‚úçüèª */
        public static readonly SingleEmoji WritingHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270d, 0x1f3fb }),
            name: "writing hand: light skin tone",
            searchTerms: new string[] { "writing", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 340
        );

        /* ‚úçüèº */
        public static readonly SingleEmoji WritingHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270d, 0x1f3fc }),
            name: "writing hand: medium-light skin tone",
            searchTerms: new string[] { "writing", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 341
        );

        /* ‚úçüèΩ */
        public static readonly SingleEmoji WritingHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270d, 0x1f3fd }),
            name: "writing hand: medium skin tone",
            searchTerms: new string[] { "writing", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 342
        );

        /* ‚úçüèæ */
        public static readonly SingleEmoji WritingHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270d, 0x1f3fe }),
            name: "writing hand: medium-dark skin tone",
            searchTerms: new string[] { "writing", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 343
        );

        /* ‚úçüèø */
        public static readonly SingleEmoji WritingHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270d, 0x1f3ff }),
            name: "writing hand: dark skin tone",
            searchTerms: new string[] { "writing", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 344
        );

        /* üíÖ */
        public static readonly SingleEmoji NailPolish = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f485 }),
            name: "nail polish",
            searchTerms: new string[] { "nail", "polish" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 345
        );

        /* üíÖüèª */
        public static readonly SingleEmoji NailPolishLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f485, 0x1f3fb }),
            name: "nail polish: light skin tone",
            searchTerms: new string[] { "nail", "polish", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 346
        );

        /* üíÖüèº */
        public static readonly SingleEmoji NailPolishMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f485, 0x1f3fc }),
            name: "nail polish: medium-light skin tone",
            searchTerms: new string[] { "nail", "polish", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 347
        );

        /* üíÖüèΩ */
        public static readonly SingleEmoji NailPolishMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f485, 0x1f3fd }),
            name: "nail polish: medium skin tone",
            searchTerms: new string[] { "nail", "polish", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 348
        );

        /* üíÖüèæ */
        public static readonly SingleEmoji NailPolishMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f485, 0x1f3fe }),
            name: "nail polish: medium-dark skin tone",
            searchTerms: new string[] { "nail", "polish", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 349
        );

        /* üíÖüèø */
        public static readonly SingleEmoji NailPolishDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f485, 0x1f3ff }),
            name: "nail polish: dark skin tone",
            searchTerms: new string[] { "nail", "polish", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 350
        );

        /* ü§≥ */
        public static readonly SingleEmoji Selfie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f933 }),
            name: "selfie",
            searchTerms: new string[] { "selfie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 351
        );

        /* ü§≥üèª */
        public static readonly SingleEmoji SelfieLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f933, 0x1f3fb }),
            name: "selfie: light skin tone",
            searchTerms: new string[] { "selfie", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 352
        );

        /* ü§≥üèº */
        public static readonly SingleEmoji SelfieMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f933, 0x1f3fc }),
            name: "selfie: medium-light skin tone",
            searchTerms: new string[] { "selfie", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 353
        );

        /* ü§≥üèΩ */
        public static readonly SingleEmoji SelfieMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f933, 0x1f3fd }),
            name: "selfie: medium skin tone",
            searchTerms: new string[] { "selfie", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 354
        );

        /* ü§≥üèæ */
        public static readonly SingleEmoji SelfieMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f933, 0x1f3fe }),
            name: "selfie: medium-dark skin tone",
            searchTerms: new string[] { "selfie", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 355
        );

        /* ü§≥üèø */
        public static readonly SingleEmoji SelfieDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f933, 0x1f3ff }),
            name: "selfie: dark skin tone",
            searchTerms: new string[] { "selfie", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.HAND_PROP,
            hasGlyph: true,
            sortOrder: 356
        );

        /* üí™ */
        public static readonly SingleEmoji FlexedBiceps = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4aa }),
            name: "flexed biceps",
            searchTerms: new string[] { "flexed", "biceps" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 357
        );

        /* üí™üèª */
        public static readonly SingleEmoji FlexedBicepsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4aa, 0x1f3fb }),
            name: "flexed biceps: light skin tone",
            searchTerms: new string[] { "flexed", "biceps", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 358
        );

        /* üí™üèº */
        public static readonly SingleEmoji FlexedBicepsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4aa, 0x1f3fc }),
            name: "flexed biceps: medium-light skin tone",
            searchTerms: new string[] { "flexed", "biceps", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 359
        );

        /* üí™üèΩ */
        public static readonly SingleEmoji FlexedBicepsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4aa, 0x1f3fd }),
            name: "flexed biceps: medium skin tone",
            searchTerms: new string[] { "flexed", "biceps", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 360
        );

        /* üí™üèæ */
        public static readonly SingleEmoji FlexedBicepsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4aa, 0x1f3fe }),
            name: "flexed biceps: medium-dark skin tone",
            searchTerms: new string[] { "flexed", "biceps", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 361
        );

        /* üí™üèø */
        public static readonly SingleEmoji FlexedBicepsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4aa, 0x1f3ff }),
            name: "flexed biceps: dark skin tone",
            searchTerms: new string[] { "flexed", "biceps", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 362
        );

        /* ü¶æ */
        public static readonly SingleEmoji MechanicalArm = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9be }),
            name: "mechanical arm",
            searchTerms: new string[] { "mechanical", "arm" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 363
        );

        /* ü¶ø */
        public static readonly SingleEmoji MechanicalLeg = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9bf }),
            name: "mechanical leg",
            searchTerms: new string[] { "mechanical", "leg" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 364
        );

        /* ü¶µ */
        public static readonly SingleEmoji Leg = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b5 }),
            name: "leg",
            searchTerms: new string[] { "leg" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 365
        );

        /* ü¶µüèª */
        public static readonly SingleEmoji LegLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b5, 0x1f3fb }),
            name: "leg: light skin tone",
            searchTerms: new string[] { "leg", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 366
        );

        /* ü¶µüèº */
        public static readonly SingleEmoji LegMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b5, 0x1f3fc }),
            name: "leg: medium-light skin tone",
            searchTerms: new string[] { "leg", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 367
        );

        /* ü¶µüèΩ */
        public static readonly SingleEmoji LegMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b5, 0x1f3fd }),
            name: "leg: medium skin tone",
            searchTerms: new string[] { "leg", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 368
        );

        /* ü¶µüèæ */
        public static readonly SingleEmoji LegMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b5, 0x1f3fe }),
            name: "leg: medium-dark skin tone",
            searchTerms: new string[] { "leg", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 369
        );

        /* ü¶µüèø */
        public static readonly SingleEmoji LegDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b5, 0x1f3ff }),
            name: "leg: dark skin tone",
            searchTerms: new string[] { "leg", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 370
        );

        /* ü¶∂ */
        public static readonly SingleEmoji Foot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b6 }),
            name: "foot",
            searchTerms: new string[] { "foot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 371
        );

        /* ü¶∂üèª */
        public static readonly SingleEmoji FootLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b6, 0x1f3fb }),
            name: "foot: light skin tone",
            searchTerms: new string[] { "foot", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 372
        );

        /* ü¶∂üèº */
        public static readonly SingleEmoji FootMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b6, 0x1f3fc }),
            name: "foot: medium-light skin tone",
            searchTerms: new string[] { "foot", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 373
        );

        /* ü¶∂üèΩ */
        public static readonly SingleEmoji FootMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b6, 0x1f3fd }),
            name: "foot: medium skin tone",
            searchTerms: new string[] { "foot", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 374
        );

        /* ü¶∂üèæ */
        public static readonly SingleEmoji FootMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b6, 0x1f3fe }),
            name: "foot: medium-dark skin tone",
            searchTerms: new string[] { "foot", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 375
        );

        /* ü¶∂üèø */
        public static readonly SingleEmoji FootDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b6, 0x1f3ff }),
            name: "foot: dark skin tone",
            searchTerms: new string[] { "foot", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 376
        );

        /* üëÇ */
        public static readonly SingleEmoji Ear = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f442 }),
            name: "ear",
            searchTerms: new string[] { "ear" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 377
        );

        /* üëÇüèª */
        public static readonly SingleEmoji EarLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f442, 0x1f3fb }),
            name: "ear: light skin tone",
            searchTerms: new string[] { "ear", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 378
        );

        /* üëÇüèº */
        public static readonly SingleEmoji EarMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f442, 0x1f3fc }),
            name: "ear: medium-light skin tone",
            searchTerms: new string[] { "ear", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 379
        );

        /* üëÇüèΩ */
        public static readonly SingleEmoji EarMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f442, 0x1f3fd }),
            name: "ear: medium skin tone",
            searchTerms: new string[] { "ear", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 380
        );

        /* üëÇüèæ */
        public static readonly SingleEmoji EarMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f442, 0x1f3fe }),
            name: "ear: medium-dark skin tone",
            searchTerms: new string[] { "ear", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 381
        );

        /* üëÇüèø */
        public static readonly SingleEmoji EarDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f442, 0x1f3ff }),
            name: "ear: dark skin tone",
            searchTerms: new string[] { "ear", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 382
        );

        /* ü¶ª */
        public static readonly SingleEmoji EarHearingAid = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9bb }),
            name: "ear with hearing aid",
            searchTerms: new string[] { "ear", "hearing", "aid" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 383
        );

        /* ü¶ªüèª */
        public static readonly SingleEmoji EarHearingAidLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9bb, 0x1f3fb }),
            name: "ear with hearing aid: light skin tone",
            searchTerms: new string[] { "ear", "hearing", "aid", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 384
        );

        /* ü¶ªüèº */
        public static readonly SingleEmoji EarHearingAidMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9bb, 0x1f3fc }),
            name: "ear with hearing aid: medium-light skin tone",
            searchTerms: new string[] { "ear", "hearing", "aid", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 385
        );

        /* ü¶ªüèΩ */
        public static readonly SingleEmoji EarHearingAidMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9bb, 0x1f3fd }),
            name: "ear with hearing aid: medium skin tone",
            searchTerms: new string[] { "ear", "hearing", "aid", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 386
        );

        /* ü¶ªüèæ */
        public static readonly SingleEmoji EarHearingAidMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9bb, 0x1f3fe }),
            name: "ear with hearing aid: medium-dark skin tone",
            searchTerms: new string[] { "ear", "hearing", "aid", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 387
        );

        /* ü¶ªüèø */
        public static readonly SingleEmoji EarHearingAidDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9bb, 0x1f3ff }),
            name: "ear with hearing aid: dark skin tone",
            searchTerms: new string[] { "ear", "hearing", "aid", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 388
        );

        /* üëÉ */
        public static readonly SingleEmoji Nose = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f443 }),
            name: "nose",
            searchTerms: new string[] { "nose" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 389
        );

        /* üëÉüèª */
        public static readonly SingleEmoji NoseLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f443, 0x1f3fb }),
            name: "nose: light skin tone",
            searchTerms: new string[] { "nose", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 390
        );

        /* üëÉüèº */
        public static readonly SingleEmoji NoseMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f443, 0x1f3fc }),
            name: "nose: medium-light skin tone",
            searchTerms: new string[] { "nose", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 391
        );

        /* üëÉüèΩ */
        public static readonly SingleEmoji NoseMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f443, 0x1f3fd }),
            name: "nose: medium skin tone",
            searchTerms: new string[] { "nose", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 392
        );

        /* üëÉüèæ */
        public static readonly SingleEmoji NoseMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f443, 0x1f3fe }),
            name: "nose: medium-dark skin tone",
            searchTerms: new string[] { "nose", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 393
        );

        /* üëÉüèø */
        public static readonly SingleEmoji NoseDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f443, 0x1f3ff }),
            name: "nose: dark skin tone",
            searchTerms: new string[] { "nose", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 394
        );

        /* üß† */
        public static readonly SingleEmoji Brain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e0 }),
            name: "brain",
            searchTerms: new string[] { "brain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 395
        );

        /* ü¶∑ */
        public static readonly SingleEmoji Tooth = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b7 }),
            name: "tooth",
            searchTerms: new string[] { "tooth" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 396
        );

        /* ü¶¥ */
        public static readonly SingleEmoji Bone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b4 }),
            name: "bone",
            searchTerms: new string[] { "bone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 397
        );

        /* üëÄ */
        public static readonly SingleEmoji Eyes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f440 }),
            name: "eyes",
            searchTerms: new string[] { "eyes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 398
        );

        /* üëÅÔ∏è */
        public static readonly SingleEmoji Eye = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f441, 0xfe0f }),
            name: "eye",
            searchTerms: new string[] { "eye" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 399
        );

        /* üëÖ */
        public static readonly SingleEmoji Tongue = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f445 }),
            name: "tongue",
            searchTerms: new string[] { "tongue" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 401
        );

        /* üëÑ */
        public static readonly SingleEmoji Mouth = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f444 }),
            name: "mouth",
            searchTerms: new string[] { "mouth" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.BODY_PARTS,
            hasGlyph: true,
            sortOrder: 402
        );

        /* üë∂ */
        public static readonly SingleEmoji Baby = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f476 }),
            name: "baby",
            searchTerms: new string[] { "baby" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 403
        );

        /* üë∂üèª */
        public static readonly SingleEmoji BabyLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f476, 0x1f3fb }),
            name: "baby: light skin tone",
            searchTerms: new string[] { "baby", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 404
        );

        /* üë∂üèº */
        public static readonly SingleEmoji BabyMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f476, 0x1f3fc }),
            name: "baby: medium-light skin tone",
            searchTerms: new string[] { "baby", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 405
        );

        /* üë∂üèΩ */
        public static readonly SingleEmoji BabyMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f476, 0x1f3fd }),
            name: "baby: medium skin tone",
            searchTerms: new string[] { "baby", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 406
        );

        /* üë∂üèæ */
        public static readonly SingleEmoji BabyMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f476, 0x1f3fe }),
            name: "baby: medium-dark skin tone",
            searchTerms: new string[] { "baby", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 407
        );

        /* üë∂üèø */
        public static readonly SingleEmoji BabyDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f476, 0x1f3ff }),
            name: "baby: dark skin tone",
            searchTerms: new string[] { "baby", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 408
        );

        /* üßí */
        public static readonly SingleEmoji Child = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d2 }),
            name: "child",
            searchTerms: new string[] { "child" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 409
        );

        /* üßíüèª */
        public static readonly SingleEmoji ChildLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d2, 0x1f3fb }),
            name: "child: light skin tone",
            searchTerms: new string[] { "child", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 410
        );

        /* üßíüèº */
        public static readonly SingleEmoji ChildMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d2, 0x1f3fc }),
            name: "child: medium-light skin tone",
            searchTerms: new string[] { "child", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 411
        );

        /* üßíüèΩ */
        public static readonly SingleEmoji ChildMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d2, 0x1f3fd }),
            name: "child: medium skin tone",
            searchTerms: new string[] { "child", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 412
        );

        /* üßíüèæ */
        public static readonly SingleEmoji ChildMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d2, 0x1f3fe }),
            name: "child: medium-dark skin tone",
            searchTerms: new string[] { "child", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 413
        );

        /* üßíüèø */
        public static readonly SingleEmoji ChildDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d2, 0x1f3ff }),
            name: "child: dark skin tone",
            searchTerms: new string[] { "child", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 414
        );

        /* üë¶ */
        public static readonly SingleEmoji Boy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f466 }),
            name: "boy",
            searchTerms: new string[] { "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 415
        );

        /* üë¶üèª */
        public static readonly SingleEmoji BoyLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f466, 0x1f3fb }),
            name: "boy: light skin tone",
            searchTerms: new string[] { "boy", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 416
        );

        /* üë¶üèº */
        public static readonly SingleEmoji BoyMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f466, 0x1f3fc }),
            name: "boy: medium-light skin tone",
            searchTerms: new string[] { "boy", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 417
        );

        /* üë¶üèΩ */
        public static readonly SingleEmoji BoyMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f466, 0x1f3fd }),
            name: "boy: medium skin tone",
            searchTerms: new string[] { "boy", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: false,
            sortOrder: 418
        );

        /* üë¶üèæ */
        public static readonly SingleEmoji BoyMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f466, 0x1f3fe }),
            name: "boy: medium-dark skin tone",
            searchTerms: new string[] { "boy", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 419
        );

        /* üë¶üèø */
        public static readonly SingleEmoji BoyDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f466, 0x1f3ff }),
            name: "boy: dark skin tone",
            searchTerms: new string[] { "boy", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 420
        );

        /* üëß */
        public static readonly SingleEmoji Girl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f467 }),
            name: "girl",
            searchTerms: new string[] { "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 421
        );

        /* üëßüèª */
        public static readonly SingleEmoji GirlLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f467, 0x1f3fb }),
            name: "girl: light skin tone",
            searchTerms: new string[] { "girl", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 422
        );

        /* üëßüèº */
        public static readonly SingleEmoji GirlMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f467, 0x1f3fc }),
            name: "girl: medium-light skin tone",
            searchTerms: new string[] { "girl", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 423
        );

        /* üëßüèΩ */
        public static readonly SingleEmoji GirlMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f467, 0x1f3fd }),
            name: "girl: medium skin tone",
            searchTerms: new string[] { "girl", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 424
        );

        /* üëßüèæ */
        public static readonly SingleEmoji GirlMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f467, 0x1f3fe }),
            name: "girl: medium-dark skin tone",
            searchTerms: new string[] { "girl", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 425
        );

        /* üëßüèø */
        public static readonly SingleEmoji GirlDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f467, 0x1f3ff }),
            name: "girl: dark skin tone",
            searchTerms: new string[] { "girl", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 426
        );

        /* üßë */
        public static readonly SingleEmoji Person = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1 }),
            name: "person",
            searchTerms: new string[] { "person" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 427
        );

        /* üßëüèª */
        public static readonly SingleEmoji PersonLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fb }),
            name: "person: light skin tone",
            searchTerms: new string[] { "person", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 428
        );

        /* üßëüèº */
        public static readonly SingleEmoji PersonMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fc }),
            name: "person: medium-light skin tone",
            searchTerms: new string[] { "person", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 429
        );

        /* üßëüèΩ */
        public static readonly SingleEmoji PersonMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fd }),
            name: "person: medium skin tone",
            searchTerms: new string[] { "person", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 430
        );

        /* üßëüèæ */
        public static readonly SingleEmoji PersonMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fe }),
            name: "person: medium-dark skin tone",
            searchTerms: new string[] { "person", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 431
        );

        /* üßëüèø */
        public static readonly SingleEmoji PersonDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3ff }),
            name: "person: dark skin tone",
            searchTerms: new string[] { "person", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 432
        );

        /* üë± */
        public static readonly SingleEmoji PersonBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471 }),
            name: "person: blond hair",
            searchTerms: new string[] { "person", "blond", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 433
        );

        /* üë±üèª */
        public static readonly SingleEmoji PersonLightSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fb }),
            name: "person: light skin tone, blond hair",
            searchTerms: new string[] { "person", "light", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 434
        );

        /* üë±üèº */
        public static readonly SingleEmoji PersonMediumLightSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fc }),
            name: "person: medium-light skin tone, blond hair",
            searchTerms: new string[] { "person", "medium", "light", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 435
        );

        /* üë±üèΩ */
        public static readonly SingleEmoji PersonMediumSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fd }),
            name: "person: medium skin tone, blond hair",
            searchTerms: new string[] { "person", "medium", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 436
        );

        /* üë±üèæ */
        public static readonly SingleEmoji PersonMediumDarkSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fe }),
            name: "person: medium-dark skin tone, blond hair",
            searchTerms: new string[] { "person", "medium", "dark", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 437
        );

        /* üë±üèø */
        public static readonly SingleEmoji PersonDarkSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3ff }),
            name: "person: dark skin tone, blond hair",
            searchTerms: new string[] { "person", "dark", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 438
        );

        /* üë® */
        public static readonly SingleEmoji Man = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468 }),
            name: "man",
            searchTerms: new string[] { "man" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 439
        );

        /* üë®üèª */
        public static readonly SingleEmoji ManLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb }),
            name: "man: light skin tone",
            searchTerms: new string[] { "man", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 440
        );

        /* üë®üèº */
        public static readonly SingleEmoji ManMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc }),
            name: "man: medium-light skin tone",
            searchTerms: new string[] { "man", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 441
        );

        /* üë®üèΩ */
        public static readonly SingleEmoji ManMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd }),
            name: "man: medium skin tone",
            searchTerms: new string[] { "man", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 442
        );

        /* üë®üèæ */
        public static readonly SingleEmoji ManMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe }),
            name: "man: medium-dark skin tone",
            searchTerms: new string[] { "man", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 443
        );

        /* üë®üèø */
        public static readonly SingleEmoji ManDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff }),
            name: "man: dark skin tone",
            searchTerms: new string[] { "man", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 444
        );

        /* üßî */
        public static readonly SingleEmoji ManBeard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d4 }),
            name: "man: beard",
            searchTerms: new string[] { "man", "beard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 445
        );

        /* üßîüèª */
        public static readonly SingleEmoji ManLightSkinToneBeard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d4, 0x1f3fb }),
            name: "man: light skin tone, beard",
            searchTerms: new string[] { "man", "light", "skin", "tone", "beard" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 446
        );

        /* üßîüèº */
        public static readonly SingleEmoji ManMediumLightSkinToneBeard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d4, 0x1f3fc }),
            name: "man: medium-light skin tone, beard",
            searchTerms: new string[] { "man", "medium", "light", "skin", "tone", "beard" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 447
        );

        /* üßîüèΩ */
        public static readonly SingleEmoji ManMediumSkinToneBeard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d4, 0x1f3fd }),
            name: "man: medium skin tone, beard",
            searchTerms: new string[] { "man", "medium", "skin", "tone", "beard" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 448
        );

        /* üßîüèæ */
        public static readonly SingleEmoji ManMediumDarkSkinToneBeard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d4, 0x1f3fe }),
            name: "man: medium-dark skin tone, beard",
            searchTerms: new string[] { "man", "medium", "dark", "skin", "tone", "beard" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 449
        );

        /* üßîüèø */
        public static readonly SingleEmoji ManDarkSkinToneBeard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d4, 0x1f3ff }),
            name: "man: dark skin tone, beard",
            searchTerms: new string[] { "man", "dark", "skin", "tone", "beard" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 450
        );

        /* üë±‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x200d, 0x2642, 0xfe0f }),
            name: "man: blond hair",
            searchTerms: new string[] { "man", "blond", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 451
        );

        /* üë±üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLightSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man: light skin tone, blond hair",
            searchTerms: new string[] { "man", "light", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 453
        );

        /* üë±üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMediumLightSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man: medium-light skin tone, blond hair",
            searchTerms: new string[] { "man", "medium", "light", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 455
        );

        /* üë±üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMediumSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man: medium skin tone, blond hair",
            searchTerms: new string[] { "man", "medium", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 457
        );

        /* üë±üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMediumDarkSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man: medium-dark skin tone, blond hair",
            searchTerms: new string[] { "man", "medium", "dark", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 459
        );

        /* üë±üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManDarkSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man: dark skin tone, blond hair",
            searchTerms: new string[] { "man", "dark", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 461
        );

        /* üë®‚Äçü¶∞ */
        public static readonly SingleEmoji ManRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f9b0 }),
            name: "man: red hair",
            searchTerms: new string[] { "man", "red", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 463
        );

        /* üë®üèª‚Äçü¶∞ */
        public static readonly SingleEmoji ManLightSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f9b0 }),
            name: "man: light skin tone, red hair",
            searchTerms: new string[] { "man", "light", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 464
        );

        /* üë®üèº‚Äçü¶∞ */
        public static readonly SingleEmoji ManMediumLightSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f9b0 }),
            name: "man: medium-light skin tone, red hair",
            searchTerms: new string[] { "man", "medium", "light", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 465
        );

        /* üë®üèΩ‚Äçü¶∞ */
        public static readonly SingleEmoji ManMediumSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f9b0 }),
            name: "man: medium skin tone, red hair",
            searchTerms: new string[] { "man", "medium", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 466
        );

        /* üë®üèæ‚Äçü¶∞ */
        public static readonly SingleEmoji ManMediumDarkSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f9b0 }),
            name: "man: medium-dark skin tone, red hair",
            searchTerms: new string[] { "man", "medium", "dark", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 467
        );

        /* üë®üèø‚Äçü¶∞ */
        public static readonly SingleEmoji ManDarkSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f9b0 }),
            name: "man: dark skin tone, red hair",
            searchTerms: new string[] { "man", "dark", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 468
        );

        /* üë®‚Äçü¶± */
        public static readonly SingleEmoji ManCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f9b1 }),
            name: "man: curly hair",
            searchTerms: new string[] { "man", "curly", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 469
        );

        /* üë®üèª‚Äçü¶± */
        public static readonly SingleEmoji ManLightSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f9b1 }),
            name: "man: light skin tone, curly hair",
            searchTerms: new string[] { "man", "light", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 470
        );

        /* üë®üèº‚Äçü¶± */
        public static readonly SingleEmoji ManMediumLightSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f9b1 }),
            name: "man: medium-light skin tone, curly hair",
            searchTerms: new string[] { "man", "medium", "light", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 471
        );

        /* üë®üèΩ‚Äçü¶± */
        public static readonly SingleEmoji ManMediumSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f9b1 }),
            name: "man: medium skin tone, curly hair",
            searchTerms: new string[] { "man", "medium", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 472
        );

        /* üë®üèæ‚Äçü¶± */
        public static readonly SingleEmoji ManMediumDarkSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f9b1 }),
            name: "man: medium-dark skin tone, curly hair",
            searchTerms: new string[] { "man", "medium", "dark", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 473
        );

        /* üë®üèø‚Äçü¶± */
        public static readonly SingleEmoji ManDarkSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f9b1 }),
            name: "man: dark skin tone, curly hair",
            searchTerms: new string[] { "man", "dark", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 474
        );

        /* üë®‚Äçü¶≥ */
        public static readonly SingleEmoji ManWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f9b3 }),
            name: "man: white hair",
            searchTerms: new string[] { "man", "white", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 475
        );

        /* üë®üèª‚Äçü¶≥ */
        public static readonly SingleEmoji ManLightSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f9b3 }),
            name: "man: light skin tone, white hair",
            searchTerms: new string[] { "man", "light", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 476
        );

        /* üë®üèº‚Äçü¶≥ */
        public static readonly SingleEmoji ManMediumLightSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f9b3 }),
            name: "man: medium-light skin tone, white hair",
            searchTerms: new string[] { "man", "medium", "light", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 477
        );

        /* üë®üèΩ‚Äçü¶≥ */
        public static readonly SingleEmoji ManMediumSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f9b3 }),
            name: "man: medium skin tone, white hair",
            searchTerms: new string[] { "man", "medium", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 478
        );

        /* üë®üèæ‚Äçü¶≥ */
        public static readonly SingleEmoji ManMediumDarkSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f9b3 }),
            name: "man: medium-dark skin tone, white hair",
            searchTerms: new string[] { "man", "medium", "dark", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 479
        );

        /* üë®üèø‚Äçü¶≥ */
        public static readonly SingleEmoji ManDarkSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f9b3 }),
            name: "man: dark skin tone, white hair",
            searchTerms: new string[] { "man", "dark", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 480
        );

        /* üë®‚Äçü¶≤ */
        public static readonly SingleEmoji ManBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f9b2 }),
            name: "man: bald",
            searchTerms: new string[] { "man", "bald" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 481
        );

        /* üë®üèª‚Äçü¶≤ */
        public static readonly SingleEmoji ManLightSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f9b2 }),
            name: "man: light skin tone, bald",
            searchTerms: new string[] { "man", "light", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 482
        );

        /* üë®üèº‚Äçü¶≤ */
        public static readonly SingleEmoji ManMediumLightSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f9b2 }),
            name: "man: medium-light skin tone, bald",
            searchTerms: new string[] { "man", "medium", "light", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 483
        );

        /* üë®üèΩ‚Äçü¶≤ */
        public static readonly SingleEmoji ManMediumSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f9b2 }),
            name: "man: medium skin tone, bald",
            searchTerms: new string[] { "man", "medium", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 484
        );

        /* üë®üèæ‚Äçü¶≤ */
        public static readonly SingleEmoji ManMediumDarkSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f9b2 }),
            name: "man: medium-dark skin tone, bald",
            searchTerms: new string[] { "man", "medium", "dark", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 485
        );

        /* üë®üèø‚Äçü¶≤ */
        public static readonly SingleEmoji ManDarkSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f9b2 }),
            name: "man: dark skin tone, bald",
            searchTerms: new string[] { "man", "dark", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 486
        );

        /* üë© */
        public static readonly SingleEmoji Woman = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469 }),
            name: "woman",
            searchTerms: new string[] { "woman" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 487
        );

        /* üë©üèª */
        public static readonly SingleEmoji WomanLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb }),
            name: "woman: light skin tone",
            searchTerms: new string[] { "woman", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 488
        );

        /* üë©üèº */
        public static readonly SingleEmoji WomanMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc }),
            name: "woman: medium-light skin tone",
            searchTerms: new string[] { "woman", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 489
        );

        /* üë©üèΩ */
        public static readonly SingleEmoji WomanMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd }),
            name: "woman: medium skin tone",
            searchTerms: new string[] { "woman", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 490
        );

        /* üë©üèæ */
        public static readonly SingleEmoji WomanMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe }),
            name: "woman: medium-dark skin tone",
            searchTerms: new string[] { "woman", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 491
        );

        /* üë©üèø */
        public static readonly SingleEmoji WomanDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff }),
            name: "woman: dark skin tone",
            searchTerms: new string[] { "woman", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 492
        );

        /* üë±‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x200d, 0x2640, 0xfe0f }),
            name: "woman: blond hair",
            searchTerms: new string[] { "woman", "blond", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 493
        );

        /* üë±üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLightSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman: light skin tone, blond hair",
            searchTerms: new string[] { "woman", "light", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 495
        );

        /* üë±üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMediumLightSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman: medium-light skin tone, blond hair",
            searchTerms: new string[] { "woman", "medium", "light", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 497
        );

        /* üë±üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMediumSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman: medium skin tone, blond hair",
            searchTerms: new string[] { "woman", "medium", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 499
        );

        /* üë±üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMediumDarkSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman: medium-dark skin tone, blond hair",
            searchTerms: new string[] { "woman", "medium", "dark", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 501
        );

        /* üë±üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanDarkSkinToneBlondHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f471, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman: dark skin tone, blond hair",
            searchTerms: new string[] { "woman", "dark", "skin", "tone", "blond", "hair" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 503
        );

        /* üë©‚Äçü¶∞ */
        public static readonly SingleEmoji WomanRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f9b0 }),
            name: "woman: red hair",
            searchTerms: new string[] { "woman", "red", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 505
        );

        /* üë©üèª‚Äçü¶∞ */
        public static readonly SingleEmoji WomanLightSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f9b0 }),
            name: "woman: light skin tone, red hair",
            searchTerms: new string[] { "woman", "light", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 506
        );

        /* üë©üèº‚Äçü¶∞ */
        public static readonly SingleEmoji WomanMediumLightSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f9b0 }),
            name: "woman: medium-light skin tone, red hair",
            searchTerms: new string[] { "woman", "medium", "light", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 507
        );

        /* üë©üèΩ‚Äçü¶∞ */
        public static readonly SingleEmoji WomanMediumSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f9b0 }),
            name: "woman: medium skin tone, red hair",
            searchTerms: new string[] { "woman", "medium", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 508
        );

        /* üë©üèæ‚Äçü¶∞ */
        public static readonly SingleEmoji WomanMediumDarkSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f9b0 }),
            name: "woman: medium-dark skin tone, red hair",
            searchTerms: new string[] { "woman", "medium", "dark", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 509
        );

        /* üë©üèø‚Äçü¶∞ */
        public static readonly SingleEmoji WomanDarkSkinToneRedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f9b0 }),
            name: "woman: dark skin tone, red hair",
            searchTerms: new string[] { "woman", "dark", "skin", "tone", "red", "hair" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 510
        );

        /* üë©‚Äçü¶± */
        public static readonly SingleEmoji WomanCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f9b1 }),
            name: "woman: curly hair",
            searchTerms: new string[] { "woman", "curly", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 511
        );

        /* üë©üèª‚Äçü¶± */
        public static readonly SingleEmoji WomanLightSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f9b1 }),
            name: "woman: light skin tone, curly hair",
            searchTerms: new string[] { "woman", "light", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 512
        );

        /* üë©üèº‚Äçü¶± */
        public static readonly SingleEmoji WomanMediumLightSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f9b1 }),
            name: "woman: medium-light skin tone, curly hair",
            searchTerms: new string[] { "woman", "medium", "light", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 513
        );

        /* üë©üèΩ‚Äçü¶± */
        public static readonly SingleEmoji WomanMediumSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f9b1 }),
            name: "woman: medium skin tone, curly hair",
            searchTerms: new string[] { "woman", "medium", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 514
        );

        /* üë©üèæ‚Äçü¶± */
        public static readonly SingleEmoji WomanMediumDarkSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f9b1 }),
            name: "woman: medium-dark skin tone, curly hair",
            searchTerms: new string[] { "woman", "medium", "dark", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 515
        );

        /* üë©üèø‚Äçü¶± */
        public static readonly SingleEmoji WomanDarkSkinToneCurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f9b1 }),
            name: "woman: dark skin tone, curly hair",
            searchTerms: new string[] { "woman", "dark", "skin", "tone", "curly", "hair" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 516
        );

        /* üë©‚Äçü¶≥ */
        public static readonly SingleEmoji WomanWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f9b3 }),
            name: "woman: white hair",
            searchTerms: new string[] { "woman", "white", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 517
        );

        /* üë©üèª‚Äçü¶≥ */
        public static readonly SingleEmoji WomanLightSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f9b3 }),
            name: "woman: light skin tone, white hair",
            searchTerms: new string[] { "woman", "light", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 518
        );

        /* üë©üèº‚Äçü¶≥ */
        public static readonly SingleEmoji WomanMediumLightSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f9b3 }),
            name: "woman: medium-light skin tone, white hair",
            searchTerms: new string[] { "woman", "medium", "light", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 519
        );

        /* üë©üèΩ‚Äçü¶≥ */
        public static readonly SingleEmoji WomanMediumSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f9b3 }),
            name: "woman: medium skin tone, white hair",
            searchTerms: new string[] { "woman", "medium", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 520
        );

        /* üë©üèæ‚Äçü¶≥ */
        public static readonly SingleEmoji WomanMediumDarkSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f9b3 }),
            name: "woman: medium-dark skin tone, white hair",
            searchTerms: new string[] { "woman", "medium", "dark", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 521
        );

        /* üë©üèø‚Äçü¶≥ */
        public static readonly SingleEmoji WomanDarkSkinToneWhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f9b3 }),
            name: "woman: dark skin tone, white hair",
            searchTerms: new string[] { "woman", "dark", "skin", "tone", "white", "hair" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 522
        );

        /* üë©‚Äçü¶≤ */
        public static readonly SingleEmoji WomanBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f9b2 }),
            name: "woman: bald",
            searchTerms: new string[] { "woman", "bald" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 523
        );

        /* üë©üèª‚Äçü¶≤ */
        public static readonly SingleEmoji WomanLightSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f9b2 }),
            name: "woman: light skin tone, bald",
            searchTerms: new string[] { "woman", "light", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 524
        );

        /* üë©üèº‚Äçü¶≤ */
        public static readonly SingleEmoji WomanMediumLightSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f9b2 }),
            name: "woman: medium-light skin tone, bald",
            searchTerms: new string[] { "woman", "medium", "light", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 525
        );

        /* üë©üèΩ‚Äçü¶≤ */
        public static readonly SingleEmoji WomanMediumSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f9b2 }),
            name: "woman: medium skin tone, bald",
            searchTerms: new string[] { "woman", "medium", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 526
        );

        /* üë©üèæ‚Äçü¶≤ */
        public static readonly SingleEmoji WomanMediumDarkSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f9b2 }),
            name: "woman: medium-dark skin tone, bald",
            searchTerms: new string[] { "woman", "medium", "dark", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 527
        );

        /* üë©üèø‚Äçü¶≤ */
        public static readonly SingleEmoji WomanDarkSkinToneBald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f9b2 }),
            name: "woman: dark skin tone, bald",
            searchTerms: new string[] { "woman", "dark", "skin", "tone", "bald" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 528
        );

        /* üßì */
        public static readonly SingleEmoji OlderPerson = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d3 }),
            name: "older person",
            searchTerms: new string[] { "older", "person" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 529
        );

        /* üßìüèª */
        public static readonly SingleEmoji OlderPersonLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d3, 0x1f3fb }),
            name: "older person: light skin tone",
            searchTerms: new string[] { "older", "person", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 530
        );

        /* üßìüèº */
        public static readonly SingleEmoji OlderPersonMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d3, 0x1f3fc }),
            name: "older person: medium-light skin tone",
            searchTerms: new string[] { "older", "person", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 531
        );

        /* üßìüèΩ */
        public static readonly SingleEmoji OlderPersonMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d3, 0x1f3fd }),
            name: "older person: medium skin tone",
            searchTerms: new string[] { "older", "person", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 532
        );

        /* üßìüèæ */
        public static readonly SingleEmoji OlderPersonMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d3, 0x1f3fe }),
            name: "older person: medium-dark skin tone",
            searchTerms: new string[] { "older", "person", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 533
        );

        /* üßìüèø */
        public static readonly SingleEmoji OlderPersonDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d3, 0x1f3ff }),
            name: "older person: dark skin tone",
            searchTerms: new string[] { "older", "person", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 534
        );

        /* üë¥ */
        public static readonly SingleEmoji OldMan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f474 }),
            name: "old man",
            searchTerms: new string[] { "old", "man" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 535
        );

        /* üë¥üèª */
        public static readonly SingleEmoji OldManLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f474, 0x1f3fb }),
            name: "old man: light skin tone",
            searchTerms: new string[] { "old", "man", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 536
        );

        /* üë¥üèº */
        public static readonly SingleEmoji OldManMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f474, 0x1f3fc }),
            name: "old man: medium-light skin tone",
            searchTerms: new string[] { "old", "man", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 537
        );

        /* üë¥üèΩ */
        public static readonly SingleEmoji OldManMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f474, 0x1f3fd }),
            name: "old man: medium skin tone",
            searchTerms: new string[] { "old", "man", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 538
        );

        /* üë¥üèæ */
        public static readonly SingleEmoji OldManMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f474, 0x1f3fe }),
            name: "old man: medium-dark skin tone",
            searchTerms: new string[] { "old", "man", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 539
        );

        /* üë¥üèø */
        public static readonly SingleEmoji OldManDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f474, 0x1f3ff }),
            name: "old man: dark skin tone",
            searchTerms: new string[] { "old", "man", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 540
        );

        /* üëµ */
        public static readonly SingleEmoji OldWoman = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f475 }),
            name: "old woman",
            searchTerms: new string[] { "old", "woman" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 541
        );

        /* üëµüèª */
        public static readonly SingleEmoji OldWomanLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f475, 0x1f3fb }),
            name: "old woman: light skin tone",
            searchTerms: new string[] { "old", "woman", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 542
        );

        /* üëµüèº */
        public static readonly SingleEmoji OldWomanMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f475, 0x1f3fc }),
            name: "old woman: medium-light skin tone",
            searchTerms: new string[] { "old", "woman", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 543
        );

        /* üëµüèΩ */
        public static readonly SingleEmoji OldWomanMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f475, 0x1f3fd }),
            name: "old woman: medium skin tone",
            searchTerms: new string[] { "old", "woman", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 544
        );

        /* üëµüèæ */
        public static readonly SingleEmoji OldWomanMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f475, 0x1f3fe }),
            name: "old woman: medium-dark skin tone",
            searchTerms: new string[] { "old", "woman", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 545
        );

        /* üëµüèø */
        public static readonly SingleEmoji OldWomanDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f475, 0x1f3ff }),
            name: "old woman: dark skin tone",
            searchTerms: new string[] { "old", "woman", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON,
            hasGlyph: true,
            sortOrder: 546
        );

        /* üôç */
        public static readonly SingleEmoji PersonFrowning = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d }),
            name: "person frowning",
            searchTerms: new string[] { "person", "frowning" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 547
        );

        /* üôçüèª */
        public static readonly SingleEmoji PersonFrowningLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fb }),
            name: "person frowning: light skin tone",
            searchTerms: new string[] { "person", "frowning", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 548
        );

        /* üôçüèº */
        public static readonly SingleEmoji PersonFrowningMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fc }),
            name: "person frowning: medium-light skin tone",
            searchTerms: new string[] { "person", "frowning", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 549
        );

        /* üôçüèΩ */
        public static readonly SingleEmoji PersonFrowningMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fd }),
            name: "person frowning: medium skin tone",
            searchTerms: new string[] { "person", "frowning", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 550
        );

        /* üôçüèæ */
        public static readonly SingleEmoji PersonFrowningMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fe }),
            name: "person frowning: medium-dark skin tone",
            searchTerms: new string[] { "person", "frowning", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 551
        );

        /* üôçüèø */
        public static readonly SingleEmoji PersonFrowningDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3ff }),
            name: "person frowning: dark skin tone",
            searchTerms: new string[] { "person", "frowning", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 552
        );

        /* üôç‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFrowning = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x200d, 0x2642, 0xfe0f }),
            name: "man frowning",
            searchTerms: new string[] { "man", "frowning" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 553
        );

        /* üôçüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFrowningLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man frowning: light skin tone",
            searchTerms: new string[] { "man", "frowning", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 555
        );

        /* üôçüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFrowningMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man frowning: medium-light skin tone",
            searchTerms: new string[] { "man", "frowning", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 557
        );

        /* üôçüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFrowningMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man frowning: medium skin tone",
            searchTerms: new string[] { "man", "frowning", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 559
        );

        /* üôçüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFrowningMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man frowning: medium-dark skin tone",
            searchTerms: new string[] { "man", "frowning", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 561
        );

        /* üôçüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFrowningDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man frowning: dark skin tone",
            searchTerms: new string[] { "man", "frowning", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 563
        );

        /* üôç‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFrowning = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x200d, 0x2640, 0xfe0f }),
            name: "woman frowning",
            searchTerms: new string[] { "woman", "frowning" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 565
        );

        /* üôçüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFrowningLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman frowning: light skin tone",
            searchTerms: new string[] { "woman", "frowning", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 567
        );

        /* üôçüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFrowningMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman frowning: medium-light skin tone",
            searchTerms: new string[] { "woman", "frowning", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 569
        );

        /* üôçüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFrowningMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman frowning: medium skin tone",
            searchTerms: new string[] { "woman", "frowning", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 571
        );

        /* üôçüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFrowningMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman frowning: medium-dark skin tone",
            searchTerms: new string[] { "woman", "frowning", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 573
        );

        /* üôçüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFrowningDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64d, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman frowning: dark skin tone",
            searchTerms: new string[] { "woman", "frowning", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 575
        );

        /* üôé */
        public static readonly SingleEmoji PersonPouting = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e }),
            name: "person pouting",
            searchTerms: new string[] { "person", "pouting" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 577
        );

        /* üôéüèª */
        public static readonly SingleEmoji PersonPoutingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fb }),
            name: "person pouting: light skin tone",
            searchTerms: new string[] { "person", "pouting", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 578
        );

        /* üôéüèº */
        public static readonly SingleEmoji PersonPoutingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fc }),
            name: "person pouting: medium-light skin tone",
            searchTerms: new string[] { "person", "pouting", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 579
        );

        /* üôéüèΩ */
        public static readonly SingleEmoji PersonPoutingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fd }),
            name: "person pouting: medium skin tone",
            searchTerms: new string[] { "person", "pouting", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 580
        );

        /* üôéüèæ */
        public static readonly SingleEmoji PersonPoutingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fe }),
            name: "person pouting: medium-dark skin tone",
            searchTerms: new string[] { "person", "pouting", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 581
        );

        /* üôéüèø */
        public static readonly SingleEmoji PersonPoutingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3ff }),
            name: "person pouting: dark skin tone",
            searchTerms: new string[] { "person", "pouting", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 582
        );

        /* üôé‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPouting = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x200d, 0x2642, 0xfe0f }),
            name: "man pouting",
            searchTerms: new string[] { "man", "pouting" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 583
        );

        /* üôéüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoutingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man pouting: light skin tone",
            searchTerms: new string[] { "man", "pouting", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 585
        );

        /* üôéüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoutingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man pouting: medium-light skin tone",
            searchTerms: new string[] { "man", "pouting", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 587
        );

        /* üôéüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoutingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man pouting: medium skin tone",
            searchTerms: new string[] { "man", "pouting", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 589
        );

        /* üôéüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoutingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man pouting: medium-dark skin tone",
            searchTerms: new string[] { "man", "pouting", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 591
        );

        /* üôéüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoutingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man pouting: dark skin tone",
            searchTerms: new string[] { "man", "pouting", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 593
        );

        /* üôé‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPouting = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x200d, 0x2640, 0xfe0f }),
            name: "woman pouting",
            searchTerms: new string[] { "woman", "pouting" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 595
        );

        /* üôéüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoutingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman pouting: light skin tone",
            searchTerms: new string[] { "woman", "pouting", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 597
        );

        /* üôéüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoutingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman pouting: medium-light skin tone",
            searchTerms: new string[] { "woman", "pouting", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 599
        );

        /* üôéüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoutingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman pouting: medium skin tone",
            searchTerms: new string[] { "woman", "pouting", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 601
        );

        /* üôéüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoutingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman pouting: medium-dark skin tone",
            searchTerms: new string[] { "woman", "pouting", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 603
        );

        /* üôéüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoutingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64e, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman pouting: dark skin tone",
            searchTerms: new string[] { "woman", "pouting", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 605
        );

        /* üôÖ */
        public static readonly SingleEmoji PersonGesturingNo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645 }),
            name: "person gesturing NO",
            searchTerms: new string[] { "person", "gesturing", "no" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 607
        );

        /* üôÖüèª */
        public static readonly SingleEmoji PersonGesturingNoLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fb }),
            name: "person gesturing NO: light skin tone",
            searchTerms: new string[] { "person", "gesturing", "no", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 608
        );

        /* üôÖüèº */
        public static readonly SingleEmoji PersonGesturingNoMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fc }),
            name: "person gesturing NO: medium-light skin tone",
            searchTerms: new string[] { "person", "gesturing", "no", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 609
        );

        /* üôÖüèΩ */
        public static readonly SingleEmoji PersonGesturingNoMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fd }),
            name: "person gesturing NO: medium skin tone",
            searchTerms: new string[] { "person", "gesturing", "no", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 610
        );

        /* üôÖüèæ */
        public static readonly SingleEmoji PersonGesturingNoMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fe }),
            name: "person gesturing NO: medium-dark skin tone",
            searchTerms: new string[] { "person", "gesturing", "no", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 611
        );

        /* üôÖüèø */
        public static readonly SingleEmoji PersonGesturingNoDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3ff }),
            name: "person gesturing NO: dark skin tone",
            searchTerms: new string[] { "person", "gesturing", "no", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 612
        );

        /* üôÖ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingNo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing NO",
            searchTerms: new string[] { "man", "gesturing", "no" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 613
        );

        /* üôÖüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingNoLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing NO: light skin tone",
            searchTerms: new string[] { "man", "gesturing", "no", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 615
        );

        /* üôÖüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingNoMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing NO: medium-light skin tone",
            searchTerms: new string[] { "man", "gesturing", "no", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 617
        );

        /* üôÖüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingNoMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing NO: medium skin tone",
            searchTerms: new string[] { "man", "gesturing", "no", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 619
        );

        /* üôÖüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingNoMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing NO: medium-dark skin tone",
            searchTerms: new string[] { "man", "gesturing", "no", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 621
        );

        /* üôÖüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingNoDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing NO: dark skin tone",
            searchTerms: new string[] { "man", "gesturing", "no", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 623
        );

        /* üôÖ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingNo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing NO",
            searchTerms: new string[] { "woman", "gesturing", "no" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 625
        );

        /* üôÖüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingNoLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing NO: light skin tone",
            searchTerms: new string[] { "woman", "gesturing", "no", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 627
        );

        /* üôÖüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingNoMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing NO: medium-light skin tone",
            searchTerms: new string[] { "woman", "gesturing", "no", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 629
        );

        /* üôÖüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingNoMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing NO: medium skin tone",
            searchTerms: new string[] { "woman", "gesturing", "no", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 631
        );

        /* üôÖüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingNoMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing NO: medium-dark skin tone",
            searchTerms: new string[] { "woman", "gesturing", "no", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 633
        );

        /* üôÖüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingNoDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f645, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing NO: dark skin tone",
            searchTerms: new string[] { "woman", "gesturing", "no", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 635
        );

        /* üôÜ */
        public static readonly SingleEmoji PersonGesturingOk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646 }),
            name: "person gesturing OK",
            searchTerms: new string[] { "person", "gesturing", "ok" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 637
        );

        /* üôÜüèª */
        public static readonly SingleEmoji PersonGesturingOkLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fb }),
            name: "person gesturing OK: light skin tone",
            searchTerms: new string[] { "person", "gesturing", "ok", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 638
        );

        /* üôÜüèº */
        public static readonly SingleEmoji PersonGesturingOkMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fc }),
            name: "person gesturing OK: medium-light skin tone",
            searchTerms: new string[] { "person", "gesturing", "ok", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 639
        );

        /* üôÜüèΩ */
        public static readonly SingleEmoji PersonGesturingOkMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fd }),
            name: "person gesturing OK: medium skin tone",
            searchTerms: new string[] { "person", "gesturing", "ok", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 640
        );

        /* üôÜüèæ */
        public static readonly SingleEmoji PersonGesturingOkMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fe }),
            name: "person gesturing OK: medium-dark skin tone",
            searchTerms: new string[] { "person", "gesturing", "ok", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 641
        );

        /* üôÜüèø */
        public static readonly SingleEmoji PersonGesturingOkDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3ff }),
            name: "person gesturing OK: dark skin tone",
            searchTerms: new string[] { "person", "gesturing", "ok", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 642
        );

        /* üôÜ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingOk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing OK",
            searchTerms: new string[] { "man", "gesturing", "ok" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 643
        );

        /* üôÜüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingOkLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing OK: light skin tone",
            searchTerms: new string[] { "man", "gesturing", "ok", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 645
        );

        /* üôÜüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingOkMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing OK: medium-light skin tone",
            searchTerms: new string[] { "man", "gesturing", "ok", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 647
        );

        /* üôÜüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingOkMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing OK: medium skin tone",
            searchTerms: new string[] { "man", "gesturing", "ok", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 649
        );

        /* üôÜüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingOkMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing OK: medium-dark skin tone",
            searchTerms: new string[] { "man", "gesturing", "ok", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 651
        );

        /* üôÜüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGesturingOkDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man gesturing OK: dark skin tone",
            searchTerms: new string[] { "man", "gesturing", "ok", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 653
        );

        /* üôÜ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingOk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing OK",
            searchTerms: new string[] { "woman", "gesturing", "ok" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 655
        );

        /* üôÜüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingOkLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing OK: light skin tone",
            searchTerms: new string[] { "woman", "gesturing", "ok", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 657
        );

        /* üôÜüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingOkMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing OK: medium-light skin tone",
            searchTerms: new string[] { "woman", "gesturing", "ok", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 659
        );

        /* üôÜüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingOkMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing OK: medium skin tone",
            searchTerms: new string[] { "woman", "gesturing", "ok", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 661
        );

        /* üôÜüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingOkMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing OK: medium-dark skin tone",
            searchTerms: new string[] { "woman", "gesturing", "ok", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 663
        );

        /* üôÜüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGesturingOkDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f646, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman gesturing OK: dark skin tone",
            searchTerms: new string[] { "woman", "gesturing", "ok", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 665
        );

        /* üíÅ */
        public static readonly SingleEmoji PersonTippingHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481 }),
            name: "person tipping hand",
            searchTerms: new string[] { "person", "tipping", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 667
        );

        /* üíÅüèª */
        public static readonly SingleEmoji PersonTippingHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fb }),
            name: "person tipping hand: light skin tone",
            searchTerms: new string[] { "person", "tipping", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 668
        );

        /* üíÅüèº */
        public static readonly SingleEmoji PersonTippingHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fc }),
            name: "person tipping hand: medium-light skin tone",
            searchTerms: new string[] { "person", "tipping", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 669
        );

        /* üíÅüèΩ */
        public static readonly SingleEmoji PersonTippingHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fd }),
            name: "person tipping hand: medium skin tone",
            searchTerms: new string[] { "person", "tipping", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 670
        );

        /* üíÅüèæ */
        public static readonly SingleEmoji PersonTippingHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fe }),
            name: "person tipping hand: medium-dark skin tone",
            searchTerms: new string[] { "person", "tipping", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 671
        );

        /* üíÅüèø */
        public static readonly SingleEmoji PersonTippingHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3ff }),
            name: "person tipping hand: dark skin tone",
            searchTerms: new string[] { "person", "tipping", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 672
        );

        /* üíÅ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManTippingHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x200d, 0x2642, 0xfe0f }),
            name: "man tipping hand",
            searchTerms: new string[] { "man", "tipping", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 673
        );

        /* üíÅüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManTippingHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man tipping hand: light skin tone",
            searchTerms: new string[] { "man", "tipping", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 675
        );

        /* üíÅüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManTippingHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man tipping hand: medium-light skin tone",
            searchTerms: new string[] { "man", "tipping", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 677
        );

        /* üíÅüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManTippingHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man tipping hand: medium skin tone",
            searchTerms: new string[] { "man", "tipping", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 679
        );

        /* üíÅüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManTippingHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man tipping hand: medium-dark skin tone",
            searchTerms: new string[] { "man", "tipping", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 681
        );

        /* üíÅüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManTippingHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man tipping hand: dark skin tone",
            searchTerms: new string[] { "man", "tipping", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 683
        );

        /* üíÅ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanTippingHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x200d, 0x2640, 0xfe0f }),
            name: "woman tipping hand",
            searchTerms: new string[] { "woman", "tipping", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 685
        );

        /* üíÅüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanTippingHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman tipping hand: light skin tone",
            searchTerms: new string[] { "woman", "tipping", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 687
        );

        /* üíÅüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanTippingHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman tipping hand: medium-light skin tone",
            searchTerms: new string[] { "woman", "tipping", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 689
        );

        /* üíÅüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanTippingHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman tipping hand: medium skin tone",
            searchTerms: new string[] { "woman", "tipping", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 691
        );

        /* üíÅüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanTippingHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman tipping hand: medium-dark skin tone",
            searchTerms: new string[] { "woman", "tipping", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 693
        );

        /* üíÅüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanTippingHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f481, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman tipping hand: dark skin tone",
            searchTerms: new string[] { "woman", "tipping", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 695
        );

        /* üôã */
        public static readonly SingleEmoji PersonRaisingHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b }),
            name: "person raising hand",
            searchTerms: new string[] { "person", "raising", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 697
        );

        /* üôãüèª */
        public static readonly SingleEmoji PersonRaisingHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fb }),
            name: "person raising hand: light skin tone",
            searchTerms: new string[] { "person", "raising", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 698
        );

        /* üôãüèº */
        public static readonly SingleEmoji PersonRaisingHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fc }),
            name: "person raising hand: medium-light skin tone",
            searchTerms: new string[] { "person", "raising", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 699
        );

        /* üôãüèΩ */
        public static readonly SingleEmoji PersonRaisingHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fd }),
            name: "person raising hand: medium skin tone",
            searchTerms: new string[] { "person", "raising", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 700
        );

        /* üôãüèæ */
        public static readonly SingleEmoji PersonRaisingHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fe }),
            name: "person raising hand: medium-dark skin tone",
            searchTerms: new string[] { "person", "raising", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 701
        );

        /* üôãüèø */
        public static readonly SingleEmoji PersonRaisingHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3ff }),
            name: "person raising hand: dark skin tone",
            searchTerms: new string[] { "person", "raising", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 702
        );

        /* üôã‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRaisingHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x200d, 0x2642, 0xfe0f }),
            name: "man raising hand",
            searchTerms: new string[] { "man", "raising", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 703
        );

        /* üôãüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRaisingHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man raising hand: light skin tone",
            searchTerms: new string[] { "man", "raising", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 705
        );

        /* üôãüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRaisingHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man raising hand: medium-light skin tone",
            searchTerms: new string[] { "man", "raising", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 707
        );

        /* üôãüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRaisingHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man raising hand: medium skin tone",
            searchTerms: new string[] { "man", "raising", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 709
        );

        /* üôãüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRaisingHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man raising hand: medium-dark skin tone",
            searchTerms: new string[] { "man", "raising", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 711
        );

        /* üôãüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRaisingHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man raising hand: dark skin tone",
            searchTerms: new string[] { "man", "raising", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 713
        );

        /* üôã‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRaisingHand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x200d, 0x2640, 0xfe0f }),
            name: "woman raising hand",
            searchTerms: new string[] { "woman", "raising", "hand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 715
        );

        /* üôãüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRaisingHandLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman raising hand: light skin tone",
            searchTerms: new string[] { "woman", "raising", "hand", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 717
        );

        /* üôãüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRaisingHandMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman raising hand: medium-light skin tone",
            searchTerms: new string[] { "woman", "raising", "hand", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 719
        );

        /* üôãüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRaisingHandMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman raising hand: medium skin tone",
            searchTerms: new string[] { "woman", "raising", "hand", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 721
        );

        /* üôãüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRaisingHandMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman raising hand: medium-dark skin tone",
            searchTerms: new string[] { "woman", "raising", "hand", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 723
        );

        /* üôãüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRaisingHandDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f64b, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman raising hand: dark skin tone",
            searchTerms: new string[] { "woman", "raising", "hand", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 725
        );

        /* üßè */
        public static readonly SingleEmoji DeafPerson = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf }),
            name: "deaf person",
            searchTerms: new string[] { "deaf", "person" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 727
        );

        /* üßèüèª */
        public static readonly SingleEmoji DeafPersonLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fb }),
            name: "deaf person: light skin tone",
            searchTerms: new string[] { "deaf", "person", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 728
        );

        /* üßèüèº */
        public static readonly SingleEmoji DeafPersonMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fc }),
            name: "deaf person: medium-light skin tone",
            searchTerms: new string[] { "deaf", "person", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 729
        );

        /* üßèüèΩ */
        public static readonly SingleEmoji DeafPersonMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fd }),
            name: "deaf person: medium skin tone",
            searchTerms: new string[] { "deaf", "person", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 730
        );

        /* üßèüèæ */
        public static readonly SingleEmoji DeafPersonMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fe }),
            name: "deaf person: medium-dark skin tone",
            searchTerms: new string[] { "deaf", "person", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 731
        );

        /* üßèüèø */
        public static readonly SingleEmoji DeafPersonDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3ff }),
            name: "deaf person: dark skin tone",
            searchTerms: new string[] { "deaf", "person", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 732
        );

        /* üßè‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji DeafMan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x200d, 0x2642, 0xfe0f }),
            name: "deaf man",
            searchTerms: new string[] { "deaf", "man" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 733
        );

        /* üßèüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji DeafManLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "deaf man: light skin tone",
            searchTerms: new string[] { "deaf", "man", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 735
        );

        /* üßèüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji DeafManMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "deaf man: medium-light skin tone",
            searchTerms: new string[] { "deaf", "man", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 737
        );

        /* üßèüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji DeafManMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "deaf man: medium skin tone",
            searchTerms: new string[] { "deaf", "man", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 739
        );

        /* üßèüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji DeafManMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "deaf man: medium-dark skin tone",
            searchTerms: new string[] { "deaf", "man", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 741
        );

        /* üßèüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji DeafManDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "deaf man: dark skin tone",
            searchTerms: new string[] { "deaf", "man", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 743
        );

        /* üßè‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji DeafWoman = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x200d, 0x2640, 0xfe0f }),
            name: "deaf woman",
            searchTerms: new string[] { "deaf", "woman" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 745
        );

        /* üßèüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji DeafWomanLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "deaf woman: light skin tone",
            searchTerms: new string[] { "deaf", "woman", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 747
        );

        /* üßèüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji DeafWomanMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "deaf woman: medium-light skin tone",
            searchTerms: new string[] { "deaf", "woman", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 749
        );

        /* üßèüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji DeafWomanMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "deaf woman: medium skin tone",
            searchTerms: new string[] { "deaf", "woman", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 751
        );

        /* üßèüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji DeafWomanMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "deaf woman: medium-dark skin tone",
            searchTerms: new string[] { "deaf", "woman", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 753
        );

        /* üßèüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji DeafWomanDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cf, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "deaf woman: dark skin tone",
            searchTerms: new string[] { "deaf", "woman", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 755
        );

        /* üôá */
        public static readonly SingleEmoji PersonBowing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647 }),
            name: "person bowing",
            searchTerms: new string[] { "person", "bowing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 757
        );

        /* üôáüèª */
        public static readonly SingleEmoji PersonBowingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fb }),
            name: "person bowing: light skin tone",
            searchTerms: new string[] { "person", "bowing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 758
        );

        /* üôáüèº */
        public static readonly SingleEmoji PersonBowingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fc }),
            name: "person bowing: medium-light skin tone",
            searchTerms: new string[] { "person", "bowing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 759
        );

        /* üôáüèΩ */
        public static readonly SingleEmoji PersonBowingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fd }),
            name: "person bowing: medium skin tone",
            searchTerms: new string[] { "person", "bowing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 760
        );

        /* üôáüèæ */
        public static readonly SingleEmoji PersonBowingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fe }),
            name: "person bowing: medium-dark skin tone",
            searchTerms: new string[] { "person", "bowing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 761
        );

        /* üôáüèø */
        public static readonly SingleEmoji PersonBowingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3ff }),
            name: "person bowing: dark skin tone",
            searchTerms: new string[] { "person", "bowing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 762
        );

        /* üôá‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBowing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x200d, 0x2642, 0xfe0f }),
            name: "man bowing",
            searchTerms: new string[] { "man", "bowing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 763
        );

        /* üôáüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBowingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man bowing: light skin tone",
            searchTerms: new string[] { "man", "bowing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 765
        );

        /* üôáüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBowingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man bowing: medium-light skin tone",
            searchTerms: new string[] { "man", "bowing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 767
        );

        /* üôáüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBowingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man bowing: medium skin tone",
            searchTerms: new string[] { "man", "bowing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 769
        );

        /* üôáüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBowingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man bowing: medium-dark skin tone",
            searchTerms: new string[] { "man", "bowing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 771
        );

        /* üôáüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBowingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man bowing: dark skin tone",
            searchTerms: new string[] { "man", "bowing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 773
        );

        /* üôá‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBowing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bowing",
            searchTerms: new string[] { "woman", "bowing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 775
        );

        /* üôáüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBowingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bowing: light skin tone",
            searchTerms: new string[] { "woman", "bowing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 777
        );

        /* üôáüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBowingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bowing: medium-light skin tone",
            searchTerms: new string[] { "woman", "bowing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 779
        );

        /* üôáüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBowingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bowing: medium skin tone",
            searchTerms: new string[] { "woman", "bowing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 781
        );

        /* üôáüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBowingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bowing: medium-dark skin tone",
            searchTerms: new string[] { "woman", "bowing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 783
        );

        /* üôáüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBowingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f647, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bowing: dark skin tone",
            searchTerms: new string[] { "woman", "bowing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 785
        );

        /* ü§¶ */
        public static readonly SingleEmoji PersonFacepalming = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926 }),
            name: "person facepalming",
            searchTerms: new string[] { "person", "facepalming" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 787
        );

        /* ü§¶üèª */
        public static readonly SingleEmoji PersonFacepalmingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fb }),
            name: "person facepalming: light skin tone",
            searchTerms: new string[] { "person", "facepalming", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 788
        );

        /* ü§¶üèº */
        public static readonly SingleEmoji PersonFacepalmingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fc }),
            name: "person facepalming: medium-light skin tone",
            searchTerms: new string[] { "person", "facepalming", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 789
        );

        /* ü§¶üèΩ */
        public static readonly SingleEmoji PersonFacepalmingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fd }),
            name: "person facepalming: medium skin tone",
            searchTerms: new string[] { "person", "facepalming", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 790
        );

        /* ü§¶üèæ */
        public static readonly SingleEmoji PersonFacepalmingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fe }),
            name: "person facepalming: medium-dark skin tone",
            searchTerms: new string[] { "person", "facepalming", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 791
        );

        /* ü§¶üèø */
        public static readonly SingleEmoji PersonFacepalmingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3ff }),
            name: "person facepalming: dark skin tone",
            searchTerms: new string[] { "person", "facepalming", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 792
        );

        /* ü§¶‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFacepalming = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x200d, 0x2642, 0xfe0f }),
            name: "man facepalming",
            searchTerms: new string[] { "man", "facepalming" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 793
        );

        /* ü§¶üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFacepalmingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man facepalming: light skin tone",
            searchTerms: new string[] { "man", "facepalming", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 795
        );

        /* ü§¶üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFacepalmingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man facepalming: medium-light skin tone",
            searchTerms: new string[] { "man", "facepalming", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 797
        );

        /* ü§¶üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFacepalmingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man facepalming: medium skin tone",
            searchTerms: new string[] { "man", "facepalming", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 799
        );

        /* ü§¶üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFacepalmingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man facepalming: medium-dark skin tone",
            searchTerms: new string[] { "man", "facepalming", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 801
        );

        /* ü§¶üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFacepalmingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man facepalming: dark skin tone",
            searchTerms: new string[] { "man", "facepalming", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 803
        );

        /* ü§¶‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFacepalming = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x200d, 0x2640, 0xfe0f }),
            name: "woman facepalming",
            searchTerms: new string[] { "woman", "facepalming" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 805
        );

        /* ü§¶üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFacepalmingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman facepalming: light skin tone",
            searchTerms: new string[] { "woman", "facepalming", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 807
        );

        /* ü§¶üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFacepalmingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman facepalming: medium-light skin tone",
            searchTerms: new string[] { "woman", "facepalming", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 809
        );

        /* ü§¶üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFacepalmingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman facepalming: medium skin tone",
            searchTerms: new string[] { "woman", "facepalming", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 811
        );

        /* ü§¶üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFacepalmingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman facepalming: medium-dark skin tone",
            searchTerms: new string[] { "woman", "facepalming", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 813
        );

        /* ü§¶üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFacepalmingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f926, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman facepalming: dark skin tone",
            searchTerms: new string[] { "woman", "facepalming", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 815
        );

        /* ü§∑ */
        public static readonly SingleEmoji PersonShrugging = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937 }),
            name: "person shrugging",
            searchTerms: new string[] { "person", "shrugging" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 817
        );

        /* ü§∑üèª */
        public static readonly SingleEmoji PersonShruggingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fb }),
            name: "person shrugging: light skin tone",
            searchTerms: new string[] { "person", "shrugging", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 818
        );

        /* ü§∑üèº */
        public static readonly SingleEmoji PersonShruggingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fc }),
            name: "person shrugging: medium-light skin tone",
            searchTerms: new string[] { "person", "shrugging", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 819
        );

        /* ü§∑üèΩ */
        public static readonly SingleEmoji PersonShruggingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fd }),
            name: "person shrugging: medium skin tone",
            searchTerms: new string[] { "person", "shrugging", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 820
        );

        /* ü§∑üèæ */
        public static readonly SingleEmoji PersonShruggingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fe }),
            name: "person shrugging: medium-dark skin tone",
            searchTerms: new string[] { "person", "shrugging", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 821
        );

        /* ü§∑üèø */
        public static readonly SingleEmoji PersonShruggingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3ff }),
            name: "person shrugging: dark skin tone",
            searchTerms: new string[] { "person", "shrugging", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 822
        );

        /* ü§∑‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManShrugging = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x200d, 0x2642, 0xfe0f }),
            name: "man shrugging",
            searchTerms: new string[] { "man", "shrugging" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 823
        );

        /* ü§∑üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManShruggingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man shrugging: light skin tone",
            searchTerms: new string[] { "man", "shrugging", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 825
        );

        /* ü§∑üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManShruggingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man shrugging: medium-light skin tone",
            searchTerms: new string[] { "man", "shrugging", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 827
        );

        /* ü§∑üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManShruggingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man shrugging: medium skin tone",
            searchTerms: new string[] { "man", "shrugging", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 829
        );

        /* ü§∑üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManShruggingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man shrugging: medium-dark skin tone",
            searchTerms: new string[] { "man", "shrugging", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 831
        );

        /* ü§∑üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManShruggingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man shrugging: dark skin tone",
            searchTerms: new string[] { "man", "shrugging", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 833
        );

        /* ü§∑‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanShrugging = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x200d, 0x2640, 0xfe0f }),
            name: "woman shrugging",
            searchTerms: new string[] { "woman", "shrugging" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 835
        );

        /* ü§∑üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanShruggingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman shrugging: light skin tone",
            searchTerms: new string[] { "woman", "shrugging", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 837
        );

        /* ü§∑üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanShruggingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman shrugging: medium-light skin tone",
            searchTerms: new string[] { "woman", "shrugging", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 839
        );

        /* ü§∑üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanShruggingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman shrugging: medium skin tone",
            searchTerms: new string[] { "woman", "shrugging", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 841
        );

        /* ü§∑üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanShruggingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman shrugging: medium-dark skin tone",
            searchTerms: new string[] { "woman", "shrugging", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 843
        );

        /* ü§∑üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanShruggingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f937, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman shrugging: dark skin tone",
            searchTerms: new string[] { "woman", "shrugging", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_GESTURE,
            hasGlyph: true,
            sortOrder: 845
        );

        /* üë®‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji ManHealthWorker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x2695, 0xfe0f }),
            name: "man health worker",
            searchTerms: new string[] { "man", "health", "worker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 847
        );

        /* üë®üèª‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji ManHealthWorkerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x2695, 0xfe0f }),
            name: "man health worker: light skin tone",
            searchTerms: new string[] { "man", "health", "worker", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 849
        );

        /* üë®üèº‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji ManHealthWorkerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x2695, 0xfe0f }),
            name: "man health worker: medium-light skin tone",
            searchTerms: new string[] { "man", "health", "worker", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 851
        );

        /* üë®üèΩ‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji ManHealthWorkerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x2695, 0xfe0f }),
            name: "man health worker: medium skin tone",
            searchTerms: new string[] { "man", "health", "worker", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 853
        );

        /* üë®üèæ‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji ManHealthWorkerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x2695, 0xfe0f }),
            name: "man health worker: medium-dark skin tone",
            searchTerms: new string[] { "man", "health", "worker", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 855
        );

        /* üë®üèø‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji ManHealthWorkerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x2695, 0xfe0f }),
            name: "man health worker: dark skin tone",
            searchTerms: new string[] { "man", "health", "worker", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 857
        );

        /* üë©‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji WomanHealthWorker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x2695, 0xfe0f }),
            name: "woman health worker",
            searchTerms: new string[] { "woman", "health", "worker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 859
        );

        /* üë©üèª‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji WomanHealthWorkerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x2695, 0xfe0f }),
            name: "woman health worker: light skin tone",
            searchTerms: new string[] { "woman", "health", "worker", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 861
        );

        /* üë©üèº‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji WomanHealthWorkerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x2695, 0xfe0f }),
            name: "woman health worker: medium-light skin tone",
            searchTerms: new string[] { "woman", "health", "worker", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 863
        );

        /* üë©üèΩ‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji WomanHealthWorkerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x2695, 0xfe0f }),
            name: "woman health worker: medium skin tone",
            searchTerms: new string[] { "woman", "health", "worker", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 865
        );

        /* üë©üèæ‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji WomanHealthWorkerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x2695, 0xfe0f }),
            name: "woman health worker: medium-dark skin tone",
            searchTerms: new string[] { "woman", "health", "worker", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 867
        );

        /* üë©üèø‚Äç‚öïÔ∏è */
        public static readonly SingleEmoji WomanHealthWorkerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x2695, 0xfe0f }),
            name: "woman health worker: dark skin tone",
            searchTerms: new string[] { "woman", "health", "worker", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 869
        );

        /* üë®‚Äçüéì */
        public static readonly SingleEmoji ManStudent = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f393 }),
            name: "man student",
            searchTerms: new string[] { "man", "student" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 871
        );

        /* üë®üèª‚Äçüéì */
        public static readonly SingleEmoji ManStudentLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f393 }),
            name: "man student: light skin tone",
            searchTerms: new string[] { "man", "student", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 872
        );

        /* üë®üèº‚Äçüéì */
        public static readonly SingleEmoji ManStudentMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f393 }),
            name: "man student: medium-light skin tone",
            searchTerms: new string[] { "man", "student", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 873
        );

        /* üë®üèΩ‚Äçüéì */
        public static readonly SingleEmoji ManStudentMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f393 }),
            name: "man student: medium skin tone",
            searchTerms: new string[] { "man", "student", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 874
        );

        /* üë®üèæ‚Äçüéì */
        public static readonly SingleEmoji ManStudentMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f393 }),
            name: "man student: medium-dark skin tone",
            searchTerms: new string[] { "man", "student", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 875
        );

        /* üë®üèø‚Äçüéì */
        public static readonly SingleEmoji ManStudentDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f393 }),
            name: "man student: dark skin tone",
            searchTerms: new string[] { "man", "student", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 876
        );

        /* üë©‚Äçüéì */
        public static readonly SingleEmoji WomanStudent = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f393 }),
            name: "woman student",
            searchTerms: new string[] { "woman", "student" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 877
        );

        /* üë©üèª‚Äçüéì */
        public static readonly SingleEmoji WomanStudentLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f393 }),
            name: "woman student: light skin tone",
            searchTerms: new string[] { "woman", "student", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 878
        );

        /* üë©üèº‚Äçüéì */
        public static readonly SingleEmoji WomanStudentMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f393 }),
            name: "woman student: medium-light skin tone",
            searchTerms: new string[] { "woman", "student", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 879
        );

        /* üë©üèΩ‚Äçüéì */
        public static readonly SingleEmoji WomanStudentMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f393 }),
            name: "woman student: medium skin tone",
            searchTerms: new string[] { "woman", "student", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 880
        );

        /* üë©üèæ‚Äçüéì */
        public static readonly SingleEmoji WomanStudentMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f393 }),
            name: "woman student: medium-dark skin tone",
            searchTerms: new string[] { "woman", "student", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 881
        );

        /* üë©üèø‚Äçüéì */
        public static readonly SingleEmoji WomanStudentDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f393 }),
            name: "woman student: dark skin tone",
            searchTerms: new string[] { "woman", "student", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 882
        );

        /* üë®‚Äçüè´ */
        public static readonly SingleEmoji ManTeacher = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f3eb }),
            name: "man teacher",
            searchTerms: new string[] { "man", "teacher" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 883
        );

        /* üë®üèª‚Äçüè´ */
        public static readonly SingleEmoji ManTeacherLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f3eb }),
            name: "man teacher: light skin tone",
            searchTerms: new string[] { "man", "teacher", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 884
        );

        /* üë®üèº‚Äçüè´ */
        public static readonly SingleEmoji ManTeacherMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f3eb }),
            name: "man teacher: medium-light skin tone",
            searchTerms: new string[] { "man", "teacher", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 885
        );

        /* üë®üèΩ‚Äçüè´ */
        public static readonly SingleEmoji ManTeacherMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f3eb }),
            name: "man teacher: medium skin tone",
            searchTerms: new string[] { "man", "teacher", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 886
        );

        /* üë®üèæ‚Äçüè´ */
        public static readonly SingleEmoji ManTeacherMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f3eb }),
            name: "man teacher: medium-dark skin tone",
            searchTerms: new string[] { "man", "teacher", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 887
        );

        /* üë®üèø‚Äçüè´ */
        public static readonly SingleEmoji ManTeacherDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f3eb }),
            name: "man teacher: dark skin tone",
            searchTerms: new string[] { "man", "teacher", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 888
        );

        /* üë©‚Äçüè´ */
        public static readonly SingleEmoji WomanTeacher = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f3eb }),
            name: "woman teacher",
            searchTerms: new string[] { "woman", "teacher" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 889
        );

        /* üë©üèª‚Äçüè´ */
        public static readonly SingleEmoji WomanTeacherLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f3eb }),
            name: "woman teacher: light skin tone",
            searchTerms: new string[] { "woman", "teacher", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 890
        );

        /* üë©üèº‚Äçüè´ */
        public static readonly SingleEmoji WomanTeacherMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f3eb }),
            name: "woman teacher: medium-light skin tone",
            searchTerms: new string[] { "woman", "teacher", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 891
        );

        /* üë©üèΩ‚Äçüè´ */
        public static readonly SingleEmoji WomanTeacherMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f3eb }),
            name: "woman teacher: medium skin tone",
            searchTerms: new string[] { "woman", "teacher", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 892
        );

        /* üë©üèæ‚Äçüè´ */
        public static readonly SingleEmoji WomanTeacherMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f3eb }),
            name: "woman teacher: medium-dark skin tone",
            searchTerms: new string[] { "woman", "teacher", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 893
        );

        /* üë©üèø‚Äçüè´ */
        public static readonly SingleEmoji WomanTeacherDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f3eb }),
            name: "woman teacher: dark skin tone",
            searchTerms: new string[] { "woman", "teacher", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 894
        );

        /* üë®‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji ManJudge = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x2696, 0xfe0f }),
            name: "man judge",
            searchTerms: new string[] { "man", "judge" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 895
        );

        /* üë®üèª‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji ManJudgeLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x2696, 0xfe0f }),
            name: "man judge: light skin tone",
            searchTerms: new string[] { "man", "judge", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 897
        );

        /* üë®üèº‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji ManJudgeMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x2696, 0xfe0f }),
            name: "man judge: medium-light skin tone",
            searchTerms: new string[] { "man", "judge", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 899
        );

        /* üë®üèΩ‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji ManJudgeMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x2696, 0xfe0f }),
            name: "man judge: medium skin tone",
            searchTerms: new string[] { "man", "judge", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 901
        );

        /* üë®üèæ‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji ManJudgeMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x2696, 0xfe0f }),
            name: "man judge: medium-dark skin tone",
            searchTerms: new string[] { "man", "judge", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 903
        );

        /* üë®üèø‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji ManJudgeDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x2696, 0xfe0f }),
            name: "man judge: dark skin tone",
            searchTerms: new string[] { "man", "judge", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 905
        );

        /* üë©‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji WomanJudge = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x2696, 0xfe0f }),
            name: "woman judge",
            searchTerms: new string[] { "woman", "judge" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 907
        );

        /* üë©üèª‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji WomanJudgeLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x2696, 0xfe0f }),
            name: "woman judge: light skin tone",
            searchTerms: new string[] { "woman", "judge", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 909
        );

        /* üë©üèº‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji WomanJudgeMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x2696, 0xfe0f }),
            name: "woman judge: medium-light skin tone",
            searchTerms: new string[] { "woman", "judge", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 911
        );

        /* üë©üèΩ‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji WomanJudgeMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x2696, 0xfe0f }),
            name: "woman judge: medium skin tone",
            searchTerms: new string[] { "woman", "judge", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 913
        );

        /* üë©üèæ‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji WomanJudgeMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x2696, 0xfe0f }),
            name: "woman judge: medium-dark skin tone",
            searchTerms: new string[] { "woman", "judge", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 915
        );

        /* üë©üèø‚Äç‚öñÔ∏è */
        public static readonly SingleEmoji WomanJudgeDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x2696, 0xfe0f }),
            name: "woman judge: dark skin tone",
            searchTerms: new string[] { "woman", "judge", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 917
        );

        /* üë®‚Äçüåæ */
        public static readonly SingleEmoji ManFarmer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f33e }),
            name: "man farmer",
            searchTerms: new string[] { "man", "farmer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 919
        );

        /* üë®üèª‚Äçüåæ */
        public static readonly SingleEmoji ManFarmerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f33e }),
            name: "man farmer: light skin tone",
            searchTerms: new string[] { "man", "farmer", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 920
        );

        /* üë®üèº‚Äçüåæ */
        public static readonly SingleEmoji ManFarmerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f33e }),
            name: "man farmer: medium-light skin tone",
            searchTerms: new string[] { "man", "farmer", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 921
        );

        /* üë®üèΩ‚Äçüåæ */
        public static readonly SingleEmoji ManFarmerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f33e }),
            name: "man farmer: medium skin tone",
            searchTerms: new string[] { "man", "farmer", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 922
        );

        /* üë®üèæ‚Äçüåæ */
        public static readonly SingleEmoji ManFarmerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f33e }),
            name: "man farmer: medium-dark skin tone",
            searchTerms: new string[] { "man", "farmer", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 923
        );

        /* üë®üèø‚Äçüåæ */
        public static readonly SingleEmoji ManFarmerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f33e }),
            name: "man farmer: dark skin tone",
            searchTerms: new string[] { "man", "farmer", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 924
        );

        /* üë©‚Äçüåæ */
        public static readonly SingleEmoji WomanFarmer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f33e }),
            name: "woman farmer",
            searchTerms: new string[] { "woman", "farmer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 925
        );

        /* üë©üèª‚Äçüåæ */
        public static readonly SingleEmoji WomanFarmerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f33e }),
            name: "woman farmer: light skin tone",
            searchTerms: new string[] { "woman", "farmer", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 926
        );

        /* üë©üèº‚Äçüåæ */
        public static readonly SingleEmoji WomanFarmerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f33e }),
            name: "woman farmer: medium-light skin tone",
            searchTerms: new string[] { "woman", "farmer", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 927
        );

        /* üë©üèΩ‚Äçüåæ */
        public static readonly SingleEmoji WomanFarmerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f33e }),
            name: "woman farmer: medium skin tone",
            searchTerms: new string[] { "woman", "farmer", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 928
        );

        /* üë©üèæ‚Äçüåæ */
        public static readonly SingleEmoji WomanFarmerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f33e }),
            name: "woman farmer: medium-dark skin tone",
            searchTerms: new string[] { "woman", "farmer", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 929
        );

        /* üë©üèø‚Äçüåæ */
        public static readonly SingleEmoji WomanFarmerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f33e }),
            name: "woman farmer: dark skin tone",
            searchTerms: new string[] { "woman", "farmer", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 930
        );

        /* üë®‚Äçüç≥ */
        public static readonly SingleEmoji ManCook = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f373 }),
            name: "man cook",
            searchTerms: new string[] { "man", "cook" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 931
        );

        /* üë®üèª‚Äçüç≥ */
        public static readonly SingleEmoji ManCookLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f373 }),
            name: "man cook: light skin tone",
            searchTerms: new string[] { "man", "cook", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 932
        );

        /* üë®üèº‚Äçüç≥ */
        public static readonly SingleEmoji ManCookMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f373 }),
            name: "man cook: medium-light skin tone",
            searchTerms: new string[] { "man", "cook", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 933
        );

        /* üë®üèΩ‚Äçüç≥ */
        public static readonly SingleEmoji ManCookMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f373 }),
            name: "man cook: medium skin tone",
            searchTerms: new string[] { "man", "cook", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 934
        );

        /* üë®üèæ‚Äçüç≥ */
        public static readonly SingleEmoji ManCookMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f373 }),
            name: "man cook: medium-dark skin tone",
            searchTerms: new string[] { "man", "cook", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 935
        );

        /* üë®üèø‚Äçüç≥ */
        public static readonly SingleEmoji ManCookDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f373 }),
            name: "man cook: dark skin tone",
            searchTerms: new string[] { "man", "cook", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 936
        );

        /* üë©‚Äçüç≥ */
        public static readonly SingleEmoji WomanCook = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f373 }),
            name: "woman cook",
            searchTerms: new string[] { "woman", "cook" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 937
        );

        /* üë©üèª‚Äçüç≥ */
        public static readonly SingleEmoji WomanCookLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f373 }),
            name: "woman cook: light skin tone",
            searchTerms: new string[] { "woman", "cook", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 938
        );

        /* üë©üèº‚Äçüç≥ */
        public static readonly SingleEmoji WomanCookMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f373 }),
            name: "woman cook: medium-light skin tone",
            searchTerms: new string[] { "woman", "cook", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 939
        );

        /* üë©üèΩ‚Äçüç≥ */
        public static readonly SingleEmoji WomanCookMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f373 }),
            name: "woman cook: medium skin tone",
            searchTerms: new string[] { "woman", "cook", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 940
        );

        /* üë©üèæ‚Äçüç≥ */
        public static readonly SingleEmoji WomanCookMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f373 }),
            name: "woman cook: medium-dark skin tone",
            searchTerms: new string[] { "woman", "cook", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 941
        );

        /* üë©üèø‚Äçüç≥ */
        public static readonly SingleEmoji WomanCookDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f373 }),
            name: "woman cook: dark skin tone",
            searchTerms: new string[] { "woman", "cook", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 942
        );

        /* üë®‚Äçüîß */
        public static readonly SingleEmoji ManMechanic = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f527 }),
            name: "man mechanic",
            searchTerms: new string[] { "man", "mechanic" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 943
        );

        /* üë®üèª‚Äçüîß */
        public static readonly SingleEmoji ManMechanicLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f527 }),
            name: "man mechanic: light skin tone",
            searchTerms: new string[] { "man", "mechanic", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 944
        );

        /* üë®üèº‚Äçüîß */
        public static readonly SingleEmoji ManMechanicMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f527 }),
            name: "man mechanic: medium-light skin tone",
            searchTerms: new string[] { "man", "mechanic", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 945
        );

        /* üë®üèΩ‚Äçüîß */
        public static readonly SingleEmoji ManMechanicMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f527 }),
            name: "man mechanic: medium skin tone",
            searchTerms: new string[] { "man", "mechanic", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 946
        );

        /* üë®üèæ‚Äçüîß */
        public static readonly SingleEmoji ManMechanicMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f527 }),
            name: "man mechanic: medium-dark skin tone",
            searchTerms: new string[] { "man", "mechanic", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 947
        );

        /* üë®üèø‚Äçüîß */
        public static readonly SingleEmoji ManMechanicDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f527 }),
            name: "man mechanic: dark skin tone",
            searchTerms: new string[] { "man", "mechanic", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 948
        );

        /* üë©‚Äçüîß */
        public static readonly SingleEmoji WomanMechanic = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f527 }),
            name: "woman mechanic",
            searchTerms: new string[] { "woman", "mechanic" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 949
        );

        /* üë©üèª‚Äçüîß */
        public static readonly SingleEmoji WomanMechanicLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f527 }),
            name: "woman mechanic: light skin tone",
            searchTerms: new string[] { "woman", "mechanic", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 950
        );

        /* üë©üèº‚Äçüîß */
        public static readonly SingleEmoji WomanMechanicMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f527 }),
            name: "woman mechanic: medium-light skin tone",
            searchTerms: new string[] { "woman", "mechanic", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 951
        );

        /* üë©üèΩ‚Äçüîß */
        public static readonly SingleEmoji WomanMechanicMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f527 }),
            name: "woman mechanic: medium skin tone",
            searchTerms: new string[] { "woman", "mechanic", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 952
        );

        /* üë©üèæ‚Äçüîß */
        public static readonly SingleEmoji WomanMechanicMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f527 }),
            name: "woman mechanic: medium-dark skin tone",
            searchTerms: new string[] { "woman", "mechanic", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 953
        );

        /* üë©üèø‚Äçüîß */
        public static readonly SingleEmoji WomanMechanicDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f527 }),
            name: "woman mechanic: dark skin tone",
            searchTerms: new string[] { "woman", "mechanic", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 954
        );

        /* üë®‚Äçüè≠ */
        public static readonly SingleEmoji ManFactoryWorker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f3ed }),
            name: "man factory worker",
            searchTerms: new string[] { "man", "factory", "worker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 955
        );

        /* üë®üèª‚Äçüè≠ */
        public static readonly SingleEmoji ManFactoryWorkerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f3ed }),
            name: "man factory worker: light skin tone",
            searchTerms: new string[] { "man", "factory", "worker", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 956
        );

        /* üë®üèº‚Äçüè≠ */
        public static readonly SingleEmoji ManFactoryWorkerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f3ed }),
            name: "man factory worker: medium-light skin tone",
            searchTerms: new string[] { "man", "factory", "worker", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 957
        );

        /* üë®üèΩ‚Äçüè≠ */
        public static readonly SingleEmoji ManFactoryWorkerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f3ed }),
            name: "man factory worker: medium skin tone",
            searchTerms: new string[] { "man", "factory", "worker", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 958
        );

        /* üë®üèæ‚Äçüè≠ */
        public static readonly SingleEmoji ManFactoryWorkerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f3ed }),
            name: "man factory worker: medium-dark skin tone",
            searchTerms: new string[] { "man", "factory", "worker", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 959
        );

        /* üë®üèø‚Äçüè≠ */
        public static readonly SingleEmoji ManFactoryWorkerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f3ed }),
            name: "man factory worker: dark skin tone",
            searchTerms: new string[] { "man", "factory", "worker", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 960
        );

        /* üë©‚Äçüè≠ */
        public static readonly SingleEmoji WomanFactoryWorker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f3ed }),
            name: "woman factory worker",
            searchTerms: new string[] { "woman", "factory", "worker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 961
        );

        /* üë©üèª‚Äçüè≠ */
        public static readonly SingleEmoji WomanFactoryWorkerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f3ed }),
            name: "woman factory worker: light skin tone",
            searchTerms: new string[] { "woman", "factory", "worker", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 962
        );

        /* üë©üèº‚Äçüè≠ */
        public static readonly SingleEmoji WomanFactoryWorkerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f3ed }),
            name: "woman factory worker: medium-light skin tone",
            searchTerms: new string[] { "woman", "factory", "worker", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 963
        );

        /* üë©üèΩ‚Äçüè≠ */
        public static readonly SingleEmoji WomanFactoryWorkerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f3ed }),
            name: "woman factory worker: medium skin tone",
            searchTerms: new string[] { "woman", "factory", "worker", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 964
        );

        /* üë©üèæ‚Äçüè≠ */
        public static readonly SingleEmoji WomanFactoryWorkerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f3ed }),
            name: "woman factory worker: medium-dark skin tone",
            searchTerms: new string[] { "woman", "factory", "worker", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 965
        );

        /* üë©üèø‚Äçüè≠ */
        public static readonly SingleEmoji WomanFactoryWorkerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f3ed }),
            name: "woman factory worker: dark skin tone",
            searchTerms: new string[] { "woman", "factory", "worker", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 966
        );

        /* üë®‚Äçüíº */
        public static readonly SingleEmoji ManOfficeWorker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f4bc }),
            name: "man office worker",
            searchTerms: new string[] { "man", "office", "worker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 967
        );

        /* üë®üèª‚Äçüíº */
        public static readonly SingleEmoji ManOfficeWorkerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f4bc }),
            name: "man office worker: light skin tone",
            searchTerms: new string[] { "man", "office", "worker", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 968
        );

        /* üë®üèº‚Äçüíº */
        public static readonly SingleEmoji ManOfficeWorkerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f4bc }),
            name: "man office worker: medium-light skin tone",
            searchTerms: new string[] { "man", "office", "worker", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 969
        );

        /* üë®üèΩ‚Äçüíº */
        public static readonly SingleEmoji ManOfficeWorkerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f4bc }),
            name: "man office worker: medium skin tone",
            searchTerms: new string[] { "man", "office", "worker", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 970
        );

        /* üë®üèæ‚Äçüíº */
        public static readonly SingleEmoji ManOfficeWorkerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f4bc }),
            name: "man office worker: medium-dark skin tone",
            searchTerms: new string[] { "man", "office", "worker", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 971
        );

        /* üë®üèø‚Äçüíº */
        public static readonly SingleEmoji ManOfficeWorkerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f4bc }),
            name: "man office worker: dark skin tone",
            searchTerms: new string[] { "man", "office", "worker", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 972
        );

        /* üë©‚Äçüíº */
        public static readonly SingleEmoji WomanOfficeWorker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f4bc }),
            name: "woman office worker",
            searchTerms: new string[] { "woman", "office", "worker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 973
        );

        /* üë©üèª‚Äçüíº */
        public static readonly SingleEmoji WomanOfficeWorkerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f4bc }),
            name: "woman office worker: light skin tone",
            searchTerms: new string[] { "woman", "office", "worker", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 974
        );

        /* üë©üèº‚Äçüíº */
        public static readonly SingleEmoji WomanOfficeWorkerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f4bc }),
            name: "woman office worker: medium-light skin tone",
            searchTerms: new string[] { "woman", "office", "worker", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 975
        );

        /* üë©üèΩ‚Äçüíº */
        public static readonly SingleEmoji WomanOfficeWorkerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f4bc }),
            name: "woman office worker: medium skin tone",
            searchTerms: new string[] { "woman", "office", "worker", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 976
        );

        /* üë©üèæ‚Äçüíº */
        public static readonly SingleEmoji WomanOfficeWorkerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f4bc }),
            name: "woman office worker: medium-dark skin tone",
            searchTerms: new string[] { "woman", "office", "worker", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 977
        );

        /* üë©üèø‚Äçüíº */
        public static readonly SingleEmoji WomanOfficeWorkerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f4bc }),
            name: "woman office worker: dark skin tone",
            searchTerms: new string[] { "woman", "office", "worker", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 978
        );

        /* üë®‚Äçüî¨ */
        public static readonly SingleEmoji ManScientist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f52c }),
            name: "man scientist",
            searchTerms: new string[] { "man", "scientist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 979
        );

        /* üë®üèª‚Äçüî¨ */
        public static readonly SingleEmoji ManScientistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f52c }),
            name: "man scientist: light skin tone",
            searchTerms: new string[] { "man", "scientist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 980
        );

        /* üë®üèº‚Äçüî¨ */
        public static readonly SingleEmoji ManScientistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f52c }),
            name: "man scientist: medium-light skin tone",
            searchTerms: new string[] { "man", "scientist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 981
        );

        /* üë®üèΩ‚Äçüî¨ */
        public static readonly SingleEmoji ManScientistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f52c }),
            name: "man scientist: medium skin tone",
            searchTerms: new string[] { "man", "scientist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 982
        );

        /* üë®üèæ‚Äçüî¨ */
        public static readonly SingleEmoji ManScientistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f52c }),
            name: "man scientist: medium-dark skin tone",
            searchTerms: new string[] { "man", "scientist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 983
        );

        /* üë®üèø‚Äçüî¨ */
        public static readonly SingleEmoji ManScientistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f52c }),
            name: "man scientist: dark skin tone",
            searchTerms: new string[] { "man", "scientist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 984
        );

        /* üë©‚Äçüî¨ */
        public static readonly SingleEmoji WomanScientist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f52c }),
            name: "woman scientist",
            searchTerms: new string[] { "woman", "scientist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 985
        );

        /* üë©üèª‚Äçüî¨ */
        public static readonly SingleEmoji WomanScientistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f52c }),
            name: "woman scientist: light skin tone",
            searchTerms: new string[] { "woman", "scientist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 986
        );

        /* üë©üèº‚Äçüî¨ */
        public static readonly SingleEmoji WomanScientistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f52c }),
            name: "woman scientist: medium-light skin tone",
            searchTerms: new string[] { "woman", "scientist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 987
        );

        /* üë©üèΩ‚Äçüî¨ */
        public static readonly SingleEmoji WomanScientistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f52c }),
            name: "woman scientist: medium skin tone",
            searchTerms: new string[] { "woman", "scientist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 988
        );

        /* üë©üèæ‚Äçüî¨ */
        public static readonly SingleEmoji WomanScientistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f52c }),
            name: "woman scientist: medium-dark skin tone",
            searchTerms: new string[] { "woman", "scientist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 989
        );

        /* üë©üèø‚Äçüî¨ */
        public static readonly SingleEmoji WomanScientistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f52c }),
            name: "woman scientist: dark skin tone",
            searchTerms: new string[] { "woman", "scientist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 990
        );

        /* üë®‚Äçüíª */
        public static readonly SingleEmoji ManTechnologist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f4bb }),
            name: "man technologist",
            searchTerms: new string[] { "man", "technologist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 991
        );

        /* üë®üèª‚Äçüíª */
        public static readonly SingleEmoji ManTechnologistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f4bb }),
            name: "man technologist: light skin tone",
            searchTerms: new string[] { "man", "technologist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 992
        );

        /* üë®üèº‚Äçüíª */
        public static readonly SingleEmoji ManTechnologistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f4bb }),
            name: "man technologist: medium-light skin tone",
            searchTerms: new string[] { "man", "technologist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 993
        );

        /* üë®üèΩ‚Äçüíª */
        public static readonly SingleEmoji ManTechnologistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f4bb }),
            name: "man technologist: medium skin tone",
            searchTerms: new string[] { "man", "technologist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 994
        );

        /* üë®üèæ‚Äçüíª */
        public static readonly SingleEmoji ManTechnologistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f4bb }),
            name: "man technologist: medium-dark skin tone",
            searchTerms: new string[] { "man", "technologist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 995
        );

        /* üë®üèø‚Äçüíª */
        public static readonly SingleEmoji ManTechnologistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f4bb }),
            name: "man technologist: dark skin tone",
            searchTerms: new string[] { "man", "technologist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 996
        );

        /* üë©‚Äçüíª */
        public static readonly SingleEmoji WomanTechnologist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f4bb }),
            name: "woman technologist",
            searchTerms: new string[] { "woman", "technologist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 997
        );

        /* üë©üèª‚Äçüíª */
        public static readonly SingleEmoji WomanTechnologistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f4bb }),
            name: "woman technologist: light skin tone",
            searchTerms: new string[] { "woman", "technologist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 998
        );

        /* üë©üèº‚Äçüíª */
        public static readonly SingleEmoji WomanTechnologistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f4bb }),
            name: "woman technologist: medium-light skin tone",
            searchTerms: new string[] { "woman", "technologist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 999
        );

        /* üë©üèΩ‚Äçüíª */
        public static readonly SingleEmoji WomanTechnologistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f4bb }),
            name: "woman technologist: medium skin tone",
            searchTerms: new string[] { "woman", "technologist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1000
        );

        /* üë©üèæ‚Äçüíª */
        public static readonly SingleEmoji WomanTechnologistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f4bb }),
            name: "woman technologist: medium-dark skin tone",
            searchTerms: new string[] { "woman", "technologist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1001
        );

        /* üë©üèø‚Äçüíª */
        public static readonly SingleEmoji WomanTechnologistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f4bb }),
            name: "woman technologist: dark skin tone",
            searchTerms: new string[] { "woman", "technologist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1002
        );

        /* üë®‚Äçüé§ */
        public static readonly SingleEmoji ManSinger = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f3a4 }),
            name: "man singer",
            searchTerms: new string[] { "man", "singer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1003
        );

        /* üë®üèª‚Äçüé§ */
        public static readonly SingleEmoji ManSingerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f3a4 }),
            name: "man singer: light skin tone",
            searchTerms: new string[] { "man", "singer", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1004
        );

        /* üë®üèº‚Äçüé§ */
        public static readonly SingleEmoji ManSingerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f3a4 }),
            name: "man singer: medium-light skin tone",
            searchTerms: new string[] { "man", "singer", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1005
        );

        /* üë®üèΩ‚Äçüé§ */
        public static readonly SingleEmoji ManSingerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f3a4 }),
            name: "man singer: medium skin tone",
            searchTerms: new string[] { "man", "singer", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1006
        );

        /* üë®üèæ‚Äçüé§ */
        public static readonly SingleEmoji ManSingerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f3a4 }),
            name: "man singer: medium-dark skin tone",
            searchTerms: new string[] { "man", "singer", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1007
        );

        /* üë®üèø‚Äçüé§ */
        public static readonly SingleEmoji ManSingerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f3a4 }),
            name: "man singer: dark skin tone",
            searchTerms: new string[] { "man", "singer", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1008
        );

        /* üë©‚Äçüé§ */
        public static readonly SingleEmoji WomanSinger = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f3a4 }),
            name: "woman singer",
            searchTerms: new string[] { "woman", "singer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1009
        );

        /* üë©üèª‚Äçüé§ */
        public static readonly SingleEmoji WomanSingerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f3a4 }),
            name: "woman singer: light skin tone",
            searchTerms: new string[] { "woman", "singer", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1010
        );

        /* üë©üèº‚Äçüé§ */
        public static readonly SingleEmoji WomanSingerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f3a4 }),
            name: "woman singer: medium-light skin tone",
            searchTerms: new string[] { "woman", "singer", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1011
        );

        /* üë©üèΩ‚Äçüé§ */
        public static readonly SingleEmoji WomanSingerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f3a4 }),
            name: "woman singer: medium skin tone",
            searchTerms: new string[] { "woman", "singer", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1012
        );

        /* üë©üèæ‚Äçüé§ */
        public static readonly SingleEmoji WomanSingerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f3a4 }),
            name: "woman singer: medium-dark skin tone",
            searchTerms: new string[] { "woman", "singer", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1013
        );

        /* üë©üèø‚Äçüé§ */
        public static readonly SingleEmoji WomanSingerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f3a4 }),
            name: "woman singer: dark skin tone",
            searchTerms: new string[] { "woman", "singer", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1014
        );

        /* üë®‚Äçüé® */
        public static readonly SingleEmoji ManArtist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f3a8 }),
            name: "man artist",
            searchTerms: new string[] { "man", "artist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1015
        );

        /* üë®üèª‚Äçüé® */
        public static readonly SingleEmoji ManArtistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f3a8 }),
            name: "man artist: light skin tone",
            searchTerms: new string[] { "man", "artist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1016
        );

        /* üë®üèº‚Äçüé® */
        public static readonly SingleEmoji ManArtistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f3a8 }),
            name: "man artist: medium-light skin tone",
            searchTerms: new string[] { "man", "artist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1017
        );

        /* üë®üèΩ‚Äçüé® */
        public static readonly SingleEmoji ManArtistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f3a8 }),
            name: "man artist: medium skin tone",
            searchTerms: new string[] { "man", "artist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1018
        );

        /* üë®üèæ‚Äçüé® */
        public static readonly SingleEmoji ManArtistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f3a8 }),
            name: "man artist: medium-dark skin tone",
            searchTerms: new string[] { "man", "artist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1019
        );

        /* üë®üèø‚Äçüé® */
        public static readonly SingleEmoji ManArtistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f3a8 }),
            name: "man artist: dark skin tone",
            searchTerms: new string[] { "man", "artist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1020
        );

        /* üë©‚Äçüé® */
        public static readonly SingleEmoji WomanArtist = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f3a8 }),
            name: "woman artist",
            searchTerms: new string[] { "woman", "artist" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1021
        );

        /* üë©üèª‚Äçüé® */
        public static readonly SingleEmoji WomanArtistLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f3a8 }),
            name: "woman artist: light skin tone",
            searchTerms: new string[] { "woman", "artist", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1022
        );

        /* üë©üèº‚Äçüé® */
        public static readonly SingleEmoji WomanArtistMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f3a8 }),
            name: "woman artist: medium-light skin tone",
            searchTerms: new string[] { "woman", "artist", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1023
        );

        /* üë©üèΩ‚Äçüé® */
        public static readonly SingleEmoji WomanArtistMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f3a8 }),
            name: "woman artist: medium skin tone",
            searchTerms: new string[] { "woman", "artist", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1024
        );

        /* üë©üèæ‚Äçüé® */
        public static readonly SingleEmoji WomanArtistMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f3a8 }),
            name: "woman artist: medium-dark skin tone",
            searchTerms: new string[] { "woman", "artist", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1025
        );

        /* üë©üèø‚Äçüé® */
        public static readonly SingleEmoji WomanArtistDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f3a8 }),
            name: "woman artist: dark skin tone",
            searchTerms: new string[] { "woman", "artist", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1026
        );

        /* üë®‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji ManPilot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x2708, 0xfe0f }),
            name: "man pilot",
            searchTerms: new string[] { "man", "pilot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1027
        );

        /* üë®üèª‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji ManPilotLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x2708, 0xfe0f }),
            name: "man pilot: light skin tone",
            searchTerms: new string[] { "man", "pilot", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1029
        );

        /* üë®üèº‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji ManPilotMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x2708, 0xfe0f }),
            name: "man pilot: medium-light skin tone",
            searchTerms: new string[] { "man", "pilot", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1031
        );

        /* üë®üèΩ‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji ManPilotMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x2708, 0xfe0f }),
            name: "man pilot: medium skin tone",
            searchTerms: new string[] { "man", "pilot", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1033
        );

        /* üë®üèæ‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji ManPilotMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x2708, 0xfe0f }),
            name: "man pilot: medium-dark skin tone",
            searchTerms: new string[] { "man", "pilot", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1035
        );

        /* üë®üèø‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji ManPilotDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x2708, 0xfe0f }),
            name: "man pilot: dark skin tone",
            searchTerms: new string[] { "man", "pilot", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1037
        );

        /* üë©‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji WomanPilot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x2708, 0xfe0f }),
            name: "woman pilot",
            searchTerms: new string[] { "woman", "pilot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1039
        );

        /* üë©üèª‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji WomanPilotLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x2708, 0xfe0f }),
            name: "woman pilot: light skin tone",
            searchTerms: new string[] { "woman", "pilot", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1041
        );

        /* üë©üèº‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji WomanPilotMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x2708, 0xfe0f }),
            name: "woman pilot: medium-light skin tone",
            searchTerms: new string[] { "woman", "pilot", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1043
        );

        /* üë©üèΩ‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji WomanPilotMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x2708, 0xfe0f }),
            name: "woman pilot: medium skin tone",
            searchTerms: new string[] { "woman", "pilot", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1045
        );

        /* üë©üèæ‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji WomanPilotMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x2708, 0xfe0f }),
            name: "woman pilot: medium-dark skin tone",
            searchTerms: new string[] { "woman", "pilot", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1047
        );

        /* üë©üèø‚Äç‚úàÔ∏è */
        public static readonly SingleEmoji WomanPilotDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x2708, 0xfe0f }),
            name: "woman pilot: dark skin tone",
            searchTerms: new string[] { "woman", "pilot", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1049
        );

        /* üë®‚ÄçüöÄ */
        public static readonly SingleEmoji ManAstronaut = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f680 }),
            name: "man astronaut",
            searchTerms: new string[] { "man", "astronaut" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1051
        );

        /* üë®üèª‚ÄçüöÄ */
        public static readonly SingleEmoji ManAstronautLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f680 }),
            name: "man astronaut: light skin tone",
            searchTerms: new string[] { "man", "astronaut", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1052
        );

        /* üë®üèº‚ÄçüöÄ */
        public static readonly SingleEmoji ManAstronautMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f680 }),
            name: "man astronaut: medium-light skin tone",
            searchTerms: new string[] { "man", "astronaut", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1053
        );

        /* üë®üèΩ‚ÄçüöÄ */
        public static readonly SingleEmoji ManAstronautMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f680 }),
            name: "man astronaut: medium skin tone",
            searchTerms: new string[] { "man", "astronaut", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1054
        );

        /* üë®üèæ‚ÄçüöÄ */
        public static readonly SingleEmoji ManAstronautMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f680 }),
            name: "man astronaut: medium-dark skin tone",
            searchTerms: new string[] { "man", "astronaut", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1055
        );

        /* üë®üèø‚ÄçüöÄ */
        public static readonly SingleEmoji ManAstronautDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f680 }),
            name: "man astronaut: dark skin tone",
            searchTerms: new string[] { "man", "astronaut", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1056
        );

        /* üë©‚ÄçüöÄ */
        public static readonly SingleEmoji WomanAstronaut = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f680 }),
            name: "woman astronaut",
            searchTerms: new string[] { "woman", "astronaut" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1057
        );

        /* üë©üèª‚ÄçüöÄ */
        public static readonly SingleEmoji WomanAstronautLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f680 }),
            name: "woman astronaut: light skin tone",
            searchTerms: new string[] { "woman", "astronaut", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1058
        );

        /* üë©üèº‚ÄçüöÄ */
        public static readonly SingleEmoji WomanAstronautMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f680 }),
            name: "woman astronaut: medium-light skin tone",
            searchTerms: new string[] { "woman", "astronaut", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1059
        );

        /* üë©üèΩ‚ÄçüöÄ */
        public static readonly SingleEmoji WomanAstronautMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f680 }),
            name: "woman astronaut: medium skin tone",
            searchTerms: new string[] { "woman", "astronaut", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1060
        );

        /* üë©üèæ‚ÄçüöÄ */
        public static readonly SingleEmoji WomanAstronautMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f680 }),
            name: "woman astronaut: medium-dark skin tone",
            searchTerms: new string[] { "woman", "astronaut", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1061
        );

        /* üë©üèø‚ÄçüöÄ */
        public static readonly SingleEmoji WomanAstronautDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f680 }),
            name: "woman astronaut: dark skin tone",
            searchTerms: new string[] { "woman", "astronaut", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1062
        );

        /* üë®‚Äçüöí */
        public static readonly SingleEmoji ManFirefighter = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f692 }),
            name: "man firefighter",
            searchTerms: new string[] { "man", "firefighter" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1063
        );

        /* üë®üèª‚Äçüöí */
        public static readonly SingleEmoji ManFirefighterLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f692 }),
            name: "man firefighter: light skin tone",
            searchTerms: new string[] { "man", "firefighter", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1064
        );

        /* üë®üèº‚Äçüöí */
        public static readonly SingleEmoji ManFirefighterMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f692 }),
            name: "man firefighter: medium-light skin tone",
            searchTerms: new string[] { "man", "firefighter", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1065
        );

        /* üë®üèΩ‚Äçüöí */
        public static readonly SingleEmoji ManFirefighterMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f692 }),
            name: "man firefighter: medium skin tone",
            searchTerms: new string[] { "man", "firefighter", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1066
        );

        /* üë®üèæ‚Äçüöí */
        public static readonly SingleEmoji ManFirefighterMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f692 }),
            name: "man firefighter: medium-dark skin tone",
            searchTerms: new string[] { "man", "firefighter", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1067
        );

        /* üë®üèø‚Äçüöí */
        public static readonly SingleEmoji ManFirefighterDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f692 }),
            name: "man firefighter: dark skin tone",
            searchTerms: new string[] { "man", "firefighter", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1068
        );

        /* üë©‚Äçüöí */
        public static readonly SingleEmoji WomanFirefighter = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f692 }),
            name: "woman firefighter",
            searchTerms: new string[] { "woman", "firefighter" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1069
        );

        /* üë©üèª‚Äçüöí */
        public static readonly SingleEmoji WomanFirefighterLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f692 }),
            name: "woman firefighter: light skin tone",
            searchTerms: new string[] { "woman", "firefighter", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1070
        );

        /* üë©üèº‚Äçüöí */
        public static readonly SingleEmoji WomanFirefighterMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f692 }),
            name: "woman firefighter: medium-light skin tone",
            searchTerms: new string[] { "woman", "firefighter", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1071
        );

        /* üë©üèΩ‚Äçüöí */
        public static readonly SingleEmoji WomanFirefighterMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f692 }),
            name: "woman firefighter: medium skin tone",
            searchTerms: new string[] { "woman", "firefighter", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1072
        );

        /* üë©üèæ‚Äçüöí */
        public static readonly SingleEmoji WomanFirefighterMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f692 }),
            name: "woman firefighter: medium-dark skin tone",
            searchTerms: new string[] { "woman", "firefighter", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1073
        );

        /* üë©üèø‚Äçüöí */
        public static readonly SingleEmoji WomanFirefighterDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f692 }),
            name: "woman firefighter: dark skin tone",
            searchTerms: new string[] { "woman", "firefighter", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1074
        );

        /* üëÆ */
        public static readonly SingleEmoji PoliceOfficer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e }),
            name: "police officer",
            searchTerms: new string[] { "police", "officer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1075
        );

        /* üëÆüèª */
        public static readonly SingleEmoji PoliceOfficerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fb }),
            name: "police officer: light skin tone",
            searchTerms: new string[] { "police", "officer", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1076
        );

        /* üëÆüèº */
        public static readonly SingleEmoji PoliceOfficerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fc }),
            name: "police officer: medium-light skin tone",
            searchTerms: new string[] { "police", "officer", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1077
        );

        /* üëÆüèΩ */
        public static readonly SingleEmoji PoliceOfficerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fd }),
            name: "police officer: medium skin tone",
            searchTerms: new string[] { "police", "officer", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1078
        );

        /* üëÆüèæ */
        public static readonly SingleEmoji PoliceOfficerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fe }),
            name: "police officer: medium-dark skin tone",
            searchTerms: new string[] { "police", "officer", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1079
        );

        /* üëÆüèø */
        public static readonly SingleEmoji PoliceOfficerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3ff }),
            name: "police officer: dark skin tone",
            searchTerms: new string[] { "police", "officer", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1080
        );

        /* üëÆ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoliceOfficer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x200d, 0x2642, 0xfe0f }),
            name: "man police officer",
            searchTerms: new string[] { "man", "police", "officer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1081
        );

        /* üëÆüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoliceOfficerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man police officer: light skin tone",
            searchTerms: new string[] { "man", "police", "officer", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1083
        );

        /* üëÆüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoliceOfficerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man police officer: medium-light skin tone",
            searchTerms: new string[] { "man", "police", "officer", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1085
        );

        /* üëÆüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoliceOfficerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man police officer: medium skin tone",
            searchTerms: new string[] { "man", "police", "officer", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1087
        );

        /* üëÆüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoliceOfficerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man police officer: medium-dark skin tone",
            searchTerms: new string[] { "man", "police", "officer", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1089
        );

        /* üëÆüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPoliceOfficerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man police officer: dark skin tone",
            searchTerms: new string[] { "man", "police", "officer", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1091
        );

        /* üëÆ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoliceOfficer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x200d, 0x2640, 0xfe0f }),
            name: "woman police officer",
            searchTerms: new string[] { "woman", "police", "officer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1093
        );

        /* üëÆüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoliceOfficerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman police officer: light skin tone",
            searchTerms: new string[] { "woman", "police", "officer", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1095
        );

        /* üëÆüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoliceOfficerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman police officer: medium-light skin tone",
            searchTerms: new string[] { "woman", "police", "officer", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1097
        );

        /* üëÆüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoliceOfficerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman police officer: medium skin tone",
            searchTerms: new string[] { "woman", "police", "officer", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1099
        );

        /* üëÆüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoliceOfficerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman police officer: medium-dark skin tone",
            searchTerms: new string[] { "woman", "police", "officer", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1101
        );

        /* üëÆüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPoliceOfficerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46e, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman police officer: dark skin tone",
            searchTerms: new string[] { "woman", "police", "officer", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1103
        );

        /* üïµÔ∏è */
        public static readonly SingleEmoji Detective = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0xfe0f }),
            name: "detective",
            searchTerms: new string[] { "detective" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1105
        );

        /* üïµüèª */
        public static readonly SingleEmoji DetectiveLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fb }),
            name: "detective: light skin tone",
            searchTerms: new string[] { "detective", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1107
        );

        /* üïµüèº */
        public static readonly SingleEmoji DetectiveMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fc }),
            name: "detective: medium-light skin tone",
            searchTerms: new string[] { "detective", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1108
        );

        /* üïµüèΩ */
        public static readonly SingleEmoji DetectiveMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fd }),
            name: "detective: medium skin tone",
            searchTerms: new string[] { "detective", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1109
        );

        /* üïµüèæ */
        public static readonly SingleEmoji DetectiveMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fe }),
            name: "detective: medium-dark skin tone",
            searchTerms: new string[] { "detective", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1110
        );

        /* üïµüèø */
        public static readonly SingleEmoji DetectiveDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3ff }),
            name: "detective: dark skin tone",
            searchTerms: new string[] { "detective", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1111
        );

        /* üïµÔ∏è‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManDetective = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0xfe0f, 0x200d, 0x2642, 0xfe0f }),
            name: "man detective",
            searchTerms: new string[] { "man", "detective" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1112
        );

        /* üïµüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManDetectiveLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man detective: light skin tone",
            searchTerms: new string[] { "man", "detective", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1116
        );

        /* üïµüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManDetectiveMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man detective: medium-light skin tone",
            searchTerms: new string[] { "man", "detective", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1118
        );

        /* üïµüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManDetectiveMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man detective: medium skin tone",
            searchTerms: new string[] { "man", "detective", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1120
        );

        /* üïµüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManDetectiveMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man detective: medium-dark skin tone",
            searchTerms: new string[] { "man", "detective", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1122
        );

        /* üïµüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManDetectiveDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man detective: dark skin tone",
            searchTerms: new string[] { "man", "detective", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1124
        );

        /* üïµÔ∏è‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanDetective = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0xfe0f, 0x200d, 0x2640, 0xfe0f }),
            name: "woman detective",
            searchTerms: new string[] { "woman", "detective" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1126
        );

        /* üïµüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanDetectiveLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman detective: light skin tone",
            searchTerms: new string[] { "woman", "detective", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1130
        );

        /* üïµüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanDetectiveMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman detective: medium-light skin tone",
            searchTerms: new string[] { "woman", "detective", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1132
        );

        /* üïµüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanDetectiveMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman detective: medium skin tone",
            searchTerms: new string[] { "woman", "detective", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1134
        );

        /* üïµüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanDetectiveMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman detective: medium-dark skin tone",
            searchTerms: new string[] { "woman", "detective", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1136
        );

        /* üïµüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanDetectiveDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f575, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman detective: dark skin tone",
            searchTerms: new string[] { "woman", "detective", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1138
        );

        /* üíÇ */
        public static readonly SingleEmoji Guard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482 }),
            name: "guard",
            searchTerms: new string[] { "guard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1140
        );

        /* üíÇüèª */
        public static readonly SingleEmoji GuardLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fb }),
            name: "guard: light skin tone",
            searchTerms: new string[] { "guard", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1141
        );

        /* üíÇüèº */
        public static readonly SingleEmoji GuardMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fc }),
            name: "guard: medium-light skin tone",
            searchTerms: new string[] { "guard", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1142
        );

        /* üíÇüèΩ */
        public static readonly SingleEmoji GuardMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fd }),
            name: "guard: medium skin tone",
            searchTerms: new string[] { "guard", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1143
        );

        /* üíÇüèæ */
        public static readonly SingleEmoji GuardMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fe }),
            name: "guard: medium-dark skin tone",
            searchTerms: new string[] { "guard", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1144
        );

        /* üíÇüèø */
        public static readonly SingleEmoji GuardDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3ff }),
            name: "guard: dark skin tone",
            searchTerms: new string[] { "guard", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1145
        );

        /* üíÇ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGuard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x200d, 0x2642, 0xfe0f }),
            name: "man guard",
            searchTerms: new string[] { "man", "guard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1146
        );

        /* üíÇüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGuardLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man guard: light skin tone",
            searchTerms: new string[] { "man", "guard", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1148
        );

        /* üíÇüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGuardMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man guard: medium-light skin tone",
            searchTerms: new string[] { "man", "guard", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1150
        );

        /* üíÇüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGuardMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man guard: medium skin tone",
            searchTerms: new string[] { "man", "guard", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1152
        );

        /* üíÇüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGuardMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man guard: medium-dark skin tone",
            searchTerms: new string[] { "man", "guard", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1154
        );

        /* üíÇüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGuardDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man guard: dark skin tone",
            searchTerms: new string[] { "man", "guard", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1156
        );

        /* üíÇ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGuard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x200d, 0x2640, 0xfe0f }),
            name: "woman guard",
            searchTerms: new string[] { "woman", "guard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1158
        );

        /* üíÇüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGuardLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman guard: light skin tone",
            searchTerms: new string[] { "woman", "guard", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1160
        );

        /* üíÇüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGuardMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman guard: medium-light skin tone",
            searchTerms: new string[] { "woman", "guard", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1162
        );

        /* üíÇüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGuardMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman guard: medium skin tone",
            searchTerms: new string[] { "woman", "guard", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1164
        );

        /* üíÇüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGuardMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman guard: medium-dark skin tone",
            searchTerms: new string[] { "woman", "guard", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1166
        );

        /* üíÇüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGuardDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f482, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman guard: dark skin tone",
            searchTerms: new string[] { "woman", "guard", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1168
        );

        /* üë∑ */
        public static readonly SingleEmoji ConstructionWorker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477 }),
            name: "construction worker",
            searchTerms: new string[] { "construction", "worker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1170
        );

        /* üë∑üèª */
        public static readonly SingleEmoji ConstructionWorkerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fb }),
            name: "construction worker: light skin tone",
            searchTerms: new string[] { "construction", "worker", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1171
        );

        /* üë∑üèº */
        public static readonly SingleEmoji ConstructionWorkerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fc }),
            name: "construction worker: medium-light skin tone",
            searchTerms: new string[] { "construction", "worker", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1172
        );

        /* üë∑üèΩ */
        public static readonly SingleEmoji ConstructionWorkerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fd }),
            name: "construction worker: medium skin tone",
            searchTerms: new string[] { "construction", "worker", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1173
        );

        /* üë∑üèæ */
        public static readonly SingleEmoji ConstructionWorkerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fe }),
            name: "construction worker: medium-dark skin tone",
            searchTerms: new string[] { "construction", "worker", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1174
        );

        /* üë∑üèø */
        public static readonly SingleEmoji ConstructionWorkerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3ff }),
            name: "construction worker: dark skin tone",
            searchTerms: new string[] { "construction", "worker", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1175
        );

        /* üë∑‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManConstructionWorker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x200d, 0x2642, 0xfe0f }),
            name: "man construction worker",
            searchTerms: new string[] { "man", "construction", "worker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1176
        );

        /* üë∑üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManConstructionWorkerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man construction worker: light skin tone",
            searchTerms: new string[] { "man", "construction", "worker", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1178
        );

        /* üë∑üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManConstructionWorkerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man construction worker: medium-light skin tone",
            searchTerms: new string[] { "man", "construction", "worker", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1180
        );

        /* üë∑üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManConstructionWorkerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man construction worker: medium skin tone",
            searchTerms: new string[] { "man", "construction", "worker", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1182
        );

        /* üë∑üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManConstructionWorkerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man construction worker: medium-dark skin tone",
            searchTerms: new string[] { "man", "construction", "worker", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1184
        );

        /* üë∑üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManConstructionWorkerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man construction worker: dark skin tone",
            searchTerms: new string[] { "man", "construction", "worker", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1186
        );

        /* üë∑‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanConstructionWorker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x200d, 0x2640, 0xfe0f }),
            name: "woman construction worker",
            searchTerms: new string[] { "woman", "construction", "worker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1188
        );

        /* üë∑üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanConstructionWorkerLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman construction worker: light skin tone",
            searchTerms: new string[] { "woman", "construction", "worker", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1190
        );

        /* üë∑üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanConstructionWorkerMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman construction worker: medium-light skin tone",
            searchTerms: new string[] { "woman", "construction", "worker", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1192
        );

        /* üë∑üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanConstructionWorkerMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman construction worker: medium skin tone",
            searchTerms: new string[] { "woman", "construction", "worker", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1194
        );

        /* üë∑üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanConstructionWorkerMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman construction worker: medium-dark skin tone",
            searchTerms: new string[] { "woman", "construction", "worker", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1196
        );

        /* üë∑üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanConstructionWorkerDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f477, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman construction worker: dark skin tone",
            searchTerms: new string[] { "woman", "construction", "worker", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1198
        );

        /* ü§¥ */
        public static readonly SingleEmoji Prince = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f934 }),
            name: "prince",
            searchTerms: new string[] { "prince" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1200
        );

        /* ü§¥üèª */
        public static readonly SingleEmoji PrinceLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f934, 0x1f3fb }),
            name: "prince: light skin tone",
            searchTerms: new string[] { "prince", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1201
        );

        /* ü§¥üèº */
        public static readonly SingleEmoji PrinceMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f934, 0x1f3fc }),
            name: "prince: medium-light skin tone",
            searchTerms: new string[] { "prince", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1202
        );

        /* ü§¥üèΩ */
        public static readonly SingleEmoji PrinceMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f934, 0x1f3fd }),
            name: "prince: medium skin tone",
            searchTerms: new string[] { "prince", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1203
        );

        /* ü§¥üèæ */
        public static readonly SingleEmoji PrinceMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f934, 0x1f3fe }),
            name: "prince: medium-dark skin tone",
            searchTerms: new string[] { "prince", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1204
        );

        /* ü§¥üèø */
        public static readonly SingleEmoji PrinceDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f934, 0x1f3ff }),
            name: "prince: dark skin tone",
            searchTerms: new string[] { "prince", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1205
        );

        /* üë∏ */
        public static readonly SingleEmoji Princess = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f478 }),
            name: "princess",
            searchTerms: new string[] { "princess" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1206
        );

        /* üë∏üèª */
        public static readonly SingleEmoji PrincessLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f478, 0x1f3fb }),
            name: "princess: light skin tone",
            searchTerms: new string[] { "princess", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1207
        );

        /* üë∏üèº */
        public static readonly SingleEmoji PrincessMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f478, 0x1f3fc }),
            name: "princess: medium-light skin tone",
            searchTerms: new string[] { "princess", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1208
        );

        /* üë∏üèΩ */
        public static readonly SingleEmoji PrincessMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f478, 0x1f3fd }),
            name: "princess: medium skin tone",
            searchTerms: new string[] { "princess", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1209
        );

        /* üë∏üèæ */
        public static readonly SingleEmoji PrincessMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f478, 0x1f3fe }),
            name: "princess: medium-dark skin tone",
            searchTerms: new string[] { "princess", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1210
        );

        /* üë∏üèø */
        public static readonly SingleEmoji PrincessDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f478, 0x1f3ff }),
            name: "princess: dark skin tone",
            searchTerms: new string[] { "princess", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1211
        );

        /* üë≥ */
        public static readonly SingleEmoji PersonWearingTurban = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473 }),
            name: "person wearing turban",
            searchTerms: new string[] { "person", "wearing", "turban" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1212
        );

        /* üë≥üèª */
        public static readonly SingleEmoji PersonWearingTurbanLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fb }),
            name: "person wearing turban: light skin tone",
            searchTerms: new string[] { "person", "wearing", "turban", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1213
        );

        /* üë≥üèº */
        public static readonly SingleEmoji PersonWearingTurbanMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fc }),
            name: "person wearing turban: medium-light skin tone",
            searchTerms: new string[] { "person", "wearing", "turban", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1214
        );

        /* üë≥üèΩ */
        public static readonly SingleEmoji PersonWearingTurbanMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fd }),
            name: "person wearing turban: medium skin tone",
            searchTerms: new string[] { "person", "wearing", "turban", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1215
        );

        /* üë≥üèæ */
        public static readonly SingleEmoji PersonWearingTurbanMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fe }),
            name: "person wearing turban: medium-dark skin tone",
            searchTerms: new string[] { "person", "wearing", "turban", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1216
        );

        /* üë≥üèø */
        public static readonly SingleEmoji PersonWearingTurbanDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3ff }),
            name: "person wearing turban: dark skin tone",
            searchTerms: new string[] { "person", "wearing", "turban", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1217
        );

        /* üë≥‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWearingTurban = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x200d, 0x2642, 0xfe0f }),
            name: "man wearing turban",
            searchTerms: new string[] { "man", "wearing", "turban" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1218
        );

        /* üë≥üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWearingTurbanLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man wearing turban: light skin tone",
            searchTerms: new string[] { "man", "wearing", "turban", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1220
        );

        /* üë≥üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWearingTurbanMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man wearing turban: medium-light skin tone",
            searchTerms: new string[] { "man", "wearing", "turban", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1222
        );

        /* üë≥üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWearingTurbanMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man wearing turban: medium skin tone",
            searchTerms: new string[] { "man", "wearing", "turban", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1224
        );

        /* üë≥üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWearingTurbanMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man wearing turban: medium-dark skin tone",
            searchTerms: new string[] { "man", "wearing", "turban", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1226
        );

        /* üë≥üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWearingTurbanDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man wearing turban: dark skin tone",
            searchTerms: new string[] { "man", "wearing", "turban", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1228
        );

        /* üë≥‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWearingTurban = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x200d, 0x2640, 0xfe0f }),
            name: "woman wearing turban",
            searchTerms: new string[] { "woman", "wearing", "turban" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1230
        );

        /* üë≥üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWearingTurbanLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman wearing turban: light skin tone",
            searchTerms: new string[] { "woman", "wearing", "turban", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1232
        );

        /* üë≥üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWearingTurbanMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman wearing turban: medium-light skin tone",
            searchTerms: new string[] { "woman", "wearing", "turban", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1234
        );

        /* üë≥üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWearingTurbanMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman wearing turban: medium skin tone",
            searchTerms: new string[] { "woman", "wearing", "turban", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1236
        );

        /* üë≥üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWearingTurbanMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman wearing turban: medium-dark skin tone",
            searchTerms: new string[] { "woman", "wearing", "turban", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1238
        );

        /* üë≥üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWearingTurbanDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f473, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman wearing turban: dark skin tone",
            searchTerms: new string[] { "woman", "wearing", "turban", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1240
        );

        /* üë≤ */
        public static readonly SingleEmoji ManChineseCap = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f472 }),
            name: "man with Chinese cap",
            searchTerms: new string[] { "man", "chinese", "cap" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1242
        );

        /* üë≤üèª */
        public static readonly SingleEmoji ManChineseCapLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f472, 0x1f3fb }),
            name: "man with Chinese cap: light skin tone",
            searchTerms: new string[] { "man", "chinese", "cap", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1243
        );

        /* üë≤üèº */
        public static readonly SingleEmoji ManChineseCapMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f472, 0x1f3fc }),
            name: "man with Chinese cap: medium-light skin tone",
            searchTerms: new string[] { "man", "chinese", "cap", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1244
        );

        /* üë≤üèΩ */
        public static readonly SingleEmoji ManChineseCapMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f472, 0x1f3fd }),
            name: "man with Chinese cap: medium skin tone",
            searchTerms: new string[] { "man", "chinese", "cap", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1245
        );

        /* üë≤üèæ */
        public static readonly SingleEmoji ManChineseCapMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f472, 0x1f3fe }),
            name: "man with Chinese cap: medium-dark skin tone",
            searchTerms: new string[] { "man", "chinese", "cap", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1246
        );

        /* üë≤üèø */
        public static readonly SingleEmoji ManChineseCapDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f472, 0x1f3ff }),
            name: "man with Chinese cap: dark skin tone",
            searchTerms: new string[] { "man", "chinese", "cap", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1247
        );

        /* üßï */
        public static readonly SingleEmoji WomanHeadscarf = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d5 }),
            name: "woman with headscarf",
            searchTerms: new string[] { "woman", "headscarf" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1248
        );

        /* üßïüèª */
        public static readonly SingleEmoji WomanHeadscarfLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d5, 0x1f3fb }),
            name: "woman with headscarf: light skin tone",
            searchTerms: new string[] { "woman", "headscarf", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1249
        );

        /* üßïüèº */
        public static readonly SingleEmoji WomanHeadscarfMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d5, 0x1f3fc }),
            name: "woman with headscarf: medium-light skin tone",
            searchTerms: new string[] { "woman", "headscarf", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1250
        );

        /* üßïüèΩ */
        public static readonly SingleEmoji WomanHeadscarfMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d5, 0x1f3fd }),
            name: "woman with headscarf: medium skin tone",
            searchTerms: new string[] { "woman", "headscarf", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1251
        );

        /* üßïüèæ */
        public static readonly SingleEmoji WomanHeadscarfMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d5, 0x1f3fe }),
            name: "woman with headscarf: medium-dark skin tone",
            searchTerms: new string[] { "woman", "headscarf", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1252
        );

        /* üßïüèø */
        public static readonly SingleEmoji WomanHeadscarfDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d5, 0x1f3ff }),
            name: "woman with headscarf: dark skin tone",
            searchTerms: new string[] { "woman", "headscarf", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1253
        );

        /* ü§µ */
        public static readonly SingleEmoji ManTuxedo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f935 }),
            name: "man in tuxedo",
            searchTerms: new string[] { "man", "tuxedo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1254
        );

        /* ü§µüèª */
        public static readonly SingleEmoji ManTuxedoLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f935, 0x1f3fb }),
            name: "man in tuxedo: light skin tone",
            searchTerms: new string[] { "man", "tuxedo", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1255
        );

        /* ü§µüèº */
        public static readonly SingleEmoji ManTuxedoMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f935, 0x1f3fc }),
            name: "man in tuxedo: medium-light skin tone",
            searchTerms: new string[] { "man", "tuxedo", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1256
        );

        /* ü§µüèΩ */
        public static readonly SingleEmoji ManTuxedoMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f935, 0x1f3fd }),
            name: "man in tuxedo: medium skin tone",
            searchTerms: new string[] { "man", "tuxedo", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1257
        );

        /* ü§µüèæ */
        public static readonly SingleEmoji ManTuxedoMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f935, 0x1f3fe }),
            name: "man in tuxedo: medium-dark skin tone",
            searchTerms: new string[] { "man", "tuxedo", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1258
        );

        /* ü§µüèø */
        public static readonly SingleEmoji ManTuxedoDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f935, 0x1f3ff }),
            name: "man in tuxedo: dark skin tone",
            searchTerms: new string[] { "man", "tuxedo", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1259
        );

        /* üë∞ */
        public static readonly SingleEmoji BrideVeil = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f470 }),
            name: "bride with veil",
            searchTerms: new string[] { "bride", "veil" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1260
        );

        /* üë∞üèª */
        public static readonly SingleEmoji BrideVeilLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f470, 0x1f3fb }),
            name: "bride with veil: light skin tone",
            searchTerms: new string[] { "bride", "veil", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1261
        );

        /* üë∞üèº */
        public static readonly SingleEmoji BrideVeilMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f470, 0x1f3fc }),
            name: "bride with veil: medium-light skin tone",
            searchTerms: new string[] { "bride", "veil", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1262
        );

        /* üë∞üèΩ */
        public static readonly SingleEmoji BrideVeilMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f470, 0x1f3fd }),
            name: "bride with veil: medium skin tone",
            searchTerms: new string[] { "bride", "veil", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1263
        );

        /* üë∞üèæ */
        public static readonly SingleEmoji BrideVeilMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f470, 0x1f3fe }),
            name: "bride with veil: medium-dark skin tone",
            searchTerms: new string[] { "bride", "veil", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1264
        );

        /* üë∞üèø */
        public static readonly SingleEmoji BrideVeilDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f470, 0x1f3ff }),
            name: "bride with veil: dark skin tone",
            searchTerms: new string[] { "bride", "veil", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1265
        );

        /* ü§∞ */
        public static readonly SingleEmoji PregnantWoman = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f930 }),
            name: "pregnant woman",
            searchTerms: new string[] { "pregnant", "woman" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1266
        );

        /* ü§∞üèª */
        public static readonly SingleEmoji PregnantWomanLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f930, 0x1f3fb }),
            name: "pregnant woman: light skin tone",
            searchTerms: new string[] { "pregnant", "woman", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1267
        );

        /* ü§∞üèº */
        public static readonly SingleEmoji PregnantWomanMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f930, 0x1f3fc }),
            name: "pregnant woman: medium-light skin tone",
            searchTerms: new string[] { "pregnant", "woman", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1268
        );

        /* ü§∞üèΩ */
        public static readonly SingleEmoji PregnantWomanMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f930, 0x1f3fd }),
            name: "pregnant woman: medium skin tone",
            searchTerms: new string[] { "pregnant", "woman", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1269
        );

        /* ü§∞üèæ */
        public static readonly SingleEmoji PregnantWomanMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f930, 0x1f3fe }),
            name: "pregnant woman: medium-dark skin tone",
            searchTerms: new string[] { "pregnant", "woman", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1270
        );

        /* ü§∞üèø */
        public static readonly SingleEmoji PregnantWomanDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f930, 0x1f3ff }),
            name: "pregnant woman: dark skin tone",
            searchTerms: new string[] { "pregnant", "woman", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1271
        );

        /* ü§± */
        public static readonly SingleEmoji BreastFeeding = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f931 }),
            name: "breast-feeding",
            searchTerms: new string[] { "breast", "feeding" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1272
        );

        /* ü§±üèª */
        public static readonly SingleEmoji BreastFeedingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f931, 0x1f3fb }),
            name: "breast-feeding: light skin tone",
            searchTerms: new string[] { "breast", "feeding", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1273
        );

        /* ü§±üèº */
        public static readonly SingleEmoji BreastFeedingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f931, 0x1f3fc }),
            name: "breast-feeding: medium-light skin tone",
            searchTerms: new string[] { "breast", "feeding", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1274
        );

        /* ü§±üèΩ */
        public static readonly SingleEmoji BreastFeedingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f931, 0x1f3fd }),
            name: "breast-feeding: medium skin tone",
            searchTerms: new string[] { "breast", "feeding", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1275
        );

        /* ü§±üèæ */
        public static readonly SingleEmoji BreastFeedingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f931, 0x1f3fe }),
            name: "breast-feeding: medium-dark skin tone",
            searchTerms: new string[] { "breast", "feeding", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1276
        );

        /* ü§±üèø */
        public static readonly SingleEmoji BreastFeedingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f931, 0x1f3ff }),
            name: "breast-feeding: dark skin tone",
            searchTerms: new string[] { "breast", "feeding", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ROLE,
            hasGlyph: true,
            sortOrder: 1277
        );

        /* üëº */
        public static readonly SingleEmoji BabyAngel = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47c }),
            name: "baby angel",
            searchTerms: new string[] { "baby", "angel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1278
        );

        /* üëºüèª */
        public static readonly SingleEmoji BabyAngelLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47c, 0x1f3fb }),
            name: "baby angel: light skin tone",
            searchTerms: new string[] { "baby", "angel", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1279
        );

        /* üëºüèº */
        public static readonly SingleEmoji BabyAngelMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47c, 0x1f3fc }),
            name: "baby angel: medium-light skin tone",
            searchTerms: new string[] { "baby", "angel", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1280
        );

        /* üëºüèΩ */
        public static readonly SingleEmoji BabyAngelMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47c, 0x1f3fd }),
            name: "baby angel: medium skin tone",
            searchTerms: new string[] { "baby", "angel", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1281
        );

        /* üëºüèæ */
        public static readonly SingleEmoji BabyAngelMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47c, 0x1f3fe }),
            name: "baby angel: medium-dark skin tone",
            searchTerms: new string[] { "baby", "angel", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1282
        );

        /* üëºüèø */
        public static readonly SingleEmoji BabyAngelDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f47c, 0x1f3ff }),
            name: "baby angel: dark skin tone",
            searchTerms: new string[] { "baby", "angel", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1283
        );

        /* üéÖ */
        public static readonly SingleEmoji SantaClaus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f385 }),
            name: "Santa Claus",
            searchTerms: new string[] { "santa", "claus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1284
        );

        /* üéÖüèª */
        public static readonly SingleEmoji SantaClausLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f385, 0x1f3fb }),
            name: "Santa Claus: light skin tone",
            searchTerms: new string[] { "santa", "claus", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1285
        );

        /* üéÖüèº */
        public static readonly SingleEmoji SantaClausMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f385, 0x1f3fc }),
            name: "Santa Claus: medium-light skin tone",
            searchTerms: new string[] { "santa", "claus", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1286
        );

        /* üéÖüèΩ */
        public static readonly SingleEmoji SantaClausMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f385, 0x1f3fd }),
            name: "Santa Claus: medium skin tone",
            searchTerms: new string[] { "santa", "claus", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1287
        );

        /* üéÖüèæ */
        public static readonly SingleEmoji SantaClausMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f385, 0x1f3fe }),
            name: "Santa Claus: medium-dark skin tone",
            searchTerms: new string[] { "santa", "claus", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1288
        );

        /* üéÖüèø */
        public static readonly SingleEmoji SantaClausDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f385, 0x1f3ff }),
            name: "Santa Claus: dark skin tone",
            searchTerms: new string[] { "santa", "claus", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1289
        );

        /* ü§∂ */
        public static readonly SingleEmoji MrsClaus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f936 }),
            name: "Mrs. Claus",
            searchTerms: new string[] { "mrs", "claus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1290
        );

        /* ü§∂üèª */
        public static readonly SingleEmoji MrsClausLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f936, 0x1f3fb }),
            name: "Mrs. Claus: light skin tone",
            searchTerms: new string[] { "mrs", "claus", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1291
        );

        /* ü§∂üèº */
        public static readonly SingleEmoji MrsClausMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f936, 0x1f3fc }),
            name: "Mrs. Claus: medium-light skin tone",
            searchTerms: new string[] { "mrs", "claus", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1292
        );

        /* ü§∂üèΩ */
        public static readonly SingleEmoji MrsClausMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f936, 0x1f3fd }),
            name: "Mrs. Claus: medium skin tone",
            searchTerms: new string[] { "mrs", "claus", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1293
        );

        /* ü§∂üèæ */
        public static readonly SingleEmoji MrsClausMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f936, 0x1f3fe }),
            name: "Mrs. Claus: medium-dark skin tone",
            searchTerms: new string[] { "mrs", "claus", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1294
        );

        /* ü§∂üèø */
        public static readonly SingleEmoji MrsClausDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f936, 0x1f3ff }),
            name: "Mrs. Claus: dark skin tone",
            searchTerms: new string[] { "mrs", "claus", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1295
        );

        /* ü¶∏ */
        public static readonly SingleEmoji Superhero = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8 }),
            name: "superhero",
            searchTerms: new string[] { "superhero" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1296
        );

        /* ü¶∏üèª */
        public static readonly SingleEmoji SuperheroLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fb }),
            name: "superhero: light skin tone",
            searchTerms: new string[] { "superhero", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1297
        );

        /* ü¶∏üèº */
        public static readonly SingleEmoji SuperheroMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fc }),
            name: "superhero: medium-light skin tone",
            searchTerms: new string[] { "superhero", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1298
        );

        /* ü¶∏üèΩ */
        public static readonly SingleEmoji SuperheroMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fd }),
            name: "superhero: medium skin tone",
            searchTerms: new string[] { "superhero", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1299
        );

        /* ü¶∏üèæ */
        public static readonly SingleEmoji SuperheroMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fe }),
            name: "superhero: medium-dark skin tone",
            searchTerms: new string[] { "superhero", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1300
        );

        /* ü¶∏üèø */
        public static readonly SingleEmoji SuperheroDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3ff }),
            name: "superhero: dark skin tone",
            searchTerms: new string[] { "superhero", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1301
        );

        /* ü¶∏‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSuperhero = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x200d, 0x2642, 0xfe0f }),
            name: "man superhero",
            searchTerms: new string[] { "man", "superhero" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1302
        );

        /* ü¶∏üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSuperheroLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man superhero: light skin tone",
            searchTerms: new string[] { "man", "superhero", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1304
        );

        /* ü¶∏üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSuperheroMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man superhero: medium-light skin tone",
            searchTerms: new string[] { "man", "superhero", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1306
        );

        /* ü¶∏üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSuperheroMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man superhero: medium skin tone",
            searchTerms: new string[] { "man", "superhero", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1308
        );

        /* ü¶∏üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSuperheroMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man superhero: medium-dark skin tone",
            searchTerms: new string[] { "man", "superhero", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1310
        );

        /* ü¶∏üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSuperheroDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man superhero: dark skin tone",
            searchTerms: new string[] { "man", "superhero", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1312
        );

        /* ü¶∏‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSuperhero = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x200d, 0x2640, 0xfe0f }),
            name: "woman superhero",
            searchTerms: new string[] { "woman", "superhero" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1314
        );

        /* ü¶∏üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSuperheroLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman superhero: light skin tone",
            searchTerms: new string[] { "woman", "superhero", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1316
        );

        /* ü¶∏üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSuperheroMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman superhero: medium-light skin tone",
            searchTerms: new string[] { "woman", "superhero", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1318
        );

        /* ü¶∏üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSuperheroMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman superhero: medium skin tone",
            searchTerms: new string[] { "woman", "superhero", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1320
        );

        /* ü¶∏üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSuperheroMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman superhero: medium-dark skin tone",
            searchTerms: new string[] { "woman", "superhero", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1322
        );

        /* ü¶∏üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSuperheroDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b8, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman superhero: dark skin tone",
            searchTerms: new string[] { "woman", "superhero", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1324
        );

        /* ü¶π */
        public static readonly SingleEmoji Supervillain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9 }),
            name: "supervillain",
            searchTerms: new string[] { "supervillain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1326
        );

        /* ü¶πüèª */
        public static readonly SingleEmoji SupervillainLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fb }),
            name: "supervillain: light skin tone",
            searchTerms: new string[] { "supervillain", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1327
        );

        /* ü¶πüèº */
        public static readonly SingleEmoji SupervillainMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fc }),
            name: "supervillain: medium-light skin tone",
            searchTerms: new string[] { "supervillain", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1328
        );

        /* ü¶πüèΩ */
        public static readonly SingleEmoji SupervillainMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fd }),
            name: "supervillain: medium skin tone",
            searchTerms: new string[] { "supervillain", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1329
        );

        /* ü¶πüèæ */
        public static readonly SingleEmoji SupervillainMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fe }),
            name: "supervillain: medium-dark skin tone",
            searchTerms: new string[] { "supervillain", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1330
        );

        /* ü¶πüèø */
        public static readonly SingleEmoji SupervillainDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3ff }),
            name: "supervillain: dark skin tone",
            searchTerms: new string[] { "supervillain", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1331
        );

        /* ü¶π‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSupervillain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x200d, 0x2642, 0xfe0f }),
            name: "man supervillain",
            searchTerms: new string[] { "man", "supervillain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1332
        );

        /* ü¶πüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSupervillainLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man supervillain: light skin tone",
            searchTerms: new string[] { "man", "supervillain", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1334
        );

        /* ü¶πüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSupervillainMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man supervillain: medium-light skin tone",
            searchTerms: new string[] { "man", "supervillain", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1336
        );

        /* ü¶πüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSupervillainMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man supervillain: medium skin tone",
            searchTerms: new string[] { "man", "supervillain", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1338
        );

        /* ü¶πüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSupervillainMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man supervillain: medium-dark skin tone",
            searchTerms: new string[] { "man", "supervillain", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1340
        );

        /* ü¶πüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSupervillainDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man supervillain: dark skin tone",
            searchTerms: new string[] { "man", "supervillain", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1342
        );

        /* ü¶π‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSupervillain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x200d, 0x2640, 0xfe0f }),
            name: "woman supervillain",
            searchTerms: new string[] { "woman", "supervillain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1344
        );

        /* ü¶πüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSupervillainLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman supervillain: light skin tone",
            searchTerms: new string[] { "woman", "supervillain", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1346
        );

        /* ü¶πüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSupervillainMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman supervillain: medium-light skin tone",
            searchTerms: new string[] { "woman", "supervillain", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1348
        );

        /* ü¶πüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSupervillainMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman supervillain: medium skin tone",
            searchTerms: new string[] { "woman", "supervillain", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1350
        );

        /* ü¶πüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSupervillainMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman supervillain: medium-dark skin tone",
            searchTerms: new string[] { "woman", "supervillain", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1352
        );

        /* ü¶πüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSupervillainDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b9, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman supervillain: dark skin tone",
            searchTerms: new string[] { "woman", "supervillain", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1354
        );

        /* üßô */
        public static readonly SingleEmoji Mage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9 }),
            name: "mage",
            searchTerms: new string[] { "mage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1356
        );

        /* üßôüèª */
        public static readonly SingleEmoji MageLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fb }),
            name: "mage: light skin tone",
            searchTerms: new string[] { "mage", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1357
        );

        /* üßôüèº */
        public static readonly SingleEmoji MageMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fc }),
            name: "mage: medium-light skin tone",
            searchTerms: new string[] { "mage", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1358
        );

        /* üßôüèΩ */
        public static readonly SingleEmoji MageMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fd }),
            name: "mage: medium skin tone",
            searchTerms: new string[] { "mage", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1359
        );

        /* üßôüèæ */
        public static readonly SingleEmoji MageMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fe }),
            name: "mage: medium-dark skin tone",
            searchTerms: new string[] { "mage", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1360
        );

        /* üßôüèø */
        public static readonly SingleEmoji MageDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3ff }),
            name: "mage: dark skin tone",
            searchTerms: new string[] { "mage", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1361
        );

        /* üßô‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x200d, 0x2642, 0xfe0f }),
            name: "man mage",
            searchTerms: new string[] { "man", "mage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1362
        );

        /* üßôüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMageLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man mage: light skin tone",
            searchTerms: new string[] { "man", "mage", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1364
        );

        /* üßôüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMageMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man mage: medium-light skin tone",
            searchTerms: new string[] { "man", "mage", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1366
        );

        /* üßôüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMageMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man mage: medium skin tone",
            searchTerms: new string[] { "man", "mage", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1368
        );

        /* üßôüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMageMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man mage: medium-dark skin tone",
            searchTerms: new string[] { "man", "mage", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1370
        );

        /* üßôüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMageDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man mage: dark skin tone",
            searchTerms: new string[] { "man", "mage", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1372
        );

        /* üßô‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mage",
            searchTerms: new string[] { "woman", "mage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1374
        );

        /* üßôüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMageLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mage: light skin tone",
            searchTerms: new string[] { "woman", "mage", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1376
        );

        /* üßôüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMageMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mage: medium-light skin tone",
            searchTerms: new string[] { "woman", "mage", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1378
        );

        /* üßôüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMageMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mage: medium skin tone",
            searchTerms: new string[] { "woman", "mage", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1380
        );

        /* üßôüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMageMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mage: medium-dark skin tone",
            searchTerms: new string[] { "woman", "mage", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1382
        );

        /* üßôüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMageDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d9, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mage: dark skin tone",
            searchTerms: new string[] { "woman", "mage", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1384
        );

        /* üßö */
        public static readonly SingleEmoji Fairy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da }),
            name: "fairy",
            searchTerms: new string[] { "fairy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1386
        );

        /* üßöüèª */
        public static readonly SingleEmoji FairyLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fb }),
            name: "fairy: light skin tone",
            searchTerms: new string[] { "fairy", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1387
        );

        /* üßöüèº */
        public static readonly SingleEmoji FairyMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fc }),
            name: "fairy: medium-light skin tone",
            searchTerms: new string[] { "fairy", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1388
        );

        /* üßöüèΩ */
        public static readonly SingleEmoji FairyMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fd }),
            name: "fairy: medium skin tone",
            searchTerms: new string[] { "fairy", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1389
        );

        /* üßöüèæ */
        public static readonly SingleEmoji FairyMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fe }),
            name: "fairy: medium-dark skin tone",
            searchTerms: new string[] { "fairy", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1390
        );

        /* üßöüèø */
        public static readonly SingleEmoji FairyDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3ff }),
            name: "fairy: dark skin tone",
            searchTerms: new string[] { "fairy", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1391
        );

        /* üßö‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFairy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x200d, 0x2642, 0xfe0f }),
            name: "man fairy",
            searchTerms: new string[] { "man", "fairy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1392
        );

        /* üßöüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFairyLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man fairy: light skin tone",
            searchTerms: new string[] { "man", "fairy", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1394
        );

        /* üßöüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFairyMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man fairy: medium-light skin tone",
            searchTerms: new string[] { "man", "fairy", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1396
        );

        /* üßöüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFairyMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man fairy: medium skin tone",
            searchTerms: new string[] { "man", "fairy", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1398
        );

        /* üßöüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFairyMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man fairy: medium-dark skin tone",
            searchTerms: new string[] { "man", "fairy", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1400
        );

        /* üßöüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManFairyDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man fairy: dark skin tone",
            searchTerms: new string[] { "man", "fairy", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1402
        );

        /* üßö‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFairy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x200d, 0x2640, 0xfe0f }),
            name: "woman fairy",
            searchTerms: new string[] { "woman", "fairy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1404
        );

        /* üßöüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFairyLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman fairy: light skin tone",
            searchTerms: new string[] { "woman", "fairy", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1406
        );

        /* üßöüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFairyMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman fairy: medium-light skin tone",
            searchTerms: new string[] { "woman", "fairy", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1408
        );

        /* üßöüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFairyMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman fairy: medium skin tone",
            searchTerms: new string[] { "woman", "fairy", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1410
        );

        /* üßöüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFairyMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman fairy: medium-dark skin tone",
            searchTerms: new string[] { "woman", "fairy", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1412
        );

        /* üßöüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanFairyDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9da, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman fairy: dark skin tone",
            searchTerms: new string[] { "woman", "fairy", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1414
        );

        /* üßõ */
        public static readonly SingleEmoji Vampire = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db }),
            name: "vampire",
            searchTerms: new string[] { "vampire" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1416
        );

        /* üßõüèª */
        public static readonly SingleEmoji VampireLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fb }),
            name: "vampire: light skin tone",
            searchTerms: new string[] { "vampire", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1417
        );

        /* üßõüèº */
        public static readonly SingleEmoji VampireMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fc }),
            name: "vampire: medium-light skin tone",
            searchTerms: new string[] { "vampire", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1418
        );

        /* üßõüèΩ */
        public static readonly SingleEmoji VampireMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fd }),
            name: "vampire: medium skin tone",
            searchTerms: new string[] { "vampire", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1419
        );

        /* üßõüèæ */
        public static readonly SingleEmoji VampireMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fe }),
            name: "vampire: medium-dark skin tone",
            searchTerms: new string[] { "vampire", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1420
        );

        /* üßõüèø */
        public static readonly SingleEmoji VampireDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3ff }),
            name: "vampire: dark skin tone",
            searchTerms: new string[] { "vampire", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1421
        );

        /* üßõ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManVampire = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x200d, 0x2642, 0xfe0f }),
            name: "man vampire",
            searchTerms: new string[] { "man", "vampire" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1422
        );

        /* üßõüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManVampireLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man vampire: light skin tone",
            searchTerms: new string[] { "man", "vampire", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1424
        );

        /* üßõüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManVampireMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man vampire: medium-light skin tone",
            searchTerms: new string[] { "man", "vampire", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1426
        );

        /* üßõüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManVampireMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man vampire: medium skin tone",
            searchTerms: new string[] { "man", "vampire", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1428
        );

        /* üßõüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManVampireMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man vampire: medium-dark skin tone",
            searchTerms: new string[] { "man", "vampire", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1430
        );

        /* üßõüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManVampireDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man vampire: dark skin tone",
            searchTerms: new string[] { "man", "vampire", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1432
        );

        /* üßõ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanVampire = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x200d, 0x2640, 0xfe0f }),
            name: "woman vampire",
            searchTerms: new string[] { "woman", "vampire" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1434
        );

        /* üßõüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanVampireLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman vampire: light skin tone",
            searchTerms: new string[] { "woman", "vampire", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1436
        );

        /* üßõüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanVampireMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman vampire: medium-light skin tone",
            searchTerms: new string[] { "woman", "vampire", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1438
        );

        /* üßõüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanVampireMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman vampire: medium skin tone",
            searchTerms: new string[] { "woman", "vampire", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1440
        );

        /* üßõüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanVampireMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman vampire: medium-dark skin tone",
            searchTerms: new string[] { "woman", "vampire", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1442
        );

        /* üßõüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanVampireDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9db, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman vampire: dark skin tone",
            searchTerms: new string[] { "woman", "vampire", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1444
        );

        /* üßú */
        public static readonly SingleEmoji Merperson = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc }),
            name: "merperson",
            searchTerms: new string[] { "merperson" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1446
        );

        /* üßúüèª */
        public static readonly SingleEmoji MerpersonLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fb }),
            name: "merperson: light skin tone",
            searchTerms: new string[] { "merperson", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1447
        );

        /* üßúüèº */
        public static readonly SingleEmoji MerpersonMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fc }),
            name: "merperson: medium-light skin tone",
            searchTerms: new string[] { "merperson", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1448
        );

        /* üßúüèΩ */
        public static readonly SingleEmoji MerpersonMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fd }),
            name: "merperson: medium skin tone",
            searchTerms: new string[] { "merperson", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1449
        );

        /* üßúüèæ */
        public static readonly SingleEmoji MerpersonMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fe }),
            name: "merperson: medium-dark skin tone",
            searchTerms: new string[] { "merperson", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1450
        );

        /* üßúüèø */
        public static readonly SingleEmoji MerpersonDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3ff }),
            name: "merperson: dark skin tone",
            searchTerms: new string[] { "merperson", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1451
        );

        /* üßú‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji Merman = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x200d, 0x2642, 0xfe0f }),
            name: "merman",
            searchTerms: new string[] { "merman" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1452
        );

        /* üßúüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji MermanLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "merman: light skin tone",
            searchTerms: new string[] { "merman", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1454
        );

        /* üßúüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji MermanMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "merman: medium-light skin tone",
            searchTerms: new string[] { "merman", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1456
        );

        /* üßúüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji MermanMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "merman: medium skin tone",
            searchTerms: new string[] { "merman", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1458
        );

        /* üßúüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji MermanMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "merman: medium-dark skin tone",
            searchTerms: new string[] { "merman", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1460
        );

        /* üßúüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji MermanDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "merman: dark skin tone",
            searchTerms: new string[] { "merman", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1462
        );

        /* üßú‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji Mermaid = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x200d, 0x2640, 0xfe0f }),
            name: "mermaid",
            searchTerms: new string[] { "mermaid" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1464
        );

        /* üßúüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji MermaidLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "mermaid: light skin tone",
            searchTerms: new string[] { "mermaid", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1466
        );

        /* üßúüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji MermaidMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "mermaid: medium-light skin tone",
            searchTerms: new string[] { "mermaid", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1468
        );

        /* üßúüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji MermaidMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "mermaid: medium skin tone",
            searchTerms: new string[] { "mermaid", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1470
        );

        /* üßúüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji MermaidMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "mermaid: medium-dark skin tone",
            searchTerms: new string[] { "mermaid", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1472
        );

        /* üßúüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji MermaidDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dc, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "mermaid: dark skin tone",
            searchTerms: new string[] { "mermaid", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1474
        );

        /* üßù */
        public static readonly SingleEmoji Elf = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd }),
            name: "elf",
            searchTerms: new string[] { "elf" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1476
        );

        /* üßùüèª */
        public static readonly SingleEmoji ElfLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fb }),
            name: "elf: light skin tone",
            searchTerms: new string[] { "elf", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1477
        );

        /* üßùüèº */
        public static readonly SingleEmoji ElfMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fc }),
            name: "elf: medium-light skin tone",
            searchTerms: new string[] { "elf", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1478
        );

        /* üßùüèΩ */
        public static readonly SingleEmoji ElfMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fd }),
            name: "elf: medium skin tone",
            searchTerms: new string[] { "elf", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1479
        );

        /* üßùüèæ */
        public static readonly SingleEmoji ElfMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fe }),
            name: "elf: medium-dark skin tone",
            searchTerms: new string[] { "elf", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1480
        );

        /* üßùüèø */
        public static readonly SingleEmoji ElfDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3ff }),
            name: "elf: dark skin tone",
            searchTerms: new string[] { "elf", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1481
        );

        /* üßù‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManElf = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x200d, 0x2642, 0xfe0f }),
            name: "man elf",
            searchTerms: new string[] { "man", "elf" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1482
        );

        /* üßùüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManElfLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man elf: light skin tone",
            searchTerms: new string[] { "man", "elf", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1484
        );

        /* üßùüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManElfMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man elf: medium-light skin tone",
            searchTerms: new string[] { "man", "elf", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1486
        );

        /* üßùüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManElfMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man elf: medium skin tone",
            searchTerms: new string[] { "man", "elf", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1488
        );

        /* üßùüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManElfMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man elf: medium-dark skin tone",
            searchTerms: new string[] { "man", "elf", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1490
        );

        /* üßùüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManElfDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man elf: dark skin tone",
            searchTerms: new string[] { "man", "elf", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1492
        );

        /* üßù‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanElf = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman elf",
            searchTerms: new string[] { "woman", "elf" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1494
        );

        /* üßùüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanElfLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman elf: light skin tone",
            searchTerms: new string[] { "woman", "elf", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1496
        );

        /* üßùüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanElfMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman elf: medium-light skin tone",
            searchTerms: new string[] { "woman", "elf", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1498
        );

        /* üßùüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanElfMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman elf: medium skin tone",
            searchTerms: new string[] { "woman", "elf", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1500
        );

        /* üßùüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanElfMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman elf: medium-dark skin tone",
            searchTerms: new string[] { "woman", "elf", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1502
        );

        /* üßùüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanElfDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9dd, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman elf: dark skin tone",
            searchTerms: new string[] { "woman", "elf", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1504
        );

        /* üßû */
        public static readonly SingleEmoji Genie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9de }),
            name: "genie",
            searchTerms: new string[] { "genie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1506
        );

        /* üßû‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGenie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9de, 0x200d, 0x2642, 0xfe0f }),
            name: "man genie",
            searchTerms: new string[] { "man", "genie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1507
        );

        /* üßû‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGenie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9de, 0x200d, 0x2640, 0xfe0f }),
            name: "woman genie",
            searchTerms: new string[] { "woman", "genie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1509
        );

        /* üßü */
        public static readonly SingleEmoji Zombie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9df }),
            name: "zombie",
            searchTerms: new string[] { "zombie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1511
        );

        /* üßü‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManZombie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9df, 0x200d, 0x2642, 0xfe0f }),
            name: "man zombie",
            searchTerms: new string[] { "man", "zombie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1512
        );

        /* üßü‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanZombie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9df, 0x200d, 0x2640, 0xfe0f }),
            name: "woman zombie",
            searchTerms: new string[] { "woman", "zombie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_FANTASY,
            hasGlyph: true,
            sortOrder: 1514
        );

        /* üíÜ */
        public static readonly SingleEmoji PersonGettingMassage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486 }),
            name: "person getting massage",
            searchTerms: new string[] { "person", "getting", "massage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1516
        );

        /* üíÜüèª */
        public static readonly SingleEmoji PersonGettingMassageLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fb }),
            name: "person getting massage: light skin tone",
            searchTerms: new string[] { "person", "getting", "massage", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1517
        );

        /* üíÜüèº */
        public static readonly SingleEmoji PersonGettingMassageMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fc }),
            name: "person getting massage: medium-light skin tone",
            searchTerms: new string[] { "person", "getting", "massage", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1518
        );

        /* üíÜüèΩ */
        public static readonly SingleEmoji PersonGettingMassageMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fd }),
            name: "person getting massage: medium skin tone",
            searchTerms: new string[] { "person", "getting", "massage", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1519
        );

        /* üíÜüèæ */
        public static readonly SingleEmoji PersonGettingMassageMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fe }),
            name: "person getting massage: medium-dark skin tone",
            searchTerms: new string[] { "person", "getting", "massage", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1520
        );

        /* üíÜüèø */
        public static readonly SingleEmoji PersonGettingMassageDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3ff }),
            name: "person getting massage: dark skin tone",
            searchTerms: new string[] { "person", "getting", "massage", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1521
        );

        /* üíÜ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingMassage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting massage",
            searchTerms: new string[] { "man", "getting", "massage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1522
        );

        /* üíÜüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingMassageLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting massage: light skin tone",
            searchTerms: new string[] { "man", "getting", "massage", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1524
        );

        /* üíÜüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingMassageMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting massage: medium-light skin tone",
            searchTerms: new string[] { "man", "getting", "massage", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1526
        );

        /* üíÜüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingMassageMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting massage: medium skin tone",
            searchTerms: new string[] { "man", "getting", "massage", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1528
        );

        /* üíÜüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingMassageMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting massage: medium-dark skin tone",
            searchTerms: new string[] { "man", "getting", "massage", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1530
        );

        /* üíÜüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingMassageDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting massage: dark skin tone",
            searchTerms: new string[] { "man", "getting", "massage", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1532
        );

        /* üíÜ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingMassage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting massage",
            searchTerms: new string[] { "woman", "getting", "massage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1534
        );

        /* üíÜüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingMassageLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting massage: light skin tone",
            searchTerms: new string[] { "woman", "getting", "massage", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1536
        );

        /* üíÜüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingMassageMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting massage: medium-light skin tone",
            searchTerms: new string[] { "woman", "getting", "massage", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1538
        );

        /* üíÜüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingMassageMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting massage: medium skin tone",
            searchTerms: new string[] { "woman", "getting", "massage", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1540
        );

        /* üíÜüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingMassageMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting massage: medium-dark skin tone",
            searchTerms: new string[] { "woman", "getting", "massage", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1542
        );

        /* üíÜüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingMassageDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f486, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting massage: dark skin tone",
            searchTerms: new string[] { "woman", "getting", "massage", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1544
        );

        /* üíá */
        public static readonly SingleEmoji PersonGettingHaircut = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487 }),
            name: "person getting haircut",
            searchTerms: new string[] { "person", "getting", "haircut" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1546
        );

        /* üíáüèª */
        public static readonly SingleEmoji PersonGettingHaircutLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fb }),
            name: "person getting haircut: light skin tone",
            searchTerms: new string[] { "person", "getting", "haircut", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1547
        );

        /* üíáüèº */
        public static readonly SingleEmoji PersonGettingHaircutMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fc }),
            name: "person getting haircut: medium-light skin tone",
            searchTerms: new string[] { "person", "getting", "haircut", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1548
        );

        /* üíáüèΩ */
        public static readonly SingleEmoji PersonGettingHaircutMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fd }),
            name: "person getting haircut: medium skin tone",
            searchTerms: new string[] { "person", "getting", "haircut", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1549
        );

        /* üíáüèæ */
        public static readonly SingleEmoji PersonGettingHaircutMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fe }),
            name: "person getting haircut: medium-dark skin tone",
            searchTerms: new string[] { "person", "getting", "haircut", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1550
        );

        /* üíáüèø */
        public static readonly SingleEmoji PersonGettingHaircutDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3ff }),
            name: "person getting haircut: dark skin tone",
            searchTerms: new string[] { "person", "getting", "haircut", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1551
        );

        /* üíá‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingHaircut = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting haircut",
            searchTerms: new string[] { "man", "getting", "haircut" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1552
        );

        /* üíáüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingHaircutLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting haircut: light skin tone",
            searchTerms: new string[] { "man", "getting", "haircut", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1554
        );

        /* üíáüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingHaircutMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting haircut: medium-light skin tone",
            searchTerms: new string[] { "man", "getting", "haircut", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1556
        );

        /* üíáüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingHaircutMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting haircut: medium skin tone",
            searchTerms: new string[] { "man", "getting", "haircut", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1558
        );

        /* üíáüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingHaircutMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting haircut: medium-dark skin tone",
            searchTerms: new string[] { "man", "getting", "haircut", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1560
        );

        /* üíáüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGettingHaircutDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man getting haircut: dark skin tone",
            searchTerms: new string[] { "man", "getting", "haircut", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1562
        );

        /* üíá‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingHaircut = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting haircut",
            searchTerms: new string[] { "woman", "getting", "haircut" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1564
        );

        /* üíáüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingHaircutLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting haircut: light skin tone",
            searchTerms: new string[] { "woman", "getting", "haircut", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1566
        );

        /* üíáüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingHaircutMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting haircut: medium-light skin tone",
            searchTerms: new string[] { "woman", "getting", "haircut", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1568
        );

        /* üíáüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingHaircutMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting haircut: medium skin tone",
            searchTerms: new string[] { "woman", "getting", "haircut", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1570
        );

        /* üíáüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingHaircutMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting haircut: medium-dark skin tone",
            searchTerms: new string[] { "woman", "getting", "haircut", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1572
        );

        /* üíáüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGettingHaircutDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f487, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman getting haircut: dark skin tone",
            searchTerms: new string[] { "woman", "getting", "haircut", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1574
        );

        /* üö∂ */
        public static readonly SingleEmoji PersonWalking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6 }),
            name: "person walking",
            searchTerms: new string[] { "person", "walking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1576
        );

        /* üö∂üèª */
        public static readonly SingleEmoji PersonWalkingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fb }),
            name: "person walking: light skin tone",
            searchTerms: new string[] { "person", "walking", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1577
        );

        /* üö∂üèº */
        public static readonly SingleEmoji PersonWalkingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fc }),
            name: "person walking: medium-light skin tone",
            searchTerms: new string[] { "person", "walking", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1578
        );

        /* üö∂üèΩ */
        public static readonly SingleEmoji PersonWalkingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fd }),
            name: "person walking: medium skin tone",
            searchTerms: new string[] { "person", "walking", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1579
        );

        /* üö∂üèæ */
        public static readonly SingleEmoji PersonWalkingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fe }),
            name: "person walking: medium-dark skin tone",
            searchTerms: new string[] { "person", "walking", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1580
        );

        /* üö∂üèø */
        public static readonly SingleEmoji PersonWalkingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3ff }),
            name: "person walking: dark skin tone",
            searchTerms: new string[] { "person", "walking", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1581
        );

        /* üö∂‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWalking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x200d, 0x2642, 0xfe0f }),
            name: "man walking",
            searchTerms: new string[] { "man", "walking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1582
        );

        /* üö∂üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWalkingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man walking: light skin tone",
            searchTerms: new string[] { "man", "walking", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1584
        );

        /* üö∂üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWalkingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man walking: medium-light skin tone",
            searchTerms: new string[] { "man", "walking", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1586
        );

        /* üö∂üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWalkingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man walking: medium skin tone",
            searchTerms: new string[] { "man", "walking", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1588
        );

        /* üö∂üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWalkingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man walking: medium-dark skin tone",
            searchTerms: new string[] { "man", "walking", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1590
        );

        /* üö∂üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManWalkingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man walking: dark skin tone",
            searchTerms: new string[] { "man", "walking", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1592
        );

        /* üö∂‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWalking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x200d, 0x2640, 0xfe0f }),
            name: "woman walking",
            searchTerms: new string[] { "woman", "walking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1594
        );

        /* üö∂üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWalkingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman walking: light skin tone",
            searchTerms: new string[] { "woman", "walking", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1596
        );

        /* üö∂üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWalkingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman walking: medium-light skin tone",
            searchTerms: new string[] { "woman", "walking", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1598
        );

        /* üö∂üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWalkingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman walking: medium skin tone",
            searchTerms: new string[] { "woman", "walking", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1600
        );

        /* üö∂üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWalkingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman walking: medium-dark skin tone",
            searchTerms: new string[] { "woman", "walking", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1602
        );

        /* üö∂üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanWalkingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b6, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman walking: dark skin tone",
            searchTerms: new string[] { "woman", "walking", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1604
        );

        /* üßç */
        public static readonly SingleEmoji PersonStanding = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd }),
            name: "person standing",
            searchTerms: new string[] { "person", "standing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1606
        );

        /* üßçüèª */
        public static readonly SingleEmoji PersonStandingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fb }),
            name: "person standing: light skin tone",
            searchTerms: new string[] { "person", "standing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1607
        );

        /* üßçüèº */
        public static readonly SingleEmoji PersonStandingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fc }),
            name: "person standing: medium-light skin tone",
            searchTerms: new string[] { "person", "standing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1608
        );

        /* üßçüèΩ */
        public static readonly SingleEmoji PersonStandingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fd }),
            name: "person standing: medium skin tone",
            searchTerms: new string[] { "person", "standing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1609
        );

        /* üßçüèæ */
        public static readonly SingleEmoji PersonStandingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fe }),
            name: "person standing: medium-dark skin tone",
            searchTerms: new string[] { "person", "standing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1610
        );

        /* üßçüèø */
        public static readonly SingleEmoji PersonStandingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3ff }),
            name: "person standing: dark skin tone",
            searchTerms: new string[] { "person", "standing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1611
        );

        /* üßç‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManStanding = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x200d, 0x2642, 0xfe0f }),
            name: "man standing",
            searchTerms: new string[] { "man", "standing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1612
        );

        /* üßçüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManStandingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man standing: light skin tone",
            searchTerms: new string[] { "man", "standing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1614
        );

        /* üßçüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManStandingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man standing: medium-light skin tone",
            searchTerms: new string[] { "man", "standing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1616
        );

        /* üßçüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManStandingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man standing: medium skin tone",
            searchTerms: new string[] { "man", "standing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1618
        );

        /* üßçüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManStandingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man standing: medium-dark skin tone",
            searchTerms: new string[] { "man", "standing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1620
        );

        /* üßçüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManStandingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man standing: dark skin tone",
            searchTerms: new string[] { "man", "standing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1622
        );

        /* üßç‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanStanding = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman standing",
            searchTerms: new string[] { "woman", "standing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1624
        );

        /* üßçüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanStandingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman standing: light skin tone",
            searchTerms: new string[] { "woman", "standing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1626
        );

        /* üßçüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanStandingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman standing: medium-light skin tone",
            searchTerms: new string[] { "woman", "standing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1628
        );

        /* üßçüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanStandingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman standing: medium skin tone",
            searchTerms: new string[] { "woman", "standing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1630
        );

        /* üßçüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanStandingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman standing: medium-dark skin tone",
            searchTerms: new string[] { "woman", "standing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1632
        );

        /* üßçüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanStandingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9cd, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman standing: dark skin tone",
            searchTerms: new string[] { "woman", "standing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1634
        );

        /* üßé */
        public static readonly SingleEmoji PersonKneeling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce }),
            name: "person kneeling",
            searchTerms: new string[] { "person", "kneeling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1636
        );

        /* üßéüèª */
        public static readonly SingleEmoji PersonKneelingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fb }),
            name: "person kneeling: light skin tone",
            searchTerms: new string[] { "person", "kneeling", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1637
        );

        /* üßéüèº */
        public static readonly SingleEmoji PersonKneelingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fc }),
            name: "person kneeling: medium-light skin tone",
            searchTerms: new string[] { "person", "kneeling", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1638
        );

        /* üßéüèΩ */
        public static readonly SingleEmoji PersonKneelingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fd }),
            name: "person kneeling: medium skin tone",
            searchTerms: new string[] { "person", "kneeling", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1639
        );

        /* üßéüèæ */
        public static readonly SingleEmoji PersonKneelingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fe }),
            name: "person kneeling: medium-dark skin tone",
            searchTerms: new string[] { "person", "kneeling", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1640
        );

        /* üßéüèø */
        public static readonly SingleEmoji PersonKneelingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3ff }),
            name: "person kneeling: dark skin tone",
            searchTerms: new string[] { "person", "kneeling", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1641
        );

        /* üßé‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManKneeling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x200d, 0x2642, 0xfe0f }),
            name: "man kneeling",
            searchTerms: new string[] { "man", "kneeling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1642
        );

        /* üßéüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManKneelingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man kneeling: light skin tone",
            searchTerms: new string[] { "man", "kneeling", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1644
        );

        /* üßéüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManKneelingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man kneeling: medium-light skin tone",
            searchTerms: new string[] { "man", "kneeling", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1646
        );

        /* üßéüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManKneelingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man kneeling: medium skin tone",
            searchTerms: new string[] { "man", "kneeling", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1648
        );

        /* üßéüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManKneelingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man kneeling: medium-dark skin tone",
            searchTerms: new string[] { "man", "kneeling", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1650
        );

        /* üßéüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManKneelingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man kneeling: dark skin tone",
            searchTerms: new string[] { "man", "kneeling", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1652
        );

        /* üßé‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanKneeling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x200d, 0x2640, 0xfe0f }),
            name: "woman kneeling",
            searchTerms: new string[] { "woman", "kneeling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1654
        );

        /* üßéüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanKneelingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman kneeling: light skin tone",
            searchTerms: new string[] { "woman", "kneeling", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1656
        );

        /* üßéüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanKneelingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman kneeling: medium-light skin tone",
            searchTerms: new string[] { "woman", "kneeling", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1658
        );

        /* üßéüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanKneelingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman kneeling: medium skin tone",
            searchTerms: new string[] { "woman", "kneeling", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1660
        );

        /* üßéüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanKneelingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman kneeling: medium-dark skin tone",
            searchTerms: new string[] { "woman", "kneeling", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1662
        );

        /* üßéüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanKneelingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ce, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman kneeling: dark skin tone",
            searchTerms: new string[] { "woman", "kneeling", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1664
        );

        /* üë®‚Äçü¶Ø */
        public static readonly SingleEmoji ManProbingCane = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f9af }),
            name: "man with probing cane",
            searchTerms: new string[] { "man", "probing", "cane" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1666
        );

        /* üë®üèª‚Äçü¶Ø */
        public static readonly SingleEmoji ManProbingCaneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f9af }),
            name: "man with probing cane: light skin tone",
            searchTerms: new string[] { "man", "probing", "cane", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1667
        );

        /* üë®üèº‚Äçü¶Ø */
        public static readonly SingleEmoji ManProbingCaneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f9af }),
            name: "man with probing cane: medium-light skin tone",
            searchTerms: new string[] { "man", "probing", "cane", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1668
        );

        /* üë®üèΩ‚Äçü¶Ø */
        public static readonly SingleEmoji ManProbingCaneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f9af }),
            name: "man with probing cane: medium skin tone",
            searchTerms: new string[] { "man", "probing", "cane", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1669
        );

        /* üë®üèæ‚Äçü¶Ø */
        public static readonly SingleEmoji ManProbingCaneMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f9af }),
            name: "man with probing cane: medium-dark skin tone",
            searchTerms: new string[] { "man", "probing", "cane", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1670
        );

        /* üë®üèø‚Äçü¶Ø */
        public static readonly SingleEmoji ManProbingCaneDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f9af }),
            name: "man with probing cane: dark skin tone",
            searchTerms: new string[] { "man", "probing", "cane", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1671
        );

        /* üë©‚Äçü¶Ø */
        public static readonly SingleEmoji WomanProbingCane = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f9af }),
            name: "woman with probing cane",
            searchTerms: new string[] { "woman", "probing", "cane" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1672
        );

        /* üë©üèª‚Äçü¶Ø */
        public static readonly SingleEmoji WomanProbingCaneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f9af }),
            name: "woman with probing cane: light skin tone",
            searchTerms: new string[] { "woman", "probing", "cane", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1673
        );

        /* üë©üèº‚Äçü¶Ø */
        public static readonly SingleEmoji WomanProbingCaneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f9af }),
            name: "woman with probing cane: medium-light skin tone",
            searchTerms: new string[] { "woman", "probing", "cane", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1674
        );

        /* üë©üèΩ‚Äçü¶Ø */
        public static readonly SingleEmoji WomanProbingCaneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f9af }),
            name: "woman with probing cane: medium skin tone",
            searchTerms: new string[] { "woman", "probing", "cane", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1675
        );

        /* üë©üèæ‚Äçü¶Ø */
        public static readonly SingleEmoji WomanProbingCaneMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f9af }),
            name: "woman with probing cane: medium-dark skin tone",
            searchTerms: new string[] { "woman", "probing", "cane", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1676
        );

        /* üë©üèø‚Äçü¶Ø */
        public static readonly SingleEmoji WomanProbingCaneDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f9af }),
            name: "woman with probing cane: dark skin tone",
            searchTerms: new string[] { "woman", "probing", "cane", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1677
        );

        /* üë®‚Äçü¶º */
        public static readonly SingleEmoji ManMotorizedWheelchair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f9bc }),
            name: "man in motorized wheelchair",
            searchTerms: new string[] { "man", "motorized", "wheelchair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1678
        );

        /* üë®üèª‚Äçü¶º */
        public static readonly SingleEmoji ManMotorizedWheelchairLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f9bc }),
            name: "man in motorized wheelchair: light skin tone",
            searchTerms: new string[] { "man", "motorized", "wheelchair", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1679
        );

        /* üë®üèº‚Äçü¶º */
        public static readonly SingleEmoji ManMotorizedWheelchairMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f9bc }),
            name: "man in motorized wheelchair: medium-light skin tone",
            searchTerms: new string[] { "man", "motorized", "wheelchair", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1680
        );

        /* üë®üèΩ‚Äçü¶º */
        public static readonly SingleEmoji ManMotorizedWheelchairMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f9bc }),
            name: "man in motorized wheelchair: medium skin tone",
            searchTerms: new string[] { "man", "motorized", "wheelchair", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1681
        );

        /* üë®üèæ‚Äçü¶º */
        public static readonly SingleEmoji ManMotorizedWheelchairMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f9bc }),
            name: "man in motorized wheelchair: medium-dark skin tone",
            searchTerms: new string[] { "man", "motorized", "wheelchair", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1682
        );

        /* üë®üèø‚Äçü¶º */
        public static readonly SingleEmoji ManMotorizedWheelchairDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f9bc }),
            name: "man in motorized wheelchair: dark skin tone",
            searchTerms: new string[] { "man", "motorized", "wheelchair", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1683
        );

        /* üë©‚Äçü¶º */
        public static readonly SingleEmoji WomanMotorizedWheelchair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f9bc }),
            name: "woman in motorized wheelchair",
            searchTerms: new string[] { "woman", "motorized", "wheelchair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1684
        );

        /* üë©üèª‚Äçü¶º */
        public static readonly SingleEmoji WomanMotorizedWheelchairLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f9bc }),
            name: "woman in motorized wheelchair: light skin tone",
            searchTerms: new string[] { "woman", "motorized", "wheelchair", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1685
        );

        /* üë©üèº‚Äçü¶º */
        public static readonly SingleEmoji WomanMotorizedWheelchairMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f9bc }),
            name: "woman in motorized wheelchair: medium-light skin tone",
            searchTerms: new string[] { "woman", "motorized", "wheelchair", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1686
        );

        /* üë©üèΩ‚Äçü¶º */
        public static readonly SingleEmoji WomanMotorizedWheelchairMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f9bc }),
            name: "woman in motorized wheelchair: medium skin tone",
            searchTerms: new string[] { "woman", "motorized", "wheelchair", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1687
        );

        /* üë©üèæ‚Äçü¶º */
        public static readonly SingleEmoji WomanMotorizedWheelchairMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f9bc }),
            name: "woman in motorized wheelchair: medium-dark skin tone",
            searchTerms: new string[] { "woman", "motorized", "wheelchair", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1688
        );

        /* üë©üèø‚Äçü¶º */
        public static readonly SingleEmoji WomanMotorizedWheelchairDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f9bc }),
            name: "woman in motorized wheelchair: dark skin tone",
            searchTerms: new string[] { "woman", "motorized", "wheelchair", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1689
        );

        /* üë®‚Äçü¶Ω */
        public static readonly SingleEmoji ManManualWheelchair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f9bd }),
            name: "man in manual wheelchair",
            searchTerms: new string[] { "man", "manual", "wheelchair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1690
        );

        /* üë®üèª‚Äçü¶Ω */
        public static readonly SingleEmoji ManManualWheelchairLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fb, 0x200d, 0x1f9bd }),
            name: "man in manual wheelchair: light skin tone",
            searchTerms: new string[] { "man", "manual", "wheelchair", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1691
        );

        /* üë®üèº‚Äçü¶Ω */
        public static readonly SingleEmoji ManManualWheelchairMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f9bd }),
            name: "man in manual wheelchair: medium-light skin tone",
            searchTerms: new string[] { "man", "manual", "wheelchair", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1692
        );

        /* üë®üèΩ‚Äçü¶Ω */
        public static readonly SingleEmoji ManManualWheelchairMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f9bd }),
            name: "man in manual wheelchair: medium skin tone",
            searchTerms: new string[] { "man", "manual", "wheelchair", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1693
        );

        /* üë®üèæ‚Äçü¶Ω */
        public static readonly SingleEmoji ManManualWheelchairMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f9bd }),
            name: "man in manual wheelchair: medium-dark skin tone",
            searchTerms: new string[] { "man", "manual", "wheelchair", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1694
        );

        /* üë®üèø‚Äçü¶Ω */
        public static readonly SingleEmoji ManManualWheelchairDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f9bd }),
            name: "man in manual wheelchair: dark skin tone",
            searchTerms: new string[] { "man", "manual", "wheelchair", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1695
        );

        /* üë©‚Äçü¶Ω */
        public static readonly SingleEmoji WomanManualWheelchair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f9bd }),
            name: "woman in manual wheelchair",
            searchTerms: new string[] { "woman", "manual", "wheelchair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1696
        );

        /* üë©üèª‚Äçü¶Ω */
        public static readonly SingleEmoji WomanManualWheelchairLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f9bd }),
            name: "woman in manual wheelchair: light skin tone",
            searchTerms: new string[] { "woman", "manual", "wheelchair", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1697
        );

        /* üë©üèº‚Äçü¶Ω */
        public static readonly SingleEmoji WomanManualWheelchairMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f9bd }),
            name: "woman in manual wheelchair: medium-light skin tone",
            searchTerms: new string[] { "woman", "manual", "wheelchair", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1698
        );

        /* üë©üèΩ‚Äçü¶Ω */
        public static readonly SingleEmoji WomanManualWheelchairMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f9bd }),
            name: "woman in manual wheelchair: medium skin tone",
            searchTerms: new string[] { "woman", "manual", "wheelchair", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1699
        );

        /* üë©üèæ‚Äçü¶Ω */
        public static readonly SingleEmoji WomanManualWheelchairMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f9bd }),
            name: "woman in manual wheelchair: medium-dark skin tone",
            searchTerms: new string[] { "woman", "manual", "wheelchair", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1700
        );

        /* üë©üèø‚Äçü¶Ω */
        public static readonly SingleEmoji WomanManualWheelchairDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f9bd }),
            name: "woman in manual wheelchair: dark skin tone",
            searchTerms: new string[] { "woman", "manual", "wheelchair", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1701
        );

        /* üèÉ */
        public static readonly SingleEmoji PersonRunning = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3 }),
            name: "person running",
            searchTerms: new string[] { "person", "running" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1702
        );

        /* üèÉüèª */
        public static readonly SingleEmoji PersonRunningLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fb }),
            name: "person running: light skin tone",
            searchTerms: new string[] { "person", "running", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1703
        );

        /* üèÉüèº */
        public static readonly SingleEmoji PersonRunningMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fc }),
            name: "person running: medium-light skin tone",
            searchTerms: new string[] { "person", "running", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1704
        );

        /* üèÉüèΩ */
        public static readonly SingleEmoji PersonRunningMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fd }),
            name: "person running: medium skin tone",
            searchTerms: new string[] { "person", "running", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1705
        );

        /* üèÉüèæ */
        public static readonly SingleEmoji PersonRunningMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fe }),
            name: "person running: medium-dark skin tone",
            searchTerms: new string[] { "person", "running", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1706
        );

        /* üèÉüèø */
        public static readonly SingleEmoji PersonRunningDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3ff }),
            name: "person running: dark skin tone",
            searchTerms: new string[] { "person", "running", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1707
        );

        /* üèÉ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRunning = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x200d, 0x2642, 0xfe0f }),
            name: "man running",
            searchTerms: new string[] { "man", "running" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1708
        );

        /* üèÉüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRunningLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man running: light skin tone",
            searchTerms: new string[] { "man", "running", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1710
        );

        /* üèÉüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRunningMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man running: medium-light skin tone",
            searchTerms: new string[] { "man", "running", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1712
        );

        /* üèÉüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRunningMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man running: medium skin tone",
            searchTerms: new string[] { "man", "running", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1714
        );

        /* üèÉüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRunningMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man running: medium-dark skin tone",
            searchTerms: new string[] { "man", "running", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1716
        );

        /* üèÉüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRunningDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man running: dark skin tone",
            searchTerms: new string[] { "man", "running", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1718
        );

        /* üèÉ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRunning = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x200d, 0x2640, 0xfe0f }),
            name: "woman running",
            searchTerms: new string[] { "woman", "running" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1720
        );

        /* üèÉüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRunningLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman running: light skin tone",
            searchTerms: new string[] { "woman", "running", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1722
        );

        /* üèÉüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRunningMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman running: medium-light skin tone",
            searchTerms: new string[] { "woman", "running", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1724
        );

        /* üèÉüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRunningMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman running: medium skin tone",
            searchTerms: new string[] { "woman", "running", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1726
        );

        /* üèÉüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRunningMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman running: medium-dark skin tone",
            searchTerms: new string[] { "woman", "running", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1728
        );

        /* üèÉüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRunningDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c3, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman running: dark skin tone",
            searchTerms: new string[] { "woman", "running", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1730
        );

        /* üíÉ */
        public static readonly SingleEmoji WomanDancing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f483 }),
            name: "woman dancing",
            searchTerms: new string[] { "woman", "dancing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1732
        );

        /* üíÉüèª */
        public static readonly SingleEmoji WomanDancingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f483, 0x1f3fb }),
            name: "woman dancing: light skin tone",
            searchTerms: new string[] { "woman", "dancing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1733
        );

        /* üíÉüèº */
        public static readonly SingleEmoji WomanDancingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f483, 0x1f3fc }),
            name: "woman dancing: medium-light skin tone",
            searchTerms: new string[] { "woman", "dancing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1734
        );

        /* üíÉüèΩ */
        public static readonly SingleEmoji WomanDancingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f483, 0x1f3fd }),
            name: "woman dancing: medium skin tone",
            searchTerms: new string[] { "woman", "dancing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1735
        );

        /* üíÉüèæ */
        public static readonly SingleEmoji WomanDancingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f483, 0x1f3fe }),
            name: "woman dancing: medium-dark skin tone",
            searchTerms: new string[] { "woman", "dancing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1736
        );

        /* üíÉüèø */
        public static readonly SingleEmoji WomanDancingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f483, 0x1f3ff }),
            name: "woman dancing: dark skin tone",
            searchTerms: new string[] { "woman", "dancing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1737
        );

        /* üï∫ */
        public static readonly SingleEmoji ManDancing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f57a }),
            name: "man dancing",
            searchTerms: new string[] { "man", "dancing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1738
        );

        /* üï∫üèª */
        public static readonly SingleEmoji ManDancingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f57a, 0x1f3fb }),
            name: "man dancing: light skin tone",
            searchTerms: new string[] { "man", "dancing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1739
        );

        /* üï∫üèº */
        public static readonly SingleEmoji ManDancingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f57a, 0x1f3fc }),
            name: "man dancing: medium-light skin tone",
            searchTerms: new string[] { "man", "dancing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1740
        );

        /* üï∫üèΩ */
        public static readonly SingleEmoji ManDancingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f57a, 0x1f3fd }),
            name: "man dancing: medium skin tone",
            searchTerms: new string[] { "man", "dancing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1741
        );

        /* üï∫üèæ */
        public static readonly SingleEmoji ManDancingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f57a, 0x1f3fe }),
            name: "man dancing: medium-dark skin tone",
            searchTerms: new string[] { "man", "dancing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1742
        );

        /* üï∫üèø */
        public static readonly SingleEmoji ManDancingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f57a, 0x1f3ff }),
            name: "man dancing: dark skin tone",
            searchTerms: new string[] { "man", "dancing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1743
        );

        /* üï¥Ô∏è */
        public static readonly SingleEmoji ManSuitLevitating = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f574, 0xfe0f }),
            name: "man in suit levitating",
            searchTerms: new string[] { "man", "suit", "levitating" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1744
        );

        /* üï¥üèª */
        public static readonly SingleEmoji ManSuitLevitatingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f574, 0x1f3fb }),
            name: "man in suit levitating: light skin tone",
            searchTerms: new string[] { "man", "suit", "levitating", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1746
        );

        /* üï¥üèº */
        public static readonly SingleEmoji ManSuitLevitatingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f574, 0x1f3fc }),
            name: "man in suit levitating: medium-light skin tone",
            searchTerms: new string[] { "man", "suit", "levitating", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1747
        );

        /* üï¥üèΩ */
        public static readonly SingleEmoji ManSuitLevitatingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f574, 0x1f3fd }),
            name: "man in suit levitating: medium skin tone",
            searchTerms: new string[] { "man", "suit", "levitating", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1748
        );

        /* üï¥üèæ */
        public static readonly SingleEmoji ManSuitLevitatingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f574, 0x1f3fe }),
            name: "man in suit levitating: medium-dark skin tone",
            searchTerms: new string[] { "man", "suit", "levitating", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1749
        );

        /* üï¥üèø */
        public static readonly SingleEmoji ManSuitLevitatingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f574, 0x1f3ff }),
            name: "man in suit levitating: dark skin tone",
            searchTerms: new string[] { "man", "suit", "levitating", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1750
        );

        /* üëØ */
        public static readonly SingleEmoji PeopleBunnyEars = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46f }),
            name: "people with bunny ears",
            searchTerms: new string[] { "people", "bunny", "ears" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1751
        );

        /* üëØ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji MenBunnyEars = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46f, 0x200d, 0x2642, 0xfe0f }),
            name: "men with bunny ears",
            searchTerms: new string[] { "men", "bunny", "ears" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1752
        );

        /* üëØ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomenBunnyEars = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46f, 0x200d, 0x2640, 0xfe0f }),
            name: "women with bunny ears",
            searchTerms: new string[] { "women", "bunny", "ears" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1754
        );

        /* üßñ */
        public static readonly SingleEmoji PersonSteamyRoom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6 }),
            name: "person in steamy room",
            searchTerms: new string[] { "person", "steamy", "room" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1756
        );

        /* üßñüèª */
        public static readonly SingleEmoji PersonSteamyRoomLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fb }),
            name: "person in steamy room: light skin tone",
            searchTerms: new string[] { "person", "steamy", "room", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1757
        );

        /* üßñüèº */
        public static readonly SingleEmoji PersonSteamyRoomMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fc }),
            name: "person in steamy room: medium-light skin tone",
            searchTerms: new string[] { "person", "steamy", "room", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1758
        );

        /* üßñüèΩ */
        public static readonly SingleEmoji PersonSteamyRoomMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fd }),
            name: "person in steamy room: medium skin tone",
            searchTerms: new string[] { "person", "steamy", "room", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1759
        );

        /* üßñüèæ */
        public static readonly SingleEmoji PersonSteamyRoomMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fe }),
            name: "person in steamy room: medium-dark skin tone",
            searchTerms: new string[] { "person", "steamy", "room", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1760
        );

        /* üßñüèø */
        public static readonly SingleEmoji PersonSteamyRoomDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3ff }),
            name: "person in steamy room: dark skin tone",
            searchTerms: new string[] { "person", "steamy", "room", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1761
        );

        /* üßñ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSteamyRoom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x200d, 0x2642, 0xfe0f }),
            name: "man in steamy room",
            searchTerms: new string[] { "man", "steamy", "room" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1762
        );

        /* üßñüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSteamyRoomLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man in steamy room: light skin tone",
            searchTerms: new string[] { "man", "steamy", "room", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1764
        );

        /* üßñüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSteamyRoomMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man in steamy room: medium-light skin tone",
            searchTerms: new string[] { "man", "steamy", "room", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1766
        );

        /* üßñüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSteamyRoomMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man in steamy room: medium skin tone",
            searchTerms: new string[] { "man", "steamy", "room", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1768
        );

        /* üßñüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSteamyRoomMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man in steamy room: medium-dark skin tone",
            searchTerms: new string[] { "man", "steamy", "room", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1770
        );

        /* üßñüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSteamyRoomDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man in steamy room: dark skin tone",
            searchTerms: new string[] { "man", "steamy", "room", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1772
        );

        /* üßñ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSteamyRoom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in steamy room",
            searchTerms: new string[] { "woman", "steamy", "room" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1774
        );

        /* üßñüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSteamyRoomLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in steamy room: light skin tone",
            searchTerms: new string[] { "woman", "steamy", "room", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1776
        );

        /* üßñüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSteamyRoomMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in steamy room: medium-light skin tone",
            searchTerms: new string[] { "woman", "steamy", "room", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1778
        );

        /* üßñüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSteamyRoomMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in steamy room: medium skin tone",
            searchTerms: new string[] { "woman", "steamy", "room", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1780
        );

        /* üßñüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSteamyRoomMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in steamy room: medium-dark skin tone",
            searchTerms: new string[] { "woman", "steamy", "room", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1782
        );

        /* üßñüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSteamyRoomDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d6, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in steamy room: dark skin tone",
            searchTerms: new string[] { "woman", "steamy", "room", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1784
        );

        /* üßó */
        public static readonly SingleEmoji PersonClimbing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7 }),
            name: "person climbing",
            searchTerms: new string[] { "person", "climbing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1786
        );

        /* üßóüèª */
        public static readonly SingleEmoji PersonClimbingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fb }),
            name: "person climbing: light skin tone",
            searchTerms: new string[] { "person", "climbing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1787
        );

        /* üßóüèº */
        public static readonly SingleEmoji PersonClimbingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fc }),
            name: "person climbing: medium-light skin tone",
            searchTerms: new string[] { "person", "climbing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1788
        );

        /* üßóüèΩ */
        public static readonly SingleEmoji PersonClimbingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fd }),
            name: "person climbing: medium skin tone",
            searchTerms: new string[] { "person", "climbing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1789
        );

        /* üßóüèæ */
        public static readonly SingleEmoji PersonClimbingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fe }),
            name: "person climbing: medium-dark skin tone",
            searchTerms: new string[] { "person", "climbing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1790
        );

        /* üßóüèø */
        public static readonly SingleEmoji PersonClimbingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3ff }),
            name: "person climbing: dark skin tone",
            searchTerms: new string[] { "person", "climbing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1791
        );

        /* üßó‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManClimbing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x200d, 0x2642, 0xfe0f }),
            name: "man climbing",
            searchTerms: new string[] { "man", "climbing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1792
        );

        /* üßóüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManClimbingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man climbing: light skin tone",
            searchTerms: new string[] { "man", "climbing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1794
        );

        /* üßóüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManClimbingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man climbing: medium-light skin tone",
            searchTerms: new string[] { "man", "climbing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1796
        );

        /* üßóüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManClimbingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man climbing: medium skin tone",
            searchTerms: new string[] { "man", "climbing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1798
        );

        /* üßóüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManClimbingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man climbing: medium-dark skin tone",
            searchTerms: new string[] { "man", "climbing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1800
        );

        /* üßóüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManClimbingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man climbing: dark skin tone",
            searchTerms: new string[] { "man", "climbing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1802
        );

        /* üßó‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanClimbing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x200d, 0x2640, 0xfe0f }),
            name: "woman climbing",
            searchTerms: new string[] { "woman", "climbing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1804
        );

        /* üßóüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanClimbingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman climbing: light skin tone",
            searchTerms: new string[] { "woman", "climbing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1806
        );

        /* üßóüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanClimbingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman climbing: medium-light skin tone",
            searchTerms: new string[] { "woman", "climbing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1808
        );

        /* üßóüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanClimbingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman climbing: medium skin tone",
            searchTerms: new string[] { "woman", "climbing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1810
        );

        /* üßóüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanClimbingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman climbing: medium-dark skin tone",
            searchTerms: new string[] { "woman", "climbing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1812
        );

        /* üßóüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanClimbingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d7, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman climbing: dark skin tone",
            searchTerms: new string[] { "woman", "climbing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_ACTIVITY,
            hasGlyph: true,
            sortOrder: 1814
        );

        /* ü§∫ */
        public static readonly SingleEmoji PersonFencing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93a }),
            name: "person fencing",
            searchTerms: new string[] { "person", "fencing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1816
        );

        /* üèá */
        public static readonly SingleEmoji HorseRacing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c7 }),
            name: "horse racing",
            searchTerms: new string[] { "horse", "racing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1817
        );

        /* üèáüèª */
        public static readonly SingleEmoji HorseRacingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c7, 0x1f3fb }),
            name: "horse racing: light skin tone",
            searchTerms: new string[] { "horse", "racing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1818
        );

        /* üèáüèº */
        public static readonly SingleEmoji HorseRacingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c7, 0x1f3fc }),
            name: "horse racing: medium-light skin tone",
            searchTerms: new string[] { "horse", "racing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1819
        );

        /* üèáüèΩ */
        public static readonly SingleEmoji HorseRacingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c7, 0x1f3fd }),
            name: "horse racing: medium skin tone",
            searchTerms: new string[] { "horse", "racing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1820
        );

        /* üèáüèæ */
        public static readonly SingleEmoji HorseRacingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c7, 0x1f3fe }),
            name: "horse racing: medium-dark skin tone",
            searchTerms: new string[] { "horse", "racing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1821
        );

        /* üèáüèø */
        public static readonly SingleEmoji HorseRacingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c7, 0x1f3ff }),
            name: "horse racing: dark skin tone",
            searchTerms: new string[] { "horse", "racing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1822
        );

        /* ‚õ∑Ô∏è */
        public static readonly SingleEmoji Skier = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f7, 0xfe0f }),
            name: "skier",
            searchTerms: new string[] { "skier" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1823
        );

        /* üèÇ */
        public static readonly SingleEmoji Snowboarder = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c2 }),
            name: "snowboarder",
            searchTerms: new string[] { "snowboarder" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1825
        );

        /* üèÇüèª */
        public static readonly SingleEmoji SnowboarderLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c2, 0x1f3fb }),
            name: "snowboarder: light skin tone",
            searchTerms: new string[] { "snowboarder", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1826
        );

        /* üèÇüèº */
        public static readonly SingleEmoji SnowboarderMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c2, 0x1f3fc }),
            name: "snowboarder: medium-light skin tone",
            searchTerms: new string[] { "snowboarder", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1827
        );

        /* üèÇüèΩ */
        public static readonly SingleEmoji SnowboarderMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c2, 0x1f3fd }),
            name: "snowboarder: medium skin tone",
            searchTerms: new string[] { "snowboarder", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1828
        );

        /* üèÇüèæ */
        public static readonly SingleEmoji SnowboarderMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c2, 0x1f3fe }),
            name: "snowboarder: medium-dark skin tone",
            searchTerms: new string[] { "snowboarder", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1829
        );

        /* üèÇüèø */
        public static readonly SingleEmoji SnowboarderDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c2, 0x1f3ff }),
            name: "snowboarder: dark skin tone",
            searchTerms: new string[] { "snowboarder", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1830
        );

        /* üèåÔ∏è */
        public static readonly SingleEmoji PersonGolfing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0xfe0f }),
            name: "person golfing",
            searchTerms: new string[] { "person", "golfing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1831
        );

        /* üèåüèª */
        public static readonly SingleEmoji PersonGolfingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fb }),
            name: "person golfing: light skin tone",
            searchTerms: new string[] { "person", "golfing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1833
        );

        /* üèåüèº */
        public static readonly SingleEmoji PersonGolfingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fc }),
            name: "person golfing: medium-light skin tone",
            searchTerms: new string[] { "person", "golfing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1834
        );

        /* üèåüèΩ */
        public static readonly SingleEmoji PersonGolfingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fd }),
            name: "person golfing: medium skin tone",
            searchTerms: new string[] { "person", "golfing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1835
        );

        /* üèåüèæ */
        public static readonly SingleEmoji PersonGolfingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fe }),
            name: "person golfing: medium-dark skin tone",
            searchTerms: new string[] { "person", "golfing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1836
        );

        /* üèåüèø */
        public static readonly SingleEmoji PersonGolfingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3ff }),
            name: "person golfing: dark skin tone",
            searchTerms: new string[] { "person", "golfing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1837
        );

        /* üèåÔ∏è‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGolfing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0xfe0f, 0x200d, 0x2642, 0xfe0f }),
            name: "man golfing",
            searchTerms: new string[] { "man", "golfing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1838
        );

        /* üèåüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGolfingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man golfing: light skin tone",
            searchTerms: new string[] { "man", "golfing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1842
        );

        /* üèåüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGolfingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man golfing: medium-light skin tone",
            searchTerms: new string[] { "man", "golfing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1844
        );

        /* üèåüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGolfingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man golfing: medium skin tone",
            searchTerms: new string[] { "man", "golfing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1846
        );

        /* üèåüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGolfingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man golfing: medium-dark skin tone",
            searchTerms: new string[] { "man", "golfing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1848
        );

        /* üèåüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManGolfingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man golfing: dark skin tone",
            searchTerms: new string[] { "man", "golfing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1850
        );

        /* üèåÔ∏è‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGolfing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0xfe0f, 0x200d, 0x2640, 0xfe0f }),
            name: "woman golfing",
            searchTerms: new string[] { "woman", "golfing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1852
        );

        /* üèåüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGolfingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman golfing: light skin tone",
            searchTerms: new string[] { "woman", "golfing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1856
        );

        /* üèåüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGolfingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman golfing: medium-light skin tone",
            searchTerms: new string[] { "woman", "golfing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1858
        );

        /* üèåüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGolfingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman golfing: medium skin tone",
            searchTerms: new string[] { "woman", "golfing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1860
        );

        /* üèåüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGolfingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman golfing: medium-dark skin tone",
            searchTerms: new string[] { "woman", "golfing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1862
        );

        /* üèåüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanGolfingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cc, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman golfing: dark skin tone",
            searchTerms: new string[] { "woman", "golfing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1864
        );

        /* üèÑ */
        public static readonly SingleEmoji PersonSurfing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4 }),
            name: "person surfing",
            searchTerms: new string[] { "person", "surfing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1866
        );

        /* üèÑüèª */
        public static readonly SingleEmoji PersonSurfingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fb }),
            name: "person surfing: light skin tone",
            searchTerms: new string[] { "person", "surfing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1867
        );

        /* üèÑüèº */
        public static readonly SingleEmoji PersonSurfingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fc }),
            name: "person surfing: medium-light skin tone",
            searchTerms: new string[] { "person", "surfing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1868
        );

        /* üèÑüèΩ */
        public static readonly SingleEmoji PersonSurfingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fd }),
            name: "person surfing: medium skin tone",
            searchTerms: new string[] { "person", "surfing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1869
        );

        /* üèÑüèæ */
        public static readonly SingleEmoji PersonSurfingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fe }),
            name: "person surfing: medium-dark skin tone",
            searchTerms: new string[] { "person", "surfing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1870
        );

        /* üèÑüèø */
        public static readonly SingleEmoji PersonSurfingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3ff }),
            name: "person surfing: dark skin tone",
            searchTerms: new string[] { "person", "surfing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1871
        );

        /* üèÑ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSurfing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x200d, 0x2642, 0xfe0f }),
            name: "man surfing",
            searchTerms: new string[] { "man", "surfing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1872
        );

        /* üèÑüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSurfingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man surfing: light skin tone",
            searchTerms: new string[] { "man", "surfing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1874
        );

        /* üèÑüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSurfingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man surfing: medium-light skin tone",
            searchTerms: new string[] { "man", "surfing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1876
        );

        /* üèÑüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSurfingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man surfing: medium skin tone",
            searchTerms: new string[] { "man", "surfing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1878
        );

        /* üèÑüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSurfingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man surfing: medium-dark skin tone",
            searchTerms: new string[] { "man", "surfing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1880
        );

        /* üèÑüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSurfingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man surfing: dark skin tone",
            searchTerms: new string[] { "man", "surfing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1882
        );

        /* üèÑ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSurfing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x200d, 0x2640, 0xfe0f }),
            name: "woman surfing",
            searchTerms: new string[] { "woman", "surfing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1884
        );

        /* üèÑüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSurfingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman surfing: light skin tone",
            searchTerms: new string[] { "woman", "surfing", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1886
        );

        /* üèÑüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSurfingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman surfing: medium-light skin tone",
            searchTerms: new string[] { "woman", "surfing", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1888
        );

        /* üèÑüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSurfingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman surfing: medium skin tone",
            searchTerms: new string[] { "woman", "surfing", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1890
        );

        /* üèÑüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSurfingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman surfing: medium-dark skin tone",
            searchTerms: new string[] { "woman", "surfing", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1892
        );

        /* üèÑüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSurfingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c4, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman surfing: dark skin tone",
            searchTerms: new string[] { "woman", "surfing", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1894
        );

        /* üö£ */
        public static readonly SingleEmoji PersonRowingBoat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3 }),
            name: "person rowing boat",
            searchTerms: new string[] { "person", "rowing", "boat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1896
        );

        /* üö£üèª */
        public static readonly SingleEmoji PersonRowingBoatLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fb }),
            name: "person rowing boat: light skin tone",
            searchTerms: new string[] { "person", "rowing", "boat", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1897
        );

        /* üö£üèº */
        public static readonly SingleEmoji PersonRowingBoatMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fc }),
            name: "person rowing boat: medium-light skin tone",
            searchTerms: new string[] { "person", "rowing", "boat", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1898
        );

        /* üö£üèΩ */
        public static readonly SingleEmoji PersonRowingBoatMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fd }),
            name: "person rowing boat: medium skin tone",
            searchTerms: new string[] { "person", "rowing", "boat", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1899
        );

        /* üö£üèæ */
        public static readonly SingleEmoji PersonRowingBoatMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fe }),
            name: "person rowing boat: medium-dark skin tone",
            searchTerms: new string[] { "person", "rowing", "boat", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1900
        );

        /* üö£üèø */
        public static readonly SingleEmoji PersonRowingBoatDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3ff }),
            name: "person rowing boat: dark skin tone",
            searchTerms: new string[] { "person", "rowing", "boat", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1901
        );

        /* üö£‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRowingBoat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x200d, 0x2642, 0xfe0f }),
            name: "man rowing boat",
            searchTerms: new string[] { "man", "rowing", "boat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1902
        );

        /* üö£üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRowingBoatLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man rowing boat: light skin tone",
            searchTerms: new string[] { "man", "rowing", "boat", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1904
        );

        /* üö£üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRowingBoatMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man rowing boat: medium-light skin tone",
            searchTerms: new string[] { "man", "rowing", "boat", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1906
        );

        /* üö£üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRowingBoatMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man rowing boat: medium skin tone",
            searchTerms: new string[] { "man", "rowing", "boat", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1908
        );

        /* üö£üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRowingBoatMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man rowing boat: medium-dark skin tone",
            searchTerms: new string[] { "man", "rowing", "boat", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1910
        );

        /* üö£üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManRowingBoatDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man rowing boat: dark skin tone",
            searchTerms: new string[] { "man", "rowing", "boat", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1912
        );

        /* üö£‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRowingBoat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x200d, 0x2640, 0xfe0f }),
            name: "woman rowing boat",
            searchTerms: new string[] { "woman", "rowing", "boat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1914
        );

        /* üö£üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRowingBoatLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman rowing boat: light skin tone",
            searchTerms: new string[] { "woman", "rowing", "boat", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1916
        );

        /* üö£üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRowingBoatMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman rowing boat: medium-light skin tone",
            searchTerms: new string[] { "woman", "rowing", "boat", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1918
        );

        /* üö£üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRowingBoatMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman rowing boat: medium skin tone",
            searchTerms: new string[] { "woman", "rowing", "boat", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1920
        );

        /* üö£üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRowingBoatMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman rowing boat: medium-dark skin tone",
            searchTerms: new string[] { "woman", "rowing", "boat", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1922
        );

        /* üö£üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanRowingBoatDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a3, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman rowing boat: dark skin tone",
            searchTerms: new string[] { "woman", "rowing", "boat", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1924
        );

        /* üèä */
        public static readonly SingleEmoji PersonSwimming = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca }),
            name: "person swimming",
            searchTerms: new string[] { "person", "swimming" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1926
        );

        /* üèäüèª */
        public static readonly SingleEmoji PersonSwimmingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fb }),
            name: "person swimming: light skin tone",
            searchTerms: new string[] { "person", "swimming", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1927
        );

        /* üèäüèº */
        public static readonly SingleEmoji PersonSwimmingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fc }),
            name: "person swimming: medium-light skin tone",
            searchTerms: new string[] { "person", "swimming", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1928
        );

        /* üèäüèΩ */
        public static readonly SingleEmoji PersonSwimmingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fd }),
            name: "person swimming: medium skin tone",
            searchTerms: new string[] { "person", "swimming", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1929
        );

        /* üèäüèæ */
        public static readonly SingleEmoji PersonSwimmingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fe }),
            name: "person swimming: medium-dark skin tone",
            searchTerms: new string[] { "person", "swimming", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1930
        );

        /* üèäüèø */
        public static readonly SingleEmoji PersonSwimmingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3ff }),
            name: "person swimming: dark skin tone",
            searchTerms: new string[] { "person", "swimming", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1931
        );

        /* üèä‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSwimming = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x200d, 0x2642, 0xfe0f }),
            name: "man swimming",
            searchTerms: new string[] { "man", "swimming" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1932
        );

        /* üèäüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSwimmingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man swimming: light skin tone",
            searchTerms: new string[] { "man", "swimming", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1934
        );

        /* üèäüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSwimmingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man swimming: medium-light skin tone",
            searchTerms: new string[] { "man", "swimming", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1936
        );

        /* üèäüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSwimmingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man swimming: medium skin tone",
            searchTerms: new string[] { "man", "swimming", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1938
        );

        /* üèäüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSwimmingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man swimming: medium-dark skin tone",
            searchTerms: new string[] { "man", "swimming", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1940
        );

        /* üèäüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManSwimmingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man swimming: dark skin tone",
            searchTerms: new string[] { "man", "swimming", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1942
        );

        /* üèä‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSwimming = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x200d, 0x2640, 0xfe0f }),
            name: "woman swimming",
            searchTerms: new string[] { "woman", "swimming" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1944
        );

        /* üèäüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSwimmingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman swimming: light skin tone",
            searchTerms: new string[] { "woman", "swimming", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1946
        );

        /* üèäüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSwimmingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman swimming: medium-light skin tone",
            searchTerms: new string[] { "woman", "swimming", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1948
        );

        /* üèäüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSwimmingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman swimming: medium skin tone",
            searchTerms: new string[] { "woman", "swimming", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1950
        );

        /* üèäüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSwimmingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman swimming: medium-dark skin tone",
            searchTerms: new string[] { "woman", "swimming", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1952
        );

        /* üèäüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanSwimmingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ca, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman swimming: dark skin tone",
            searchTerms: new string[] { "woman", "swimming", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1954
        );

        /* ‚õπÔ∏è */
        public static readonly SingleEmoji PersonBouncingBall = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0xfe0f }),
            name: "person bouncing ball",
            searchTerms: new string[] { "person", "bouncing", "ball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1956
        );

        /* ‚õπüèª */
        public static readonly SingleEmoji PersonBouncingBallLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fb }),
            name: "person bouncing ball: light skin tone",
            searchTerms: new string[] { "person", "bouncing", "ball", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1958
        );

        /* ‚õπüèº */
        public static readonly SingleEmoji PersonBouncingBallMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fc }),
            name: "person bouncing ball: medium-light skin tone",
            searchTerms: new string[] { "person", "bouncing", "ball", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1959
        );

        /* ‚õπüèΩ */
        public static readonly SingleEmoji PersonBouncingBallMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fd }),
            name: "person bouncing ball: medium skin tone",
            searchTerms: new string[] { "person", "bouncing", "ball", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1960
        );

        /* ‚õπüèæ */
        public static readonly SingleEmoji PersonBouncingBallMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fe }),
            name: "person bouncing ball: medium-dark skin tone",
            searchTerms: new string[] { "person", "bouncing", "ball", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1961
        );

        /* ‚õπüèø */
        public static readonly SingleEmoji PersonBouncingBallDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3ff }),
            name: "person bouncing ball: dark skin tone",
            searchTerms: new string[] { "person", "bouncing", "ball", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1962
        );

        /* ‚õπÔ∏è‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBouncingBall = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0xfe0f, 0x200d, 0x2642, 0xfe0f }),
            name: "man bouncing ball",
            searchTerms: new string[] { "man", "bouncing", "ball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1963
        );

        /* ‚õπüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBouncingBallLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man bouncing ball: light skin tone",
            searchTerms: new string[] { "man", "bouncing", "ball", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1967
        );

        /* ‚õπüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBouncingBallMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man bouncing ball: medium-light skin tone",
            searchTerms: new string[] { "man", "bouncing", "ball", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1969
        );

        /* ‚õπüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBouncingBallMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man bouncing ball: medium skin tone",
            searchTerms: new string[] { "man", "bouncing", "ball", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1971
        );

        /* ‚õπüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBouncingBallMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man bouncing ball: medium-dark skin tone",
            searchTerms: new string[] { "man", "bouncing", "ball", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1973
        );

        /* ‚õπüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBouncingBallDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man bouncing ball: dark skin tone",
            searchTerms: new string[] { "man", "bouncing", "ball", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1975
        );

        /* ‚õπÔ∏è‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBouncingBall = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0xfe0f, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bouncing ball",
            searchTerms: new string[] { "woman", "bouncing", "ball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1977
        );

        /* ‚õπüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBouncingBallLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bouncing ball: light skin tone",
            searchTerms: new string[] { "woman", "bouncing", "ball", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1981
        );

        /* ‚õπüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBouncingBallMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bouncing ball: medium-light skin tone",
            searchTerms: new string[] { "woman", "bouncing", "ball", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1983
        );

        /* ‚õπüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBouncingBallMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bouncing ball: medium skin tone",
            searchTerms: new string[] { "woman", "bouncing", "ball", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1985
        );

        /* ‚õπüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBouncingBallMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bouncing ball: medium-dark skin tone",
            searchTerms: new string[] { "woman", "bouncing", "ball", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1987
        );

        /* ‚õπüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBouncingBallDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f9, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman bouncing ball: dark skin tone",
            searchTerms: new string[] { "woman", "bouncing", "ball", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1989
        );

        /* üèãÔ∏è */
        public static readonly SingleEmoji PersonLiftingWeights = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0xfe0f }),
            name: "person lifting weights",
            searchTerms: new string[] { "person", "lifting", "weights" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1991
        );

        /* üèãüèª */
        public static readonly SingleEmoji PersonLiftingWeightsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fb }),
            name: "person lifting weights: light skin tone",
            searchTerms: new string[] { "person", "lifting", "weights", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1993
        );

        /* üèãüèº */
        public static readonly SingleEmoji PersonLiftingWeightsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fc }),
            name: "person lifting weights: medium-light skin tone",
            searchTerms: new string[] { "person", "lifting", "weights", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1994
        );

        /* üèãüèΩ */
        public static readonly SingleEmoji PersonLiftingWeightsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fd }),
            name: "person lifting weights: medium skin tone",
            searchTerms: new string[] { "person", "lifting", "weights", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1995
        );

        /* üèãüèæ */
        public static readonly SingleEmoji PersonLiftingWeightsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fe }),
            name: "person lifting weights: medium-dark skin tone",
            searchTerms: new string[] { "person", "lifting", "weights", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1996
        );

        /* üèãüèø */
        public static readonly SingleEmoji PersonLiftingWeightsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3ff }),
            name: "person lifting weights: dark skin tone",
            searchTerms: new string[] { "person", "lifting", "weights", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1997
        );

        /* üèãÔ∏è‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLiftingWeights = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0xfe0f, 0x200d, 0x2642, 0xfe0f }),
            name: "man lifting weights",
            searchTerms: new string[] { "man", "lifting", "weights" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 1998
        );

        /* üèãüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLiftingWeightsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man lifting weights: light skin tone",
            searchTerms: new string[] { "man", "lifting", "weights", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2002
        );

        /* üèãüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLiftingWeightsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man lifting weights: medium-light skin tone",
            searchTerms: new string[] { "man", "lifting", "weights", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2004
        );

        /* üèãüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLiftingWeightsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man lifting weights: medium skin tone",
            searchTerms: new string[] { "man", "lifting", "weights", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2006
        );

        /* üèãüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLiftingWeightsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man lifting weights: medium-dark skin tone",
            searchTerms: new string[] { "man", "lifting", "weights", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2008
        );

        /* üèãüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLiftingWeightsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man lifting weights: dark skin tone",
            searchTerms: new string[] { "man", "lifting", "weights", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2010
        );

        /* üèãÔ∏è‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLiftingWeights = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0xfe0f, 0x200d, 0x2640, 0xfe0f }),
            name: "woman lifting weights",
            searchTerms: new string[] { "woman", "lifting", "weights" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2012
        );

        /* üèãüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLiftingWeightsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman lifting weights: light skin tone",
            searchTerms: new string[] { "woman", "lifting", "weights", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2016
        );

        /* üèãüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLiftingWeightsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman lifting weights: medium-light skin tone",
            searchTerms: new string[] { "woman", "lifting", "weights", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2018
        );

        /* üèãüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLiftingWeightsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman lifting weights: medium skin tone",
            searchTerms: new string[] { "woman", "lifting", "weights", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2020
        );

        /* üèãüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLiftingWeightsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman lifting weights: medium-dark skin tone",
            searchTerms: new string[] { "woman", "lifting", "weights", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2022
        );

        /* üèãüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLiftingWeightsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cb, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman lifting weights: dark skin tone",
            searchTerms: new string[] { "woman", "lifting", "weights", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2024
        );

        /* üö¥ */
        public static readonly SingleEmoji PersonBiking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4 }),
            name: "person biking",
            searchTerms: new string[] { "person", "biking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2026
        );

        /* üö¥üèª */
        public static readonly SingleEmoji PersonBikingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fb }),
            name: "person biking: light skin tone",
            searchTerms: new string[] { "person", "biking", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2027
        );

        /* üö¥üèº */
        public static readonly SingleEmoji PersonBikingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fc }),
            name: "person biking: medium-light skin tone",
            searchTerms: new string[] { "person", "biking", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2028
        );

        /* üö¥üèΩ */
        public static readonly SingleEmoji PersonBikingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fd }),
            name: "person biking: medium skin tone",
            searchTerms: new string[] { "person", "biking", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2029
        );

        /* üö¥üèæ */
        public static readonly SingleEmoji PersonBikingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fe }),
            name: "person biking: medium-dark skin tone",
            searchTerms: new string[] { "person", "biking", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2030
        );

        /* üö¥üèø */
        public static readonly SingleEmoji PersonBikingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3ff }),
            name: "person biking: dark skin tone",
            searchTerms: new string[] { "person", "biking", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2031
        );

        /* üö¥‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBiking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x200d, 0x2642, 0xfe0f }),
            name: "man biking",
            searchTerms: new string[] { "man", "biking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2032
        );

        /* üö¥üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBikingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man biking: light skin tone",
            searchTerms: new string[] { "man", "biking", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2034
        );

        /* üö¥üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBikingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man biking: medium-light skin tone",
            searchTerms: new string[] { "man", "biking", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2036
        );

        /* üö¥üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBikingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man biking: medium skin tone",
            searchTerms: new string[] { "man", "biking", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2038
        );

        /* üö¥üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBikingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man biking: medium-dark skin tone",
            searchTerms: new string[] { "man", "biking", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2040
        );

        /* üö¥üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManBikingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man biking: dark skin tone",
            searchTerms: new string[] { "man", "biking", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2042
        );

        /* üö¥‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBiking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x200d, 0x2640, 0xfe0f }),
            name: "woman biking",
            searchTerms: new string[] { "woman", "biking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2044
        );

        /* üö¥üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBikingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman biking: light skin tone",
            searchTerms: new string[] { "woman", "biking", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2046
        );

        /* üö¥üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBikingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman biking: medium-light skin tone",
            searchTerms: new string[] { "woman", "biking", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2048
        );

        /* üö¥üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBikingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman biking: medium skin tone",
            searchTerms: new string[] { "woman", "biking", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2050
        );

        /* üö¥üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBikingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman biking: medium-dark skin tone",
            searchTerms: new string[] { "woman", "biking", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2052
        );

        /* üö¥üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanBikingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b4, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman biking: dark skin tone",
            searchTerms: new string[] { "woman", "biking", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2054
        );

        /* üöµ */
        public static readonly SingleEmoji PersonMountainBiking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5 }),
            name: "person mountain biking",
            searchTerms: new string[] { "person", "mountain", "biking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2056
        );

        /* üöµüèª */
        public static readonly SingleEmoji PersonMountainBikingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fb }),
            name: "person mountain biking: light skin tone",
            searchTerms: new string[] { "person", "mountain", "biking", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2057
        );

        /* üöµüèº */
        public static readonly SingleEmoji PersonMountainBikingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fc }),
            name: "person mountain biking: medium-light skin tone",
            searchTerms: new string[] { "person", "mountain", "biking", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2058
        );

        /* üöµüèΩ */
        public static readonly SingleEmoji PersonMountainBikingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fd }),
            name: "person mountain biking: medium skin tone",
            searchTerms: new string[] { "person", "mountain", "biking", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2059
        );

        /* üöµüèæ */
        public static readonly SingleEmoji PersonMountainBikingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fe }),
            name: "person mountain biking: medium-dark skin tone",
            searchTerms: new string[] { "person", "mountain", "biking", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2060
        );

        /* üöµüèø */
        public static readonly SingleEmoji PersonMountainBikingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3ff }),
            name: "person mountain biking: dark skin tone",
            searchTerms: new string[] { "person", "mountain", "biking", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2061
        );

        /* üöµ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMountainBiking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x200d, 0x2642, 0xfe0f }),
            name: "man mountain biking",
            searchTerms: new string[] { "man", "mountain", "biking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2062
        );

        /* üöµüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMountainBikingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man mountain biking: light skin tone",
            searchTerms: new string[] { "man", "mountain", "biking", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2064
        );

        /* üöµüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMountainBikingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man mountain biking: medium-light skin tone",
            searchTerms: new string[] { "man", "mountain", "biking", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2066
        );

        /* üöµüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMountainBikingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man mountain biking: medium skin tone",
            searchTerms: new string[] { "man", "mountain", "biking", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2068
        );

        /* üöµüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMountainBikingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man mountain biking: medium-dark skin tone",
            searchTerms: new string[] { "man", "mountain", "biking", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2070
        );

        /* üöµüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManMountainBikingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man mountain biking: dark skin tone",
            searchTerms: new string[] { "man", "mountain", "biking", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2072
        );

        /* üöµ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMountainBiking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mountain biking",
            searchTerms: new string[] { "woman", "mountain", "biking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2074
        );

        /* üöµüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMountainBikingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mountain biking: light skin tone",
            searchTerms: new string[] { "woman", "mountain", "biking", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2076
        );

        /* üöµüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMountainBikingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mountain biking: medium-light skin tone",
            searchTerms: new string[] { "woman", "mountain", "biking", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2078
        );

        /* üöµüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMountainBikingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mountain biking: medium skin tone",
            searchTerms: new string[] { "woman", "mountain", "biking", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2080
        );

        /* üöµüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMountainBikingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mountain biking: medium-dark skin tone",
            searchTerms: new string[] { "woman", "mountain", "biking", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2082
        );

        /* üöµüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanMountainBikingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b5, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman mountain biking: dark skin tone",
            searchTerms: new string[] { "woman", "mountain", "biking", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2084
        );

        /* ü§∏ */
        public static readonly SingleEmoji PersonCartwheeling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938 }),
            name: "person cartwheeling",
            searchTerms: new string[] { "person", "cartwheeling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2086
        );

        /* ü§∏üèª */
        public static readonly SingleEmoji PersonCartwheelingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fb }),
            name: "person cartwheeling: light skin tone",
            searchTerms: new string[] { "person", "cartwheeling", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2087
        );

        /* ü§∏üèº */
        public static readonly SingleEmoji PersonCartwheelingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fc }),
            name: "person cartwheeling: medium-light skin tone",
            searchTerms: new string[] { "person", "cartwheeling", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2088
        );

        /* ü§∏üèΩ */
        public static readonly SingleEmoji PersonCartwheelingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fd }),
            name: "person cartwheeling: medium skin tone",
            searchTerms: new string[] { "person", "cartwheeling", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2089
        );

        /* ü§∏üèæ */
        public static readonly SingleEmoji PersonCartwheelingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fe }),
            name: "person cartwheeling: medium-dark skin tone",
            searchTerms: new string[] { "person", "cartwheeling", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2090
        );

        /* ü§∏üèø */
        public static readonly SingleEmoji PersonCartwheelingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3ff }),
            name: "person cartwheeling: dark skin tone",
            searchTerms: new string[] { "person", "cartwheeling", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2091
        );

        /* ü§∏‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManCartwheeling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x200d, 0x2642, 0xfe0f }),
            name: "man cartwheeling",
            searchTerms: new string[] { "man", "cartwheeling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2092
        );

        /* ü§∏üèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManCartwheelingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man cartwheeling: light skin tone",
            searchTerms: new string[] { "man", "cartwheeling", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2094
        );

        /* ü§∏üèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManCartwheelingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man cartwheeling: medium-light skin tone",
            searchTerms: new string[] { "man", "cartwheeling", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2096
        );

        /* ü§∏üèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManCartwheelingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man cartwheeling: medium skin tone",
            searchTerms: new string[] { "man", "cartwheeling", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2098
        );

        /* ü§∏üèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManCartwheelingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man cartwheeling: medium-dark skin tone",
            searchTerms: new string[] { "man", "cartwheeling", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2100
        );

        /* ü§∏üèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManCartwheelingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man cartwheeling: dark skin tone",
            searchTerms: new string[] { "man", "cartwheeling", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2102
        );

        /* ü§∏‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanCartwheeling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x200d, 0x2640, 0xfe0f }),
            name: "woman cartwheeling",
            searchTerms: new string[] { "woman", "cartwheeling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2104
        );

        /* ü§∏üèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanCartwheelingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman cartwheeling: light skin tone",
            searchTerms: new string[] { "woman", "cartwheeling", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2106
        );

        /* ü§∏üèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanCartwheelingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman cartwheeling: medium-light skin tone",
            searchTerms: new string[] { "woman", "cartwheeling", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2108
        );

        /* ü§∏üèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanCartwheelingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman cartwheeling: medium skin tone",
            searchTerms: new string[] { "woman", "cartwheeling", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2110
        );

        /* ü§∏üèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanCartwheelingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman cartwheeling: medium-dark skin tone",
            searchTerms: new string[] { "woman", "cartwheeling", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2112
        );

        /* ü§∏üèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanCartwheelingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f938, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman cartwheeling: dark skin tone",
            searchTerms: new string[] { "woman", "cartwheeling", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2114
        );

        /* ü§º */
        public static readonly SingleEmoji PeopleWrestling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93c }),
            name: "people wrestling",
            searchTerms: new string[] { "people", "wrestling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2116
        );

        /* ü§º‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji MenWrestling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93c, 0x200d, 0x2642, 0xfe0f }),
            name: "men wrestling",
            searchTerms: new string[] { "men", "wrestling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2117
        );

        /* ü§º‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomenWrestling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93c, 0x200d, 0x2640, 0xfe0f }),
            name: "women wrestling",
            searchTerms: new string[] { "women", "wrestling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2119
        );

        /* ü§Ω */
        public static readonly SingleEmoji PersonPlayingWaterPolo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d }),
            name: "person playing water polo",
            searchTerms: new string[] { "person", "playing", "water", "polo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2121
        );

        /* ü§Ωüèª */
        public static readonly SingleEmoji PersonPlayingWaterPoloLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fb }),
            name: "person playing water polo: light skin tone",
            searchTerms: new string[] { "person", "playing", "water", "polo", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2122
        );

        /* ü§Ωüèº */
        public static readonly SingleEmoji PersonPlayingWaterPoloMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fc }),
            name: "person playing water polo: medium-light skin tone",
            searchTerms: new string[] { "person", "playing", "water", "polo", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2123
        );

        /* ü§ΩüèΩ */
        public static readonly SingleEmoji PersonPlayingWaterPoloMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fd }),
            name: "person playing water polo: medium skin tone",
            searchTerms: new string[] { "person", "playing", "water", "polo", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2124
        );

        /* ü§Ωüèæ */
        public static readonly SingleEmoji PersonPlayingWaterPoloMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fe }),
            name: "person playing water polo: medium-dark skin tone",
            searchTerms: new string[] { "person", "playing", "water", "polo", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2125
        );

        /* ü§Ωüèø */
        public static readonly SingleEmoji PersonPlayingWaterPoloDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3ff }),
            name: "person playing water polo: dark skin tone",
            searchTerms: new string[] { "person", "playing", "water", "polo", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2126
        );

        /* ü§Ω‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingWaterPolo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing water polo",
            searchTerms: new string[] { "man", "playing", "water", "polo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2127
        );

        /* ü§Ωüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingWaterPoloLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing water polo: light skin tone",
            searchTerms: new string[] { "man", "playing", "water", "polo", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2129
        );

        /* ü§Ωüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingWaterPoloMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing water polo: medium-light skin tone",
            searchTerms: new string[] { "man", "playing", "water", "polo", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2131
        );

        /* ü§ΩüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingWaterPoloMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing water polo: medium skin tone",
            searchTerms: new string[] { "man", "playing", "water", "polo", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2133
        );

        /* ü§Ωüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingWaterPoloMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing water polo: medium-dark skin tone",
            searchTerms: new string[] { "man", "playing", "water", "polo", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2135
        );

        /* ü§Ωüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingWaterPoloDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing water polo: dark skin tone",
            searchTerms: new string[] { "man", "playing", "water", "polo", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2137
        );

        /* ü§Ω‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingWaterPolo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing water polo",
            searchTerms: new string[] { "woman", "playing", "water", "polo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2139
        );

        /* ü§Ωüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingWaterPoloLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing water polo: light skin tone",
            searchTerms: new string[] { "woman", "playing", "water", "polo", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2141
        );

        /* ü§Ωüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingWaterPoloMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing water polo: medium-light skin tone",
            searchTerms: new string[] { "woman", "playing", "water", "polo", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2143
        );

        /* ü§ΩüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingWaterPoloMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing water polo: medium skin tone",
            searchTerms: new string[] { "woman", "playing", "water", "polo", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2145
        );

        /* ü§Ωüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingWaterPoloMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing water polo: medium-dark skin tone",
            searchTerms: new string[] { "woman", "playing", "water", "polo", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2147
        );

        /* ü§Ωüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingWaterPoloDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93d, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing water polo: dark skin tone",
            searchTerms: new string[] { "woman", "playing", "water", "polo", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2149
        );

        /* ü§æ */
        public static readonly SingleEmoji PersonPlayingHandball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e }),
            name: "person playing handball",
            searchTerms: new string[] { "person", "playing", "handball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2151
        );

        /* ü§æüèª */
        public static readonly SingleEmoji PersonPlayingHandballLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fb }),
            name: "person playing handball: light skin tone",
            searchTerms: new string[] { "person", "playing", "handball", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2152
        );

        /* ü§æüèº */
        public static readonly SingleEmoji PersonPlayingHandballMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fc }),
            name: "person playing handball: medium-light skin tone",
            searchTerms: new string[] { "person", "playing", "handball", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2153
        );

        /* ü§æüèΩ */
        public static readonly SingleEmoji PersonPlayingHandballMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fd }),
            name: "person playing handball: medium skin tone",
            searchTerms: new string[] { "person", "playing", "handball", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2154
        );

        /* ü§æüèæ */
        public static readonly SingleEmoji PersonPlayingHandballMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fe }),
            name: "person playing handball: medium-dark skin tone",
            searchTerms: new string[] { "person", "playing", "handball", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2155
        );

        /* ü§æüèø */
        public static readonly SingleEmoji PersonPlayingHandballDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3ff }),
            name: "person playing handball: dark skin tone",
            searchTerms: new string[] { "person", "playing", "handball", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2156
        );

        /* ü§æ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingHandball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing handball",
            searchTerms: new string[] { "man", "playing", "handball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2157
        );

        /* ü§æüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingHandballLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing handball: light skin tone",
            searchTerms: new string[] { "man", "playing", "handball", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2159
        );

        /* ü§æüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingHandballMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing handball: medium-light skin tone",
            searchTerms: new string[] { "man", "playing", "handball", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2161
        );

        /* ü§æüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingHandballMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing handball: medium skin tone",
            searchTerms: new string[] { "man", "playing", "handball", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2163
        );

        /* ü§æüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingHandballMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing handball: medium-dark skin tone",
            searchTerms: new string[] { "man", "playing", "handball", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2165
        );

        /* ü§æüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManPlayingHandballDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man playing handball: dark skin tone",
            searchTerms: new string[] { "man", "playing", "handball", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2167
        );

        /* ü§æ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingHandball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing handball",
            searchTerms: new string[] { "woman", "playing", "handball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2169
        );

        /* ü§æüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingHandballLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing handball: light skin tone",
            searchTerms: new string[] { "woman", "playing", "handball", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2171
        );

        /* ü§æüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingHandballMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing handball: medium-light skin tone",
            searchTerms: new string[] { "woman", "playing", "handball", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2173
        );

        /* ü§æüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingHandballMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing handball: medium skin tone",
            searchTerms: new string[] { "woman", "playing", "handball", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2175
        );

        /* ü§æüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingHandballMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing handball: medium-dark skin tone",
            searchTerms: new string[] { "woman", "playing", "handball", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2177
        );

        /* ü§æüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanPlayingHandballDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93e, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman playing handball: dark skin tone",
            searchTerms: new string[] { "woman", "playing", "handball", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2179
        );

        /* ü§π */
        public static readonly SingleEmoji PersonJuggling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939 }),
            name: "person juggling",
            searchTerms: new string[] { "person", "juggling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2181
        );

        /* ü§πüèª */
        public static readonly SingleEmoji PersonJugglingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fb }),
            name: "person juggling: light skin tone",
            searchTerms: new string[] { "person", "juggling", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2182
        );

        /* ü§πüèº */
        public static readonly SingleEmoji PersonJugglingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fc }),
            name: "person juggling: medium-light skin tone",
            searchTerms: new string[] { "person", "juggling", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2183
        );

        /* ü§πüèΩ */
        public static readonly SingleEmoji PersonJugglingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fd }),
            name: "person juggling: medium skin tone",
            searchTerms: new string[] { "person", "juggling", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2184
        );

        /* ü§πüèæ */
        public static readonly SingleEmoji PersonJugglingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fe }),
            name: "person juggling: medium-dark skin tone",
            searchTerms: new string[] { "person", "juggling", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2185
        );

        /* ü§πüèø */
        public static readonly SingleEmoji PersonJugglingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3ff }),
            name: "person juggling: dark skin tone",
            searchTerms: new string[] { "person", "juggling", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2186
        );

        /* ü§π‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManJuggling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x200d, 0x2642, 0xfe0f }),
            name: "man juggling",
            searchTerms: new string[] { "man", "juggling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2187
        );

        /* ü§πüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManJugglingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man juggling: light skin tone",
            searchTerms: new string[] { "man", "juggling", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2189
        );

        /* ü§πüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManJugglingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man juggling: medium-light skin tone",
            searchTerms: new string[] { "man", "juggling", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2191
        );

        /* ü§πüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManJugglingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man juggling: medium skin tone",
            searchTerms: new string[] { "man", "juggling", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2193
        );

        /* ü§πüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManJugglingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man juggling: medium-dark skin tone",
            searchTerms: new string[] { "man", "juggling", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2195
        );

        /* ü§πüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManJugglingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man juggling: dark skin tone",
            searchTerms: new string[] { "man", "juggling", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2197
        );

        /* ü§π‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanJuggling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x200d, 0x2640, 0xfe0f }),
            name: "woman juggling",
            searchTerms: new string[] { "woman", "juggling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2199
        );

        /* ü§πüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanJugglingLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman juggling: light skin tone",
            searchTerms: new string[] { "woman", "juggling", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2201
        );

        /* ü§πüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanJugglingMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman juggling: medium-light skin tone",
            searchTerms: new string[] { "woman", "juggling", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2203
        );

        /* ü§πüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanJugglingMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman juggling: medium skin tone",
            searchTerms: new string[] { "woman", "juggling", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2205
        );

        /* ü§πüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanJugglingMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman juggling: medium-dark skin tone",
            searchTerms: new string[] { "woman", "juggling", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2207
        );

        /* ü§πüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanJugglingDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f939, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman juggling: dark skin tone",
            searchTerms: new string[] { "woman", "juggling", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SPORT,
            hasGlyph: true,
            sortOrder: 2209
        );

        /* üßò */
        public static readonly SingleEmoji PersonLotusPosition = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8 }),
            name: "person in lotus position",
            searchTerms: new string[] { "person", "lotus", "position" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2211
        );

        /* üßòüèª */
        public static readonly SingleEmoji PersonLotusPositionLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fb }),
            name: "person in lotus position: light skin tone",
            searchTerms: new string[] { "person", "lotus", "position", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2212
        );

        /* üßòüèº */
        public static readonly SingleEmoji PersonLotusPositionMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fc }),
            name: "person in lotus position: medium-light skin tone",
            searchTerms: new string[] { "person", "lotus", "position", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2213
        );

        /* üßòüèΩ */
        public static readonly SingleEmoji PersonLotusPositionMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fd }),
            name: "person in lotus position: medium skin tone",
            searchTerms: new string[] { "person", "lotus", "position", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2214
        );

        /* üßòüèæ */
        public static readonly SingleEmoji PersonLotusPositionMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fe }),
            name: "person in lotus position: medium-dark skin tone",
            searchTerms: new string[] { "person", "lotus", "position", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2215
        );

        /* üßòüèø */
        public static readonly SingleEmoji PersonLotusPositionDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3ff }),
            name: "person in lotus position: dark skin tone",
            searchTerms: new string[] { "person", "lotus", "position", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2216
        );

        /* üßò‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLotusPosition = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x200d, 0x2642, 0xfe0f }),
            name: "man in lotus position",
            searchTerms: new string[] { "man", "lotus", "position" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2217
        );

        /* üßòüèª‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLotusPositionLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fb, 0x200d, 0x2642, 0xfe0f }),
            name: "man in lotus position: light skin tone",
            searchTerms: new string[] { "man", "lotus", "position", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2219
        );

        /* üßòüèº‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLotusPositionMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fc, 0x200d, 0x2642, 0xfe0f }),
            name: "man in lotus position: medium-light skin tone",
            searchTerms: new string[] { "man", "lotus", "position", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2221
        );

        /* üßòüèΩ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLotusPositionMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fd, 0x200d, 0x2642, 0xfe0f }),
            name: "man in lotus position: medium skin tone",
            searchTerms: new string[] { "man", "lotus", "position", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2223
        );

        /* üßòüèæ‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLotusPositionMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fe, 0x200d, 0x2642, 0xfe0f }),
            name: "man in lotus position: medium-dark skin tone",
            searchTerms: new string[] { "man", "lotus", "position", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2225
        );

        /* üßòüèø‚Äç‚ôÇÔ∏è */
        public static readonly SingleEmoji ManLotusPositionDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3ff, 0x200d, 0x2642, 0xfe0f }),
            name: "man in lotus position: dark skin tone",
            searchTerms: new string[] { "man", "lotus", "position", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2227
        );

        /* üßò‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLotusPosition = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in lotus position",
            searchTerms: new string[] { "woman", "lotus", "position" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2229
        );

        /* üßòüèª‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLotusPositionLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fb, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in lotus position: light skin tone",
            searchTerms: new string[] { "woman", "lotus", "position", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2231
        );

        /* üßòüèº‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLotusPositionMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fc, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in lotus position: medium-light skin tone",
            searchTerms: new string[] { "woman", "lotus", "position", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2233
        );

        /* üßòüèΩ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLotusPositionMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fd, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in lotus position: medium skin tone",
            searchTerms: new string[] { "woman", "lotus", "position", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2235
        );

        /* üßòüèæ‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLotusPositionMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3fe, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in lotus position: medium-dark skin tone",
            searchTerms: new string[] { "woman", "lotus", "position", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2237
        );

        /* üßòüèø‚Äç‚ôÄÔ∏è */
        public static readonly SingleEmoji WomanLotusPositionDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d8, 0x1f3ff, 0x200d, 0x2640, 0xfe0f }),
            name: "woman in lotus position: dark skin tone",
            searchTerms: new string[] { "woman", "lotus", "position", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2239
        );

        /* üõÄ */
        public static readonly SingleEmoji PersonTakingBath = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c0 }),
            name: "person taking bath",
            searchTerms: new string[] { "person", "taking", "bath" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2241
        );

        /* üõÄüèª */
        public static readonly SingleEmoji PersonTakingBathLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c0, 0x1f3fb }),
            name: "person taking bath: light skin tone",
            searchTerms: new string[] { "person", "taking", "bath", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2242
        );

        /* üõÄüèº */
        public static readonly SingleEmoji PersonTakingBathMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c0, 0x1f3fc }),
            name: "person taking bath: medium-light skin tone",
            searchTerms: new string[] { "person", "taking", "bath", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2243
        );

        /* üõÄüèΩ */
        public static readonly SingleEmoji PersonTakingBathMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c0, 0x1f3fd }),
            name: "person taking bath: medium skin tone",
            searchTerms: new string[] { "person", "taking", "bath", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2244
        );

        /* üõÄüèæ */
        public static readonly SingleEmoji PersonTakingBathMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c0, 0x1f3fe }),
            name: "person taking bath: medium-dark skin tone",
            searchTerms: new string[] { "person", "taking", "bath", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2245
        );

        /* üõÄüèø */
        public static readonly SingleEmoji PersonTakingBathDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c0, 0x1f3ff }),
            name: "person taking bath: dark skin tone",
            searchTerms: new string[] { "person", "taking", "bath", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2246
        );

        /* üõå */
        public static readonly SingleEmoji PersonBed = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6cc }),
            name: "person in bed",
            searchTerms: new string[] { "person", "bed" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2247
        );

        /* üõåüèª */
        public static readonly SingleEmoji PersonBedLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6cc, 0x1f3fb }),
            name: "person in bed: light skin tone",
            searchTerms: new string[] { "person", "bed", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2248
        );

        /* üõåüèº */
        public static readonly SingleEmoji PersonBedMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6cc, 0x1f3fc }),
            name: "person in bed: medium-light skin tone",
            searchTerms: new string[] { "person", "bed", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2249
        );

        /* üõåüèΩ */
        public static readonly SingleEmoji PersonBedMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6cc, 0x1f3fd }),
            name: "person in bed: medium skin tone",
            searchTerms: new string[] { "person", "bed", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2250
        );

        /* üõåüèæ */
        public static readonly SingleEmoji PersonBedMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6cc, 0x1f3fe }),
            name: "person in bed: medium-dark skin tone",
            searchTerms: new string[] { "person", "bed", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2251
        );

        /* üõåüèø */
        public static readonly SingleEmoji PersonBedDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6cc, 0x1f3ff }),
            name: "person in bed: dark skin tone",
            searchTerms: new string[] { "person", "bed", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_RESTING,
            hasGlyph: true,
            sortOrder: 2252
        );

        /* üßë‚Äçü§ù‚Äçüßë */
        public static readonly SingleEmoji PeopleHoldingHands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x200d, 0x1f91d, 0x200d, 0x1f9d1 }),
            name: "people holding hands",
            searchTerms: new string[] { "people", "holding", "hands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2253
        );

        /* üßëüèª‚Äçü§ù‚Äçüßëüèª */
        public static readonly SingleEmoji PeopleHoldingHandsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fb, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fb }),
            name: "people holding hands: light skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2254
        );

        /* üßëüèº‚Äçü§ù‚Äçüßëüèª */
        public static readonly SingleEmoji PeopleHoldingHandsMediumLightSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fc, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fb }),
            name: "people holding hands: medium-light skin tone, light skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "medium", "light", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2255
        );

        /* üßëüèº‚Äçü§ù‚Äçüßëüèº */
        public static readonly SingleEmoji PeopleHoldingHandsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fc, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fc }),
            name: "people holding hands: medium-light skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2256
        );

        /* üßëüèΩ‚Äçü§ù‚Äçüßëüèª */
        public static readonly SingleEmoji PeopleHoldingHandsMediumSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fb }),
            name: "people holding hands: medium skin tone, light skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "medium", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2257
        );

        /* üßëüèΩ‚Äçü§ù‚Äçüßëüèº */
        public static readonly SingleEmoji PeopleHoldingHandsMediumSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fc }),
            name: "people holding hands: medium skin tone, medium-light skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "medium", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2258
        );

        /* üßëüèΩ‚Äçü§ù‚ÄçüßëüèΩ */
        public static readonly SingleEmoji PeopleHoldingHandsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fd }),
            name: "people holding hands: medium skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2259
        );

        /* üßëüèæ‚Äçü§ù‚Äçüßëüèª */
        public static readonly SingleEmoji PeopleHoldingHandsMediumDarkSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fb }),
            name: "people holding hands: medium-dark skin tone, light skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "medium", "dark", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2260
        );

        /* üßëüèæ‚Äçü§ù‚Äçüßëüèº */
        public static readonly SingleEmoji PeopleHoldingHandsMediumDarkSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fc }),
            name: "people holding hands: medium-dark skin tone, medium-light skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "medium", "dark", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2261
        );

        /* üßëüèæ‚Äçü§ù‚ÄçüßëüèΩ */
        public static readonly SingleEmoji PeopleHoldingHandsMediumDarkSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fd }),
            name: "people holding hands: medium-dark skin tone, medium skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "medium", "dark", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2262
        );

        /* üßëüèæ‚Äçü§ù‚Äçüßëüèæ */
        public static readonly SingleEmoji PeopleHoldingHandsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fe }),
            name: "people holding hands: medium-dark skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2263
        );

        /* üßëüèø‚Äçü§ù‚Äçüßëüèª */
        public static readonly SingleEmoji PeopleHoldingHandsDarkSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fb }),
            name: "people holding hands: dark skin tone, light skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "dark", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2264
        );

        /* üßëüèø‚Äçü§ù‚Äçüßëüèº */
        public static readonly SingleEmoji PeopleHoldingHandsDarkSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fc }),
            name: "people holding hands: dark skin tone, medium-light skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "dark", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2265
        );

        /* üßëüèø‚Äçü§ù‚ÄçüßëüèΩ */
        public static readonly SingleEmoji PeopleHoldingHandsDarkSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fd }),
            name: "people holding hands: dark skin tone, medium skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "dark", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2266
        );

        /* üßëüèø‚Äçü§ù‚Äçüßëüèæ */
        public static readonly SingleEmoji PeopleHoldingHandsDarkSkinToneMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3fe }),
            name: "people holding hands: dark skin tone, medium-dark skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "dark", "skin", "tone", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2267
        );

        /* üßëüèø‚Äçü§ù‚Äçüßëüèø */
        public static readonly SingleEmoji PeopleHoldingHandsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9d1, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f9d1, 0x1f3ff }),
            name: "people holding hands: dark skin tone",
            searchTerms: new string[] { "people", "holding", "hands", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2268
        );

        /* üë≠ */
        public static readonly SingleEmoji WomenHoldingHands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46d }),
            name: "women holding hands",
            searchTerms: new string[] { "women", "holding", "hands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2269
        );

        /* üë≠üèª */
        public static readonly SingleEmoji WomenHoldingHandsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46d, 0x1f3fb }),
            name: "women holding hands: light skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2270
        );

        /* üë©üèº‚Äçü§ù‚Äçüë©üèª */
        public static readonly SingleEmoji WomenHoldingHandsMediumLightSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fb }),
            name: "women holding hands: medium-light skin tone, light skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "medium", "light", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2271
        );

        /* üë≠üèº */
        public static readonly SingleEmoji WomenHoldingHandsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46d, 0x1f3fc }),
            name: "women holding hands: medium-light skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2272
        );

        /* üë©üèΩ‚Äçü§ù‚Äçüë©üèª */
        public static readonly SingleEmoji WomenHoldingHandsMediumSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fb }),
            name: "women holding hands: medium skin tone, light skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "medium", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2273
        );

        /* üë©üèΩ‚Äçü§ù‚Äçüë©üèº */
        public static readonly SingleEmoji WomenHoldingHandsMediumSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fc }),
            name: "women holding hands: medium skin tone, medium-light skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "medium", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2274
        );

        /* üë≠üèΩ */
        public static readonly SingleEmoji WomenHoldingHandsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46d, 0x1f3fd }),
            name: "women holding hands: medium skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2275
        );

        /* üë©üèæ‚Äçü§ù‚Äçüë©üèª */
        public static readonly SingleEmoji WomenHoldingHandsMediumDarkSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fb }),
            name: "women holding hands: medium-dark skin tone, light skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "medium", "dark", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2276
        );

        /* üë©üèæ‚Äçü§ù‚Äçüë©üèº */
        public static readonly SingleEmoji WomenHoldingHandsMediumDarkSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fc }),
            name: "women holding hands: medium-dark skin tone, medium-light skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "medium", "dark", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2277
        );

        /* üë©üèæ‚Äçü§ù‚Äçüë©üèΩ */
        public static readonly SingleEmoji WomenHoldingHandsMediumDarkSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fd }),
            name: "women holding hands: medium-dark skin tone, medium skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "medium", "dark", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2278
        );

        /* üë≠üèæ */
        public static readonly SingleEmoji WomenHoldingHandsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46d, 0x1f3fe }),
            name: "women holding hands: medium-dark skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2279
        );

        /* üë©üèø‚Äçü§ù‚Äçüë©üèª */
        public static readonly SingleEmoji WomenHoldingHandsDarkSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fb }),
            name: "women holding hands: dark skin tone, light skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "dark", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2280
        );

        /* üë©üèø‚Äçü§ù‚Äçüë©üèº */
        public static readonly SingleEmoji WomenHoldingHandsDarkSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fc }),
            name: "women holding hands: dark skin tone, medium-light skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "dark", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2281
        );

        /* üë©üèø‚Äçü§ù‚Äçüë©üèΩ */
        public static readonly SingleEmoji WomenHoldingHandsDarkSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fd }),
            name: "women holding hands: dark skin tone, medium skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "dark", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2282
        );

        /* üë©üèø‚Äçü§ù‚Äçüë©üèæ */
        public static readonly SingleEmoji WomenHoldingHandsDarkSkinToneMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f469, 0x1f3fe }),
            name: "women holding hands: dark skin tone, medium-dark skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "dark", "skin", "tone", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2283
        );

        /* üë≠üèø */
        public static readonly SingleEmoji WomenHoldingHandsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46d, 0x1f3ff }),
            name: "women holding hands: dark skin tone",
            searchTerms: new string[] { "women", "holding", "hands", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2284
        );

        /* üë´ */
        public static readonly SingleEmoji WomanManHoldingHands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46b }),
            name: "woman and man holding hands",
            searchTerms: new string[] { "woman", "man", "holding", "hands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2285
        );

        /* üë´üèª */
        public static readonly SingleEmoji WomanManHoldingHandsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46b, 0x1f3fb }),
            name: "woman and man holding hands: light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2286
        );

        /* üë©üèª‚Äçü§ù‚Äçüë®üèº */
        public static readonly SingleEmoji WomanManHoldingHandsLightSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fc }),
            name: "woman and man holding hands: light skin tone, medium-light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "light", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2287
        );

        /* üë©üèª‚Äçü§ù‚Äçüë®üèΩ */
        public static readonly SingleEmoji WomanManHoldingHandsLightSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fd }),
            name: "woman and man holding hands: light skin tone, medium skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "light", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2288
        );

        /* üë©üèª‚Äçü§ù‚Äçüë®üèæ */
        public static readonly SingleEmoji WomanManHoldingHandsLightSkinToneMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fe }),
            name: "woman and man holding hands: light skin tone, medium-dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "light", "skin", "tone", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light, SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2289
        );

        /* üë©üèª‚Äçü§ù‚Äçüë®üèø */
        public static readonly SingleEmoji WomanManHoldingHandsLightSkinToneDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fb, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3ff }),
            name: "woman and man holding hands: light skin tone, dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "light", "skin", "tone", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light, SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2290
        );

        /* üë©üèº‚Äçü§ù‚Äçüë®üèª */
        public static readonly SingleEmoji WomanManHoldingHandsMediumLightSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fb }),
            name: "woman and man holding hands: medium-light skin tone, light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "light", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2291
        );

        /* üë´üèº */
        public static readonly SingleEmoji WomanManHoldingHandsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46b, 0x1f3fc }),
            name: "woman and man holding hands: medium-light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2292
        );

        /* üë©üèº‚Äçü§ù‚Äçüë®üèΩ */
        public static readonly SingleEmoji WomanManHoldingHandsMediumLightSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fd }),
            name: "woman and man holding hands: medium-light skin tone, medium skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "light", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2293
        );

        /* üë©üèº‚Äçü§ù‚Äçüë®üèæ */
        public static readonly SingleEmoji WomanManHoldingHandsMediumLightSkinToneMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fe }),
            name: "woman and man holding hands: medium-light skin tone, medium-dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "light", "skin", "tone", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight, SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2294
        );

        /* üë©üèº‚Äçü§ù‚Äçüë®üèø */
        public static readonly SingleEmoji WomanManHoldingHandsMediumLightSkinToneDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fc, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3ff }),
            name: "woman and man holding hands: medium-light skin tone, dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "light", "skin", "tone", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight, SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2295
        );

        /* üë©üèΩ‚Äçü§ù‚Äçüë®üèª */
        public static readonly SingleEmoji WomanManHoldingHandsMediumSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fb }),
            name: "woman and man holding hands: medium skin tone, light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2296
        );

        /* üë©üèΩ‚Äçü§ù‚Äçüë®üèº */
        public static readonly SingleEmoji WomanManHoldingHandsMediumSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fc }),
            name: "woman and man holding hands: medium skin tone, medium-light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2297
        );

        /* üë´üèΩ */
        public static readonly SingleEmoji WomanManHoldingHandsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46b, 0x1f3fd }),
            name: "woman and man holding hands: medium skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2298
        );

        /* üë©üèΩ‚Äçü§ù‚Äçüë®üèæ */
        public static readonly SingleEmoji WomanManHoldingHandsMediumSkinToneMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fe }),
            name: "woman and man holding hands: medium skin tone, medium-dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "skin", "tone", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2299
        );

        /* üë©üèΩ‚Äçü§ù‚Äçüë®üèø */
        public static readonly SingleEmoji WomanManHoldingHandsMediumSkinToneDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3ff }),
            name: "woman and man holding hands: medium skin tone, dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "skin", "tone", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2300
        );

        /* üë©üèæ‚Äçü§ù‚Äçüë®üèª */
        public static readonly SingleEmoji WomanManHoldingHandsMediumDarkSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fb }),
            name: "woman and man holding hands: medium-dark skin tone, light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "dark", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2301
        );

        /* üë©üèæ‚Äçü§ù‚Äçüë®üèº */
        public static readonly SingleEmoji WomanManHoldingHandsMediumDarkSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fc }),
            name: "woman and man holding hands: medium-dark skin tone, medium-light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "dark", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2302
        );

        /* üë©üèæ‚Äçü§ù‚Äçüë®üèΩ */
        public static readonly SingleEmoji WomanManHoldingHandsMediumDarkSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fd }),
            name: "woman and man holding hands: medium-dark skin tone, medium skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "dark", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2303
        );

        /* üë´üèæ */
        public static readonly SingleEmoji WomanManHoldingHandsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46b, 0x1f3fe }),
            name: "woman and man holding hands: medium-dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2304
        );

        /* üë©üèæ‚Äçü§ù‚Äçüë®üèø */
        public static readonly SingleEmoji WomanManHoldingHandsMediumDarkSkinToneDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3ff }),
            name: "woman and man holding hands: medium-dark skin tone, dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "medium", "dark", "skin", "tone", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2305
        );

        /* üë©üèø‚Äçü§ù‚Äçüë®üèª */
        public static readonly SingleEmoji WomanManHoldingHandsDarkSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fb }),
            name: "woman and man holding hands: dark skin tone, light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "dark", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2306
        );

        /* üë©üèø‚Äçü§ù‚Äçüë®üèº */
        public static readonly SingleEmoji WomanManHoldingHandsDarkSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fc }),
            name: "woman and man holding hands: dark skin tone, medium-light skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "dark", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2307
        );

        /* üë©üèø‚Äçü§ù‚Äçüë®üèΩ */
        public static readonly SingleEmoji WomanManHoldingHandsDarkSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fd }),
            name: "woman and man holding hands: dark skin tone, medium skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "dark", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2308
        );

        /* üë©üèø‚Äçü§ù‚Äçüë®üèæ */
        public static readonly SingleEmoji WomanManHoldingHandsDarkSkinToneMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fe }),
            name: "woman and man holding hands: dark skin tone, medium-dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "dark", "skin", "tone", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2309
        );

        /* üë´üèø */
        public static readonly SingleEmoji WomanManHoldingHandsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46b, 0x1f3ff }),
            name: "woman and man holding hands: dark skin tone",
            searchTerms: new string[] { "woman", "man", "holding", "hands", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2310
        );

        /* üë¨ */
        public static readonly SingleEmoji MenHoldingHands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46c }),
            name: "men holding hands",
            searchTerms: new string[] { "men", "holding", "hands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2311
        );

        /* üë¨üèª */
        public static readonly SingleEmoji MenHoldingHandsLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46c, 0x1f3fb }),
            name: "men holding hands: light skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2312
        );

        /* üë®üèº‚Äçü§ù‚Äçüë®üèª */
        public static readonly SingleEmoji MenHoldingHandsMediumLightSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fc, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fb }),
            name: "men holding hands: medium-light skin tone, light skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "medium", "light", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2313
        );

        /* üë¨üèº */
        public static readonly SingleEmoji MenHoldingHandsMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46c, 0x1f3fc }),
            name: "men holding hands: medium-light skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2314
        );

        /* üë®üèΩ‚Äçü§ù‚Äçüë®üèª */
        public static readonly SingleEmoji MenHoldingHandsMediumSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fb }),
            name: "men holding hands: medium skin tone, light skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "medium", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2315
        );

        /* üë®üèΩ‚Äçü§ù‚Äçüë®üèº */
        public static readonly SingleEmoji MenHoldingHandsMediumSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fd, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fc }),
            name: "men holding hands: medium skin tone, medium-light skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "medium", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2316
        );

        /* üë¨üèΩ */
        public static readonly SingleEmoji MenHoldingHandsMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46c, 0x1f3fd }),
            name: "men holding hands: medium skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2317
        );

        /* üë®üèæ‚Äçü§ù‚Äçüë®üèª */
        public static readonly SingleEmoji MenHoldingHandsMediumDarkSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fb }),
            name: "men holding hands: medium-dark skin tone, light skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "medium", "dark", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2318
        );

        /* üë®üèæ‚Äçü§ù‚Äçüë®üèº */
        public static readonly SingleEmoji MenHoldingHandsMediumDarkSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fc }),
            name: "men holding hands: medium-dark skin tone, medium-light skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "medium", "dark", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2319
        );

        /* üë®üèæ‚Äçü§ù‚Äçüë®üèΩ */
        public static readonly SingleEmoji MenHoldingHandsMediumDarkSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3fe, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fd }),
            name: "men holding hands: medium-dark skin tone, medium skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "medium", "dark", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2320
        );

        /* üë¨üèæ */
        public static readonly SingleEmoji MenHoldingHandsMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46c, 0x1f3fe }),
            name: "men holding hands: medium-dark skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2321
        );

        /* üë®üèø‚Äçü§ù‚Äçüë®üèª */
        public static readonly SingleEmoji MenHoldingHandsDarkSkinToneLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fb }),
            name: "men holding hands: dark skin tone, light skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "dark", "skin", "tone", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.Light },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2322
        );

        /* üë®üèø‚Äçü§ù‚Äçüë®üèº */
        public static readonly SingleEmoji MenHoldingHandsDarkSkinToneMediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fc }),
            name: "men holding hands: dark skin tone, medium-light skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "dark", "skin", "tone", "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.MediumLight },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2323
        );

        /* üë®üèø‚Äçü§ù‚Äçüë®üèΩ */
        public static readonly SingleEmoji MenHoldingHandsDarkSkinToneMediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fd }),
            name: "men holding hands: dark skin tone, medium skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "dark", "skin", "tone", "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.Medium },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2324
        );

        /* üë®üèø‚Äçü§ù‚Äçüë®üèæ */
        public static readonly SingleEmoji MenHoldingHandsDarkSkinToneMediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x1f3ff, 0x200d, 0x1f91d, 0x200d, 0x1f468, 0x1f3fe }),
            name: "men holding hands: dark skin tone, medium-dark skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "dark", "skin", "tone", "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark, SkinTones.MediumDark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2325
        );

        /* üë¨üèø */
        public static readonly SingleEmoji MenHoldingHandsDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46c, 0x1f3ff }),
            name: "men holding hands: dark skin tone",
            searchTerms: new string[] { "men", "holding", "hands", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2326
        );

        /* üíè */
        public static readonly SingleEmoji Kiss = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f48f }),
            name: "kiss",
            searchTerms: new string[] { "kiss" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2327
        );

        /* üë©‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë® */
        public static readonly SingleEmoji KissWomanMan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x2764, 0xfe0f, 0x200d, 0x1f48b, 0x200d, 0x1f468 }),
            name: "kiss: woman, man",
            searchTerms: new string[] { "kiss", "woman", "man" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: false,
            sortOrder: 2328
        );

        /* üë®‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë® */
        public static readonly SingleEmoji KissManMan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x2764, 0xfe0f, 0x200d, 0x1f48b, 0x200d, 0x1f468 }),
            name: "kiss: man, man",
            searchTerms: new string[] { "kiss", "man", "man" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: false,
            sortOrder: 2330
        );

        /* üë©‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë© */
        public static readonly SingleEmoji KissWomanWoman = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x2764, 0xfe0f, 0x200d, 0x1f48b, 0x200d, 0x1f469 }),
            name: "kiss: woman, woman",
            searchTerms: new string[] { "kiss", "woman", "woman" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: false,
            sortOrder: 2332
        );

        /* üíë */
        public static readonly SingleEmoji CoupleHeart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f491 }),
            name: "couple with heart",
            searchTerms: new string[] { "couple", "heart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2334
        );

        /* üë©‚Äç‚ù§Ô∏è‚Äçüë® */
        public static readonly SingleEmoji CoupleHeartWomanMan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x2764, 0xfe0f, 0x200d, 0x1f468 }),
            name: "couple with heart: woman, man",
            searchTerms: new string[] { "couple", "heart", "woman", "man" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: false,
            sortOrder: 2335
        );

        /* üë®‚Äç‚ù§Ô∏è‚Äçüë® */
        public static readonly SingleEmoji CoupleHeartManMan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x2764, 0xfe0f, 0x200d, 0x1f468 }),
            name: "couple with heart: man, man",
            searchTerms: new string[] { "couple", "heart", "man", "man" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: false,
            sortOrder: 2337
        );

        /* üë©‚Äç‚ù§Ô∏è‚Äçüë© */
        public static readonly SingleEmoji CoupleHeartWomanWoman = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x2764, 0xfe0f, 0x200d, 0x1f469 }),
            name: "couple with heart: woman, woman",
            searchTerms: new string[] { "couple", "heart", "woman", "woman" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: false,
            sortOrder: 2339
        );

        /* üë™ */
        public static readonly SingleEmoji Family = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f46a }),
            name: "family",
            searchTerms: new string[] { "family" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2341
        );

        /* üë®‚Äçüë©‚Äçüë¶ */
        public static readonly SingleEmoji FamilyManWomanBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f469, 0x200d, 0x1f466 }),
            name: "family: man, woman, boy",
            searchTerms: new string[] { "family", "man", "woman", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2342
        );

        /* üë®‚Äçüë©‚Äçüëß */
        public static readonly SingleEmoji FamilyManWomanGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f469, 0x200d, 0x1f467 }),
            name: "family: man, woman, girl",
            searchTerms: new string[] { "family", "man", "woman", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2343
        );

        /* üë®‚Äçüë©‚Äçüëß‚Äçüë¶ */
        public static readonly SingleEmoji FamilyManWomanGirlBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f469, 0x200d, 0x1f467, 0x200d, 0x1f466 }),
            name: "family: man, woman, girl, boy",
            searchTerms: new string[] { "family", "man", "woman", "girl", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2344
        );

        /* üë®‚Äçüë©‚Äçüë¶‚Äçüë¶ */
        public static readonly SingleEmoji FamilyManWomanBoyBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f469, 0x200d, 0x1f466, 0x200d, 0x1f466 }),
            name: "family: man, woman, boy, boy",
            searchTerms: new string[] { "family", "man", "woman", "boy", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2345
        );

        /* üë®‚Äçüë©‚Äçüëß‚Äçüëß */
        public static readonly SingleEmoji FamilyManWomanGirlGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f469, 0x200d, 0x1f467, 0x200d, 0x1f467 }),
            name: "family: man, woman, girl, girl",
            searchTerms: new string[] { "family", "man", "woman", "girl", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2346
        );

        /* üë®‚Äçüë®‚Äçüë¶ */
        public static readonly SingleEmoji FamilyManManBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f468, 0x200d, 0x1f466 }),
            name: "family: man, man, boy",
            searchTerms: new string[] { "family", "man", "man", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2347
        );

        /* üë®‚Äçüë®‚Äçüëß */
        public static readonly SingleEmoji FamilyManManGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f468, 0x200d, 0x1f467 }),
            name: "family: man, man, girl",
            searchTerms: new string[] { "family", "man", "man", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2348
        );

        /* üë®‚Äçüë®‚Äçüëß‚Äçüë¶ */
        public static readonly SingleEmoji FamilyManManGirlBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f468, 0x200d, 0x1f467, 0x200d, 0x1f466 }),
            name: "family: man, man, girl, boy",
            searchTerms: new string[] { "family", "man", "man", "girl", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2349
        );

        /* üë®‚Äçüë®‚Äçüë¶‚Äçüë¶ */
        public static readonly SingleEmoji FamilyManManBoyBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f468, 0x200d, 0x1f466, 0x200d, 0x1f466 }),
            name: "family: man, man, boy, boy",
            searchTerms: new string[] { "family", "man", "man", "boy", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2350
        );

        /* üë®‚Äçüë®‚Äçüëß‚Äçüëß */
        public static readonly SingleEmoji FamilyManManGirlGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f468, 0x200d, 0x1f467, 0x200d, 0x1f467 }),
            name: "family: man, man, girl, girl",
            searchTerms: new string[] { "family", "man", "man", "girl", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2351
        );

        /* üë©‚Äçüë©‚Äçüë¶ */
        public static readonly SingleEmoji FamilyWomanWomanBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f469, 0x200d, 0x1f466 }),
            name: "family: woman, woman, boy",
            searchTerms: new string[] { "family", "woman", "woman", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2352
        );

        /* üë©‚Äçüë©‚Äçüëß */
        public static readonly SingleEmoji FamilyWomanWomanGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f469, 0x200d, 0x1f467 }),
            name: "family: woman, woman, girl",
            searchTerms: new string[] { "family", "woman", "woman", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2353
        );

        /* üë©‚Äçüë©‚Äçüëß‚Äçüë¶ */
        public static readonly SingleEmoji FamilyWomanWomanGirlBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f469, 0x200d, 0x1f467, 0x200d, 0x1f466 }),
            name: "family: woman, woman, girl, boy",
            searchTerms: new string[] { "family", "woman", "woman", "girl", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2354
        );

        /* üë©‚Äçüë©‚Äçüë¶‚Äçüë¶ */
        public static readonly SingleEmoji FamilyWomanWomanBoyBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f469, 0x200d, 0x1f466, 0x200d, 0x1f466 }),
            name: "family: woman, woman, boy, boy",
            searchTerms: new string[] { "family", "woman", "woman", "boy", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2355
        );

        /* üë©‚Äçüë©‚Äçüëß‚Äçüëß */
        public static readonly SingleEmoji FamilyWomanWomanGirlGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f469, 0x200d, 0x1f467, 0x200d, 0x1f467 }),
            name: "family: woman, woman, girl, girl",
            searchTerms: new string[] { "family", "woman", "woman", "girl", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2356
        );

        /* üë®‚Äçüë¶ */
        public static readonly SingleEmoji FamilyManBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f466 }),
            name: "family: man, boy",
            searchTerms: new string[] { "family", "man", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2357
        );

        /* üë®‚Äçüë¶‚Äçüë¶ */
        public static readonly SingleEmoji FamilyManBoyBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f466, 0x200d, 0x1f466 }),
            name: "family: man, boy, boy",
            searchTerms: new string[] { "family", "man", "boy", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2358
        );

        /* üë®‚Äçüëß */
        public static readonly SingleEmoji FamilyManGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f467 }),
            name: "family: man, girl",
            searchTerms: new string[] { "family", "man", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2359
        );

        /* üë®‚Äçüëß‚Äçüë¶ */
        public static readonly SingleEmoji FamilyManGirlBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f467, 0x200d, 0x1f466 }),
            name: "family: man, girl, boy",
            searchTerms: new string[] { "family", "man", "girl", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2360
        );

        /* üë®‚Äçüëß‚Äçüëß */
        public static readonly SingleEmoji FamilyManGirlGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f468, 0x200d, 0x1f467, 0x200d, 0x1f467 }),
            name: "family: man, girl, girl",
            searchTerms: new string[] { "family", "man", "girl", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2361
        );

        /* üë©‚Äçüë¶ */
        public static readonly SingleEmoji FamilyWomanBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f466 }),
            name: "family: woman, boy",
            searchTerms: new string[] { "family", "woman", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2362
        );

        /* üë©‚Äçüë¶‚Äçüë¶ */
        public static readonly SingleEmoji FamilyWomanBoyBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f466, 0x200d, 0x1f466 }),
            name: "family: woman, boy, boy",
            searchTerms: new string[] { "family", "woman", "boy", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2363
        );

        /* üë©‚Äçüëß */
        public static readonly SingleEmoji FamilyWomanGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f467 }),
            name: "family: woman, girl",
            searchTerms: new string[] { "family", "woman", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2364
        );

        /* üë©‚Äçüëß‚Äçüë¶ */
        public static readonly SingleEmoji FamilyWomanGirlBoy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f467, 0x200d, 0x1f466 }),
            name: "family: woman, girl, boy",
            searchTerms: new string[] { "family", "woman", "girl", "boy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2365
        );

        /* üë©‚Äçüëß‚Äçüëß */
        public static readonly SingleEmoji FamilyWomanGirlGirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f469, 0x200d, 0x1f467, 0x200d, 0x1f467 }),
            name: "family: woman, girl, girl",
            searchTerms: new string[] { "family", "woman", "girl", "girl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.FAMILY,
            hasGlyph: true,
            sortOrder: 2366
        );

        /* üó£Ô∏è */
        public static readonly SingleEmoji SpeakingHead = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5e3, 0xfe0f }),
            name: "speaking head",
            searchTerms: new string[] { "speaking", "head" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SYMBOL,
            hasGlyph: true,
            sortOrder: 2367
        );

        /* üë§ */
        public static readonly SingleEmoji BustSilhouette = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f464 }),
            name: "bust in silhouette",
            searchTerms: new string[] { "bust", "silhouette" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SYMBOL,
            hasGlyph: true,
            sortOrder: 2369
        );

        /* üë• */
        public static readonly SingleEmoji BustsSilhouette = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f465 }),
            name: "busts in silhouette",
            searchTerms: new string[] { "busts", "silhouette" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SYMBOL,
            hasGlyph: true,
            sortOrder: 2370
        );

        /* üë£ */
        public static readonly SingleEmoji Footprints = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f463 }),
            name: "footprints",
            searchTerms: new string[] { "footprints" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.PEOPLE_AND_BODY,
            subgroup: Subgroups.PERSON_SYMBOL,
            hasGlyph: true,
            sortOrder: 2371
        );

        /* üèª */
        public static readonly SingleEmoji LightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3fb }),
            name: "light skin tone",
            searchTerms: new string[] { "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Light },
            group: Group.COMPONENT,
            subgroup: Subgroups.SKIN_TONE,
            hasGlyph: true,
            sortOrder: 2372
        );

        /* üèº */
        public static readonly SingleEmoji MediumLightSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3fc }),
            name: "medium-light skin tone",
            searchTerms: new string[] { "medium", "light", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumLight },
            group: Group.COMPONENT,
            subgroup: Subgroups.SKIN_TONE,
            hasGlyph: true,
            sortOrder: 2373
        );

        /* üèΩ */
        public static readonly SingleEmoji MediumSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3fd }),
            name: "medium skin tone",
            searchTerms: new string[] { "medium", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Medium },
            group: Group.COMPONENT,
            subgroup: Subgroups.SKIN_TONE,
            hasGlyph: true,
            sortOrder: 2374
        );

        /* üèæ */
        public static readonly SingleEmoji MediumDarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3fe }),
            name: "medium-dark skin tone",
            searchTerms: new string[] { "medium", "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.MediumDark },
            group: Group.COMPONENT,
            subgroup: Subgroups.SKIN_TONE,
            hasGlyph: true,
            sortOrder: 2375
        );

        /* üèø */
        public static readonly SingleEmoji DarkSkinTone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ff }),
            name: "dark skin tone",
            searchTerms: new string[] { "dark", "skin", "tone" },
            skinTones: new Codepoint[] { SkinTones.Dark },
            group: Group.COMPONENT,
            subgroup: Subgroups.SKIN_TONE,
            hasGlyph: true,
            sortOrder: 2376
        );

        /* ü¶∞ */
        public static readonly SingleEmoji RedHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b0 }),
            name: "red hair",
            searchTerms: new string[] { "red", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.COMPONENT,
            subgroup: Subgroups.HAIR_STYLE,
            hasGlyph: true,
            sortOrder: 2377
        );

        /* ü¶± */
        public static readonly SingleEmoji CurlyHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b1 }),
            name: "curly hair",
            searchTerms: new string[] { "curly", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.COMPONENT,
            subgroup: Subgroups.HAIR_STYLE,
            hasGlyph: true,
            sortOrder: 2378
        );

        /* ü¶≥ */
        public static readonly SingleEmoji WhiteHair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b3 }),
            name: "white hair",
            searchTerms: new string[] { "white", "hair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.COMPONENT,
            subgroup: Subgroups.HAIR_STYLE,
            hasGlyph: true,
            sortOrder: 2379
        );

        /* ü¶≤ */
        public static readonly SingleEmoji Bald = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9b2 }),
            name: "bald",
            searchTerms: new string[] { "bald" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.COMPONENT,
            subgroup: Subgroups.HAIR_STYLE,
            hasGlyph: true,
            sortOrder: 2380
        );

        /* üê±‚Äçüë§ */
        public static readonly SingleEmoji NinjaCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f431, 0x200d, 0x1f464 }),
            name: "ninja cat",
            searchTerms: new string[] { "ninja", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.WINDOWS_NINJA_CAT,
            hasGlyph: true,
            sortOrder: 2381
        );

        /* üê±‚Äçüëì */
        public static readonly SingleEmoji HipsterCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f431, 0x200d, 0x1f453 }),
            name: "hipster cat",
            searchTerms: new string[] { "hipster", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.WINDOWS_NINJA_CAT,
            hasGlyph: true,
            sortOrder: 2382
        );

        /* üê±‚Äçüíª */
        public static readonly SingleEmoji HackerCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f431, 0x200d, 0x1f4bb }),
            name: "hacker cat",
            searchTerms: new string[] { "hacker", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.WINDOWS_NINJA_CAT,
            hasGlyph: true,
            sortOrder: 2383
        );

        /* üê±‚Äçüêâ */
        public static readonly SingleEmoji DinoCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f431, 0x200d, 0x1f409 }),
            name: "dino cat",
            searchTerms: new string[] { "dino", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.WINDOWS_NINJA_CAT,
            hasGlyph: true,
            sortOrder: 2384
        );

        /* üê±‚Äçüèç */
        public static readonly SingleEmoji StuntCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f431, 0x200d, 0x1f3cd }),
            name: "stunt cat",
            searchTerms: new string[] { "stunt", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.WINDOWS_NINJA_CAT,
            hasGlyph: true,
            sortOrder: 2385
        );

        /* üê±‚ÄçüöÄ */
        public static readonly SingleEmoji AstroCat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f431, 0x200d, 0x1f680 }),
            name: "astro cat",
            searchTerms: new string[] { "astro", "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.WINDOWS_NINJA_CAT,
            hasGlyph: true,
            sortOrder: 2386
        );

        /* üêµ */
        public static readonly SingleEmoji MonkeyFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f435 }),
            name: "monkey face",
            searchTerms: new string[] { "monkey", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2387
        );

        /* üêí */
        public static readonly SingleEmoji Monkey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f412 }),
            name: "monkey",
            searchTerms: new string[] { "monkey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2388
        );

        /* ü¶ç */
        public static readonly SingleEmoji Gorilla = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f98d }),
            name: "gorilla",
            searchTerms: new string[] { "gorilla" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2389
        );

        /* ü¶ß */
        public static readonly SingleEmoji Orangutan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9a7 }),
            name: "orangutan",
            searchTerms: new string[] { "orangutan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2390
        );

        /* üê∂ */
        public static readonly SingleEmoji DogFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f436 }),
            name: "dog face",
            searchTerms: new string[] { "dog", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2391
        );

        /* üêï */
        public static readonly SingleEmoji Dog = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f415 }),
            name: "dog",
            searchTerms: new string[] { "dog" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2392
        );

        /* ü¶Æ */
        public static readonly SingleEmoji GuideDog = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ae }),
            name: "guide dog",
            searchTerms: new string[] { "guide", "dog" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2393
        );

        /* üêï‚Äçü¶∫ */
        public static readonly SingleEmoji ServiceDog = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f415, 0x200d, 0x1f9ba }),
            name: "service dog",
            searchTerms: new string[] { "service", "dog" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2394
        );

        /* üê© */
        public static readonly SingleEmoji Poodle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f429 }),
            name: "poodle",
            searchTerms: new string[] { "poodle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2395
        );

        /* üê∫ */
        public static readonly SingleEmoji Wolf = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f43a }),
            name: "wolf",
            searchTerms: new string[] { "wolf" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2396
        );

        /* ü¶ä */
        public static readonly SingleEmoji Fox = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f98a }),
            name: "fox",
            searchTerms: new string[] { "fox" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2397
        );

        /* ü¶ù */
        public static readonly SingleEmoji Raccoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f99d }),
            name: "raccoon",
            searchTerms: new string[] { "raccoon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2398
        );

        /* üê± */
        public static readonly SingleEmoji CatFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f431 }),
            name: "cat face",
            searchTerms: new string[] { "cat", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2399
        );

        /* üêà */
        public static readonly SingleEmoji Cat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f408 }),
            name: "cat",
            searchTerms: new string[] { "cat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2400
        );

        /* ü¶Å */
        public static readonly SingleEmoji Lion = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f981 }),
            name: "lion",
            searchTerms: new string[] { "lion" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2401
        );

        /* üêØ */
        public static readonly SingleEmoji TigerFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f42f }),
            name: "tiger face",
            searchTerms: new string[] { "tiger", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2402
        );

        /* üêÖ */
        public static readonly SingleEmoji Tiger = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f405 }),
            name: "tiger",
            searchTerms: new string[] { "tiger" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2403
        );

        /* üêÜ */
        public static readonly SingleEmoji Leopard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f406 }),
            name: "leopard",
            searchTerms: new string[] { "leopard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2404
        );

        /* üê¥ */
        public static readonly SingleEmoji HorseFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f434 }),
            name: "horse face",
            searchTerms: new string[] { "horse", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2405
        );

        /* üêé */
        public static readonly SingleEmoji Horse = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f40e }),
            name: "horse",
            searchTerms: new string[] { "horse" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2406
        );

        /* ü¶Ñ */
        public static readonly SingleEmoji Unicorn = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f984 }),
            name: "unicorn",
            searchTerms: new string[] { "unicorn" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2407
        );

        /* ü¶ì */
        public static readonly SingleEmoji Zebra = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f993 }),
            name: "zebra",
            searchTerms: new string[] { "zebra" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2408
        );

        /* ü¶å */
        public static readonly SingleEmoji Deer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f98c }),
            name: "deer",
            searchTerms: new string[] { "deer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2409
        );

        /* üêÆ */
        public static readonly SingleEmoji CowFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f42e }),
            name: "cow face",
            searchTerms: new string[] { "cow", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2410
        );

        /* üêÇ */
        public static readonly SingleEmoji Ox = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f402 }),
            name: "ox",
            searchTerms: new string[] { "ox" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2411
        );

        /* üêÉ */
        public static readonly SingleEmoji WaterBuffalo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f403 }),
            name: "water buffalo",
            searchTerms: new string[] { "water", "buffalo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2412
        );

        /* üêÑ */
        public static readonly SingleEmoji Cow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f404 }),
            name: "cow",
            searchTerms: new string[] { "cow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2413
        );

        /* üê∑ */
        public static readonly SingleEmoji PigFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f437 }),
            name: "pig face",
            searchTerms: new string[] { "pig", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2414
        );

        /* üêñ */
        public static readonly SingleEmoji Pig = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f416 }),
            name: "pig",
            searchTerms: new string[] { "pig" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2415
        );

        /* üêó */
        public static readonly SingleEmoji Boar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f417 }),
            name: "boar",
            searchTerms: new string[] { "boar" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2416
        );

        /* üêΩ */
        public static readonly SingleEmoji PigNose = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f43d }),
            name: "pig nose",
            searchTerms: new string[] { "pig", "nose" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2417
        );

        /* üêè */
        public static readonly SingleEmoji Ram = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f40f }),
            name: "ram",
            searchTerms: new string[] { "ram" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2418
        );

        /* üêë */
        public static readonly SingleEmoji Ewe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f411 }),
            name: "ewe",
            searchTerms: new string[] { "ewe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2419
        );

        /* üêê */
        public static readonly SingleEmoji Goat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f410 }),
            name: "goat",
            searchTerms: new string[] { "goat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2420
        );

        /* üê™ */
        public static readonly SingleEmoji Camel = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f42a }),
            name: "camel",
            searchTerms: new string[] { "camel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2421
        );

        /* üê´ */
        public static readonly SingleEmoji TwoHumpCamel = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f42b }),
            name: "two-hump camel",
            searchTerms: new string[] { "two", "hump", "camel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2422
        );

        /* ü¶ô */
        public static readonly SingleEmoji Llama = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f999 }),
            name: "llama",
            searchTerms: new string[] { "llama" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2423
        );

        /* ü¶í */
        public static readonly SingleEmoji Giraffe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f992 }),
            name: "giraffe",
            searchTerms: new string[] { "giraffe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2424
        );

        /* üêò */
        public static readonly SingleEmoji Elephant = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f418 }),
            name: "elephant",
            searchTerms: new string[] { "elephant" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2425
        );

        /* ü¶è */
        public static readonly SingleEmoji Rhinoceros = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f98f }),
            name: "rhinoceros",
            searchTerms: new string[] { "rhinoceros" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2426
        );

        /* ü¶õ */
        public static readonly SingleEmoji Hippopotamus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f99b }),
            name: "hippopotamus",
            searchTerms: new string[] { "hippopotamus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2427
        );

        /* üê≠ */
        public static readonly SingleEmoji MouseFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f42d }),
            name: "mouse face",
            searchTerms: new string[] { "mouse", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2428
        );

        /* üêÅ */
        public static readonly SingleEmoji Mouse = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f401 }),
            name: "mouse",
            searchTerms: new string[] { "mouse" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2429
        );

        /* üêÄ */
        public static readonly SingleEmoji Rat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f400 }),
            name: "rat",
            searchTerms: new string[] { "rat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2430
        );

        /* üêπ */
        public static readonly SingleEmoji Hamster = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f439 }),
            name: "hamster",
            searchTerms: new string[] { "hamster" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2431
        );

        /* üê∞ */
        public static readonly SingleEmoji RabbitFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f430 }),
            name: "rabbit face",
            searchTerms: new string[] { "rabbit", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2432
        );

        /* üêá */
        public static readonly SingleEmoji Rabbit = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f407 }),
            name: "rabbit",
            searchTerms: new string[] { "rabbit" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2433
        );

        /* üêøÔ∏è */
        public static readonly SingleEmoji Chipmunk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f43f, 0xfe0f }),
            name: "chipmunk",
            searchTerms: new string[] { "chipmunk" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2434
        );

        /* ü¶î */
        public static readonly SingleEmoji Hedgehog = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f994 }),
            name: "hedgehog",
            searchTerms: new string[] { "hedgehog" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2436
        );

        /* ü¶á */
        public static readonly SingleEmoji Bat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f987 }),
            name: "bat",
            searchTerms: new string[] { "bat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2437
        );

        /* üêª */
        public static readonly SingleEmoji Bear = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f43b }),
            name: "bear",
            searchTerms: new string[] { "bear" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2438
        );

        /* üê® */
        public static readonly SingleEmoji Koala = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f428 }),
            name: "koala",
            searchTerms: new string[] { "koala" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2439
        );

        /* üêº */
        public static readonly SingleEmoji Panda = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f43c }),
            name: "panda",
            searchTerms: new string[] { "panda" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2440
        );

        /* ü¶• */
        public static readonly SingleEmoji Sloth = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9a5 }),
            name: "sloth",
            searchTerms: new string[] { "sloth" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2441
        );

        /* ü¶¶ */
        public static readonly SingleEmoji Otter = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9a6 }),
            name: "otter",
            searchTerms: new string[] { "otter" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2442
        );

        /* ü¶® */
        public static readonly SingleEmoji Skunk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9a8 }),
            name: "skunk",
            searchTerms: new string[] { "skunk" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2443
        );

        /* ü¶ò */
        public static readonly SingleEmoji Kangaroo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f998 }),
            name: "kangaroo",
            searchTerms: new string[] { "kangaroo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2444
        );

        /* ü¶° */
        public static readonly SingleEmoji Badger = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9a1 }),
            name: "badger",
            searchTerms: new string[] { "badger" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2445
        );

        /* üêæ */
        public static readonly SingleEmoji PawPrints = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f43e }),
            name: "paw prints",
            searchTerms: new string[] { "paw", "prints" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MAMMAL,
            hasGlyph: true,
            sortOrder: 2446
        );

        /* ü¶É */
        public static readonly SingleEmoji Turkey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f983 }),
            name: "turkey",
            searchTerms: new string[] { "turkey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2447
        );

        /* üêî */
        public static readonly SingleEmoji Chicken = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f414 }),
            name: "chicken",
            searchTerms: new string[] { "chicken" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2448
        );

        /* üêì */
        public static readonly SingleEmoji Rooster = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f413 }),
            name: "rooster",
            searchTerms: new string[] { "rooster" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2449
        );

        /* üê£ */
        public static readonly SingleEmoji HatchingChick = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f423 }),
            name: "hatching chick",
            searchTerms: new string[] { "hatching", "chick" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2450
        );

        /* üê§ */
        public static readonly SingleEmoji BabyChick = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f424 }),
            name: "baby chick",
            searchTerms: new string[] { "baby", "chick" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2451
        );

        /* üê• */
        public static readonly SingleEmoji FrontFacingBabyChick = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f425 }),
            name: "front-facing baby chick",
            searchTerms: new string[] { "front", "facing", "baby", "chick" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2452
        );

        /* üê¶ */
        public static readonly SingleEmoji Bird = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f426 }),
            name: "bird",
            searchTerms: new string[] { "bird" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2453
        );

        /* üêß */
        public static readonly SingleEmoji Penguin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f427 }),
            name: "penguin",
            searchTerms: new string[] { "penguin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2454
        );

        /* üïäÔ∏è */
        public static readonly SingleEmoji Dove = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f54a, 0xfe0f }),
            name: "dove",
            searchTerms: new string[] { "dove" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2455
        );

        /* ü¶Ö */
        public static readonly SingleEmoji Eagle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f985 }),
            name: "eagle",
            searchTerms: new string[] { "eagle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2457
        );

        /* ü¶Ü */
        public static readonly SingleEmoji Duck = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f986 }),
            name: "duck",
            searchTerms: new string[] { "duck" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2458
        );

        /* ü¶¢ */
        public static readonly SingleEmoji Swan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9a2 }),
            name: "swan",
            searchTerms: new string[] { "swan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2459
        );

        /* ü¶â */
        public static readonly SingleEmoji Owl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f989 }),
            name: "owl",
            searchTerms: new string[] { "owl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2460
        );

        /* ü¶© */
        public static readonly SingleEmoji Flamingo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9a9 }),
            name: "flamingo",
            searchTerms: new string[] { "flamingo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2461
        );

        /* ü¶ö */
        public static readonly SingleEmoji Peacock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f99a }),
            name: "peacock",
            searchTerms: new string[] { "peacock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2462
        );

        /* ü¶ú */
        public static readonly SingleEmoji Parrot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f99c }),
            name: "parrot",
            searchTerms: new string[] { "parrot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BIRD,
            hasGlyph: true,
            sortOrder: 2463
        );

        /* üê∏ */
        public static readonly SingleEmoji Frog = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f438 }),
            name: "frog",
            searchTerms: new string[] { "frog" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_AMPHIBIAN,
            hasGlyph: true,
            sortOrder: 2464
        );

        /* üêä */
        public static readonly SingleEmoji Crocodile = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f40a }),
            name: "crocodile",
            searchTerms: new string[] { "crocodile" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_REPTILE,
            hasGlyph: true,
            sortOrder: 2465
        );

        /* üê¢ */
        public static readonly SingleEmoji Turtle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f422 }),
            name: "turtle",
            searchTerms: new string[] { "turtle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_REPTILE,
            hasGlyph: true,
            sortOrder: 2466
        );

        /* ü¶é */
        public static readonly SingleEmoji Lizard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f98e }),
            name: "lizard",
            searchTerms: new string[] { "lizard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_REPTILE,
            hasGlyph: true,
            sortOrder: 2467
        );

        /* üêç */
        public static readonly SingleEmoji Snake = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f40d }),
            name: "snake",
            searchTerms: new string[] { "snake" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_REPTILE,
            hasGlyph: true,
            sortOrder: 2468
        );

        /* üê≤ */
        public static readonly SingleEmoji DragonFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f432 }),
            name: "dragon face",
            searchTerms: new string[] { "dragon", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_REPTILE,
            hasGlyph: true,
            sortOrder: 2469
        );

        /* üêâ */
        public static readonly SingleEmoji Dragon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f409 }),
            name: "dragon",
            searchTerms: new string[] { "dragon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_REPTILE,
            hasGlyph: true,
            sortOrder: 2470
        );

        /* ü¶ï */
        public static readonly SingleEmoji Sauropod = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f995 }),
            name: "sauropod",
            searchTerms: new string[] { "sauropod" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_REPTILE,
            hasGlyph: true,
            sortOrder: 2471
        );

        /* ü¶ñ */
        public static readonly SingleEmoji TRex = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f996 }),
            name: "T-Rex",
            searchTerms: new string[] { "t", "rex" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_REPTILE,
            hasGlyph: true,
            sortOrder: 2472
        );

        /* üê≥ */
        public static readonly SingleEmoji SpoutingWhale = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f433 }),
            name: "spouting whale",
            searchTerms: new string[] { "spouting", "whale" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MARINE,
            hasGlyph: true,
            sortOrder: 2473
        );

        /* üêã */
        public static readonly SingleEmoji Whale = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f40b }),
            name: "whale",
            searchTerms: new string[] { "whale" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MARINE,
            hasGlyph: true,
            sortOrder: 2474
        );

        /* üê¨ */
        public static readonly SingleEmoji Dolphin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f42c }),
            name: "dolphin",
            searchTerms: new string[] { "dolphin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MARINE,
            hasGlyph: true,
            sortOrder: 2475
        );

        /* üêü */
        public static readonly SingleEmoji Fish = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f41f }),
            name: "fish",
            searchTerms: new string[] { "fish" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MARINE,
            hasGlyph: true,
            sortOrder: 2476
        );

        /* üê† */
        public static readonly SingleEmoji TropicalFish = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f420 }),
            name: "tropical fish",
            searchTerms: new string[] { "tropical", "fish" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MARINE,
            hasGlyph: true,
            sortOrder: 2477
        );

        /* üê° */
        public static readonly SingleEmoji Blowfish = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f421 }),
            name: "blowfish",
            searchTerms: new string[] { "blowfish" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MARINE,
            hasGlyph: true,
            sortOrder: 2478
        );

        /* ü¶à */
        public static readonly SingleEmoji Shark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f988 }),
            name: "shark",
            searchTerms: new string[] { "shark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MARINE,
            hasGlyph: true,
            sortOrder: 2479
        );

        /* üêô */
        public static readonly SingleEmoji Octopus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f419 }),
            name: "octopus",
            searchTerms: new string[] { "octopus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MARINE,
            hasGlyph: true,
            sortOrder: 2480
        );

        /* üêö */
        public static readonly SingleEmoji SpiralShell = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f41a }),
            name: "spiral shell",
            searchTerms: new string[] { "spiral", "shell" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_MARINE,
            hasGlyph: true,
            sortOrder: 2481
        );

        /* üêå */
        public static readonly SingleEmoji Snail = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f40c }),
            name: "snail",
            searchTerms: new string[] { "snail" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2482
        );

        /* ü¶ã */
        public static readonly SingleEmoji Butterfly = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f98b }),
            name: "butterfly",
            searchTerms: new string[] { "butterfly" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2483
        );

        /* üêõ */
        public static readonly SingleEmoji Bug = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f41b }),
            name: "bug",
            searchTerms: new string[] { "bug" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2484
        );

        /* üêú */
        public static readonly SingleEmoji Ant = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f41c }),
            name: "ant",
            searchTerms: new string[] { "ant" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2485
        );

        /* üêù */
        public static readonly SingleEmoji Honeybee = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f41d }),
            name: "honeybee",
            searchTerms: new string[] { "honeybee" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2486
        );

        /* üêû */
        public static readonly SingleEmoji LadyBeetle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f41e }),
            name: "lady beetle",
            searchTerms: new string[] { "lady", "beetle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2487
        );

        /* ü¶ó */
        public static readonly SingleEmoji Cricket = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f997 }),
            name: "cricket",
            searchTerms: new string[] { "cricket" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2488
        );

        /* üï∑Ô∏è */
        public static readonly SingleEmoji Spider = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f577, 0xfe0f }),
            name: "spider",
            searchTerms: new string[] { "spider" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2489
        );

        /* üï∏Ô∏è */
        public static readonly SingleEmoji SpiderWeb = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f578, 0xfe0f }),
            name: "spider web",
            searchTerms: new string[] { "spider", "web" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2491
        );

        /* ü¶Ç */
        public static readonly SingleEmoji Scorpion = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f982 }),
            name: "scorpion",
            searchTerms: new string[] { "scorpion" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2493
        );

        /* ü¶ü */
        public static readonly SingleEmoji Mosquito = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f99f }),
            name: "mosquito",
            searchTerms: new string[] { "mosquito" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2494
        );

        /* ü¶† */
        public static readonly SingleEmoji Microbe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9a0 }),
            name: "microbe",
            searchTerms: new string[] { "microbe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.ANIMAL_BUG,
            hasGlyph: true,
            sortOrder: 2495
        );

        /* üíê */
        public static readonly SingleEmoji Bouquet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f490 }),
            name: "bouquet",
            searchTerms: new string[] { "bouquet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2496
        );

        /* üå∏ */
        public static readonly SingleEmoji CherryBlossom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f338 }),
            name: "cherry blossom",
            searchTerms: new string[] { "cherry", "blossom" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2497
        );

        /* üíÆ */
        public static readonly SingleEmoji WhiteFlower = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ae }),
            name: "white flower",
            searchTerms: new string[] { "white", "flower" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2498
        );

        /* üèµÔ∏è */
        public static readonly SingleEmoji Rosette = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f5, 0xfe0f }),
            name: "rosette",
            searchTerms: new string[] { "rosette" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2499
        );

        /* üåπ */
        public static readonly SingleEmoji Rose = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f339 }),
            name: "rose",
            searchTerms: new string[] { "rose" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2501
        );

        /* ü•Ä */
        public static readonly SingleEmoji WiltedFlower = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f940 }),
            name: "wilted flower",
            searchTerms: new string[] { "wilted", "flower" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2502
        );

        /* üå∫ */
        public static readonly SingleEmoji Hibiscus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f33a }),
            name: "hibiscus",
            searchTerms: new string[] { "hibiscus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2503
        );

        /* üåª */
        public static readonly SingleEmoji Sunflower = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f33b }),
            name: "sunflower",
            searchTerms: new string[] { "sunflower" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2504
        );

        /* üåº */
        public static readonly SingleEmoji Blossom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f33c }),
            name: "blossom",
            searchTerms: new string[] { "blossom" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2505
        );

        /* üå∑ */
        public static readonly SingleEmoji Tulip = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f337 }),
            name: "tulip",
            searchTerms: new string[] { "tulip" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_FLOWER,
            hasGlyph: true,
            sortOrder: 2506
        );

        /* üå± */
        public static readonly SingleEmoji Seedling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f331 }),
            name: "seedling",
            searchTerms: new string[] { "seedling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2507
        );

        /* üå≤ */
        public static readonly SingleEmoji EvergreenTree = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f332 }),
            name: "evergreen tree",
            searchTerms: new string[] { "evergreen", "tree" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2508
        );

        /* üå≥ */
        public static readonly SingleEmoji DeciduousTree = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f333 }),
            name: "deciduous tree",
            searchTerms: new string[] { "deciduous", "tree" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2509
        );

        /* üå¥ */
        public static readonly SingleEmoji PalmTree = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f334 }),
            name: "palm tree",
            searchTerms: new string[] { "palm", "tree" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2510
        );

        /* üåµ */
        public static readonly SingleEmoji Cactus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f335 }),
            name: "cactus",
            searchTerms: new string[] { "cactus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2511
        );

        /* üåæ */
        public static readonly SingleEmoji SheafRice = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f33e }),
            name: "sheaf of rice",
            searchTerms: new string[] { "sheaf", "rice" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2512
        );

        /* üåø */
        public static readonly SingleEmoji Herb = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f33f }),
            name: "herb",
            searchTerms: new string[] { "herb" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2513
        );

        /* ‚òòÔ∏è */
        public static readonly SingleEmoji Shamrock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2618, 0xfe0f }),
            name: "shamrock",
            searchTerms: new string[] { "shamrock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2514
        );

        /* üçÄ */
        public static readonly SingleEmoji FourLeafClover = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f340 }),
            name: "four leaf clover",
            searchTerms: new string[] { "four", "leaf", "clover" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2516
        );

        /* üçÅ */
        public static readonly SingleEmoji MapleLeaf = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f341 }),
            name: "maple leaf",
            searchTerms: new string[] { "maple", "leaf" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2517
        );

        /* üçÇ */
        public static readonly SingleEmoji FallenLeaf = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f342 }),
            name: "fallen leaf",
            searchTerms: new string[] { "fallen", "leaf" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2518
        );

        /* üçÉ */
        public static readonly SingleEmoji LeafFlutteringWind = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f343 }),
            name: "leaf fluttering in wind",
            searchTerms: new string[] { "leaf", "fluttering", "wind" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ANIMALS_AND_NATURE,
            subgroup: Subgroups.PLANT_OTHER,
            hasGlyph: true,
            sortOrder: 2519
        );

        /* üçá */
        public static readonly SingleEmoji Grapes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f347 }),
            name: "grapes",
            searchTerms: new string[] { "grapes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2520
        );

        /* üçà */
        public static readonly SingleEmoji Melon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f348 }),
            name: "melon",
            searchTerms: new string[] { "melon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2521
        );

        /* üçâ */
        public static readonly SingleEmoji Watermelon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f349 }),
            name: "watermelon",
            searchTerms: new string[] { "watermelon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2522
        );

        /* üçä */
        public static readonly SingleEmoji Tangerine = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f34a }),
            name: "tangerine",
            searchTerms: new string[] { "tangerine" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2523
        );

        /* üçã */
        public static readonly SingleEmoji Lemon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f34b }),
            name: "lemon",
            searchTerms: new string[] { "lemon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2524
        );

        /* üçå */
        public static readonly SingleEmoji Banana = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f34c }),
            name: "banana",
            searchTerms: new string[] { "banana" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2525
        );

        /* üçç */
        public static readonly SingleEmoji Pineapple = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f34d }),
            name: "pineapple",
            searchTerms: new string[] { "pineapple" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2526
        );

        /* ü•≠ */
        public static readonly SingleEmoji Mango = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f96d }),
            name: "mango",
            searchTerms: new string[] { "mango" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2527
        );

        /* üçé */
        public static readonly SingleEmoji RedApple = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f34e }),
            name: "red apple",
            searchTerms: new string[] { "red", "apple" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2528
        );

        /* üçè */
        public static readonly SingleEmoji GreenApple = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f34f }),
            name: "green apple",
            searchTerms: new string[] { "green", "apple" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2529
        );

        /* üçê */
        public static readonly SingleEmoji Pear = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f350 }),
            name: "pear",
            searchTerms: new string[] { "pear" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2530
        );

        /* üçë */
        public static readonly SingleEmoji Peach = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f351 }),
            name: "peach",
            searchTerms: new string[] { "peach" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2531
        );

        /* üçí */
        public static readonly SingleEmoji Cherries = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f352 }),
            name: "cherries",
            searchTerms: new string[] { "cherries" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2532
        );

        /* üçì */
        public static readonly SingleEmoji Strawberry = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f353 }),
            name: "strawberry",
            searchTerms: new string[] { "strawberry" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2533
        );

        /* ü•ù */
        public static readonly SingleEmoji KiwiFruit = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f95d }),
            name: "kiwi fruit",
            searchTerms: new string[] { "kiwi", "fruit" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2534
        );

        /* üçÖ */
        public static readonly SingleEmoji Tomato = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f345 }),
            name: "tomato",
            searchTerms: new string[] { "tomato" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2535
        );

        /* ü•• */
        public static readonly SingleEmoji Coconut = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f965 }),
            name: "coconut",
            searchTerms: new string[] { "coconut" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_FRUIT,
            hasGlyph: true,
            sortOrder: 2536
        );

        /* ü•ë */
        public static readonly SingleEmoji Avocado = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f951 }),
            name: "avocado",
            searchTerms: new string[] { "avocado" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2537
        );

        /* üçÜ */
        public static readonly SingleEmoji Eggplant = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f346 }),
            name: "eggplant",
            searchTerms: new string[] { "eggplant" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2538
        );

        /* ü•î */
        public static readonly SingleEmoji Potato = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f954 }),
            name: "potato",
            searchTerms: new string[] { "potato" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2539
        );

        /* ü•ï */
        public static readonly SingleEmoji Carrot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f955 }),
            name: "carrot",
            searchTerms: new string[] { "carrot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2540
        );

        /* üåΩ */
        public static readonly SingleEmoji EarCorn = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f33d }),
            name: "ear of corn",
            searchTerms: new string[] { "ear", "corn" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2541
        );

        /* üå∂Ô∏è */
        public static readonly SingleEmoji HotPepper = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f336, 0xfe0f }),
            name: "hot pepper",
            searchTerms: new string[] { "hot", "pepper" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2542
        );

        /* ü•í */
        public static readonly SingleEmoji Cucumber = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f952 }),
            name: "cucumber",
            searchTerms: new string[] { "cucumber" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2544
        );

        /* ü•¨ */
        public static readonly SingleEmoji LeafyGreen = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f96c }),
            name: "leafy green",
            searchTerms: new string[] { "leafy", "green" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2545
        );

        /* ü•¶ */
        public static readonly SingleEmoji Broccoli = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f966 }),
            name: "broccoli",
            searchTerms: new string[] { "broccoli" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2546
        );

        /* üßÑ */
        public static readonly SingleEmoji Garlic = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c4 }),
            name: "garlic",
            searchTerms: new string[] { "garlic" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2547
        );

        /* üßÖ */
        public static readonly SingleEmoji Onion = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c5 }),
            name: "onion",
            searchTerms: new string[] { "onion" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2548
        );

        /* üçÑ */
        public static readonly SingleEmoji Mushroom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f344 }),
            name: "mushroom",
            searchTerms: new string[] { "mushroom" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2549
        );

        /* ü•ú */
        public static readonly SingleEmoji Peanuts = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f95c }),
            name: "peanuts",
            searchTerms: new string[] { "peanuts" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2550
        );

        /* üå∞ */
        public static readonly SingleEmoji Chestnut = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f330 }),
            name: "chestnut",
            searchTerms: new string[] { "chestnut" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_VEGETABLE,
            hasGlyph: true,
            sortOrder: 2551
        );

        /* üçû */
        public static readonly SingleEmoji Bread = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f35e }),
            name: "bread",
            searchTerms: new string[] { "bread" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2552
        );

        /* ü•ê */
        public static readonly SingleEmoji Croissant = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f950 }),
            name: "croissant",
            searchTerms: new string[] { "croissant" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2553
        );

        /* ü•ñ */
        public static readonly SingleEmoji BaguetteBread = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f956 }),
            name: "baguette bread",
            searchTerms: new string[] { "baguette", "bread" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2554
        );

        /* ü•® */
        public static readonly SingleEmoji Pretzel = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f968 }),
            name: "pretzel",
            searchTerms: new string[] { "pretzel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2555
        );

        /* ü•Ø */
        public static readonly SingleEmoji Bagel = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f96f }),
            name: "bagel",
            searchTerms: new string[] { "bagel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2556
        );

        /* ü•û */
        public static readonly SingleEmoji Pancakes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f95e }),
            name: "pancakes",
            searchTerms: new string[] { "pancakes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2557
        );

        /* üßá */
        public static readonly SingleEmoji Waffle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c7 }),
            name: "waffle",
            searchTerms: new string[] { "waffle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2558
        );

        /* üßÄ */
        public static readonly SingleEmoji CheeseWedge = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c0 }),
            name: "cheese wedge",
            searchTerms: new string[] { "cheese", "wedge" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2559
        );

        /* üçñ */
        public static readonly SingleEmoji MeatBone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f356 }),
            name: "meat on bone",
            searchTerms: new string[] { "meat", "bone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2560
        );

        /* üçó */
        public static readonly SingleEmoji PoultryLeg = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f357 }),
            name: "poultry leg",
            searchTerms: new string[] { "poultry", "leg" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2561
        );

        /* ü•© */
        public static readonly SingleEmoji CutMeat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f969 }),
            name: "cut of meat",
            searchTerms: new string[] { "cut", "meat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2562
        );

        /* ü•ì */
        public static readonly SingleEmoji Bacon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f953 }),
            name: "bacon",
            searchTerms: new string[] { "bacon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2563
        );

        /* üçî */
        public static readonly SingleEmoji Hamburger = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f354 }),
            name: "hamburger",
            searchTerms: new string[] { "hamburger" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2564
        );

        /* üçü */
        public static readonly SingleEmoji FrenchFries = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f35f }),
            name: "french fries",
            searchTerms: new string[] { "french", "fries" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2565
        );

        /* üçï */
        public static readonly SingleEmoji Pizza = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f355 }),
            name: "pizza",
            searchTerms: new string[] { "pizza" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2566
        );

        /* üå≠ */
        public static readonly SingleEmoji HotDog = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f32d }),
            name: "hot dog",
            searchTerms: new string[] { "hot", "dog" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2567
        );

        /* ü•™ */
        public static readonly SingleEmoji Sandwich = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f96a }),
            name: "sandwich",
            searchTerms: new string[] { "sandwich" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2568
        );

        /* üåÆ */
        public static readonly SingleEmoji Taco = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f32e }),
            name: "taco",
            searchTerms: new string[] { "taco" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2569
        );

        /* üåØ */
        public static readonly SingleEmoji Burrito = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f32f }),
            name: "burrito",
            searchTerms: new string[] { "burrito" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2570
        );

        /* ü•ô */
        public static readonly SingleEmoji StuffedFlatbread = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f959 }),
            name: "stuffed flatbread",
            searchTerms: new string[] { "stuffed", "flatbread" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2571
        );

        /* üßÜ */
        public static readonly SingleEmoji Falafel = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c6 }),
            name: "falafel",
            searchTerms: new string[] { "falafel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2572
        );

        /* ü•ö */
        public static readonly SingleEmoji Egg = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f95a }),
            name: "egg",
            searchTerms: new string[] { "egg" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2573
        );

        /* üç≥ */
        public static readonly SingleEmoji Cooking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f373 }),
            name: "cooking",
            searchTerms: new string[] { "cooking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2574
        );

        /* ü•ò */
        public static readonly SingleEmoji ShallowPanFood = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f958 }),
            name: "shallow pan of food",
            searchTerms: new string[] { "shallow", "pan", "food" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2575
        );

        /* üç≤ */
        public static readonly SingleEmoji PotFood = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f372 }),
            name: "pot of food",
            searchTerms: new string[] { "pot", "food" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2576
        );

        /* ü•£ */
        public static readonly SingleEmoji BowlSpoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f963 }),
            name: "bowl with spoon",
            searchTerms: new string[] { "bowl", "spoon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2577
        );

        /* ü•ó */
        public static readonly SingleEmoji GreenSalad = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f957 }),
            name: "green salad",
            searchTerms: new string[] { "green", "salad" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2578
        );

        /* üçø */
        public static readonly SingleEmoji Popcorn = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f37f }),
            name: "popcorn",
            searchTerms: new string[] { "popcorn" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2579
        );

        /* üßà */
        public static readonly SingleEmoji Butter = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c8 }),
            name: "butter",
            searchTerms: new string[] { "butter" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2580
        );

        /* üßÇ */
        public static readonly SingleEmoji Salt = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c2 }),
            name: "salt",
            searchTerms: new string[] { "salt" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2581
        );

        /* ü•´ */
        public static readonly SingleEmoji CannedFood = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f96b }),
            name: "canned food",
            searchTerms: new string[] { "canned", "food" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_PREPARED,
            hasGlyph: true,
            sortOrder: 2582
        );

        /* üç± */
        public static readonly SingleEmoji BentoBox = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f371 }),
            name: "bento box",
            searchTerms: new string[] { "bento", "box" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2583
        );

        /* üçò */
        public static readonly SingleEmoji RiceCracker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f358 }),
            name: "rice cracker",
            searchTerms: new string[] { "rice", "cracker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2584
        );

        /* üçô */
        public static readonly SingleEmoji RiceBall = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f359 }),
            name: "rice ball",
            searchTerms: new string[] { "rice", "ball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2585
        );

        /* üçö */
        public static readonly SingleEmoji CookedRice = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f35a }),
            name: "cooked rice",
            searchTerms: new string[] { "cooked", "rice" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2586
        );

        /* üçõ */
        public static readonly SingleEmoji CurryRice = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f35b }),
            name: "curry rice",
            searchTerms: new string[] { "curry", "rice" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2587
        );

        /* üçú */
        public static readonly SingleEmoji SteamingBowl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f35c }),
            name: "steaming bowl",
            searchTerms: new string[] { "steaming", "bowl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2588
        );

        /* üçù */
        public static readonly SingleEmoji Spaghetti = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f35d }),
            name: "spaghetti",
            searchTerms: new string[] { "spaghetti" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2589
        );

        /* üç† */
        public static readonly SingleEmoji RoastedSweetPotato = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f360 }),
            name: "roasted sweet potato",
            searchTerms: new string[] { "roasted", "sweet", "potato" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2590
        );

        /* üç¢ */
        public static readonly SingleEmoji Oden = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f362 }),
            name: "oden",
            searchTerms: new string[] { "oden" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2591
        );

        /* üç£ */
        public static readonly SingleEmoji Sushi = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f363 }),
            name: "sushi",
            searchTerms: new string[] { "sushi" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2592
        );

        /* üç§ */
        public static readonly SingleEmoji FriedShrimp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f364 }),
            name: "fried shrimp",
            searchTerms: new string[] { "fried", "shrimp" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2593
        );

        /* üç• */
        public static readonly SingleEmoji FishCakeSwirl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f365 }),
            name: "fish cake with swirl",
            searchTerms: new string[] { "fish", "cake", "swirl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2594
        );

        /* ü•Æ */
        public static readonly SingleEmoji MoonCake = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f96e }),
            name: "moon cake",
            searchTerms: new string[] { "moon", "cake" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2595
        );

        /* üç° */
        public static readonly SingleEmoji Dango = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f361 }),
            name: "dango",
            searchTerms: new string[] { "dango" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2596
        );

        /* ü•ü */
        public static readonly SingleEmoji Dumpling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f95f }),
            name: "dumpling",
            searchTerms: new string[] { "dumpling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2597
        );

        /* ü•† */
        public static readonly SingleEmoji FortuneCookie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f960 }),
            name: "fortune cookie",
            searchTerms: new string[] { "fortune", "cookie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2598
        );

        /* ü•° */
        public static readonly SingleEmoji TakeoutBox = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f961 }),
            name: "takeout box",
            searchTerms: new string[] { "takeout", "box" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_ASIAN,
            hasGlyph: true,
            sortOrder: 2599
        );

        /* ü¶Ä */
        public static readonly SingleEmoji Crab = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f980 }),
            name: "crab",
            searchTerms: new string[] { "crab" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_MARINE,
            hasGlyph: true,
            sortOrder: 2600
        );

        /* ü¶û */
        public static readonly SingleEmoji Lobster = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f99e }),
            name: "lobster",
            searchTerms: new string[] { "lobster" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_MARINE,
            hasGlyph: true,
            sortOrder: 2601
        );

        /* ü¶ê */
        public static readonly SingleEmoji Shrimp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f990 }),
            name: "shrimp",
            searchTerms: new string[] { "shrimp" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_MARINE,
            hasGlyph: true,
            sortOrder: 2602
        );

        /* ü¶ë */
        public static readonly SingleEmoji Squid = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f991 }),
            name: "squid",
            searchTerms: new string[] { "squid" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_MARINE,
            hasGlyph: true,
            sortOrder: 2603
        );

        /* ü¶™ */
        public static readonly SingleEmoji Oyster = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9aa }),
            name: "oyster",
            searchTerms: new string[] { "oyster" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_MARINE,
            hasGlyph: true,
            sortOrder: 2604
        );

        /* üç¶ */
        public static readonly SingleEmoji SoftIceCream = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f366 }),
            name: "soft ice cream",
            searchTerms: new string[] { "soft", "ice", "cream" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2605
        );

        /* üçß */
        public static readonly SingleEmoji ShavedIce = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f367 }),
            name: "shaved ice",
            searchTerms: new string[] { "shaved", "ice" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2606
        );

        /* üç® */
        public static readonly SingleEmoji IceCream = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f368 }),
            name: "ice cream",
            searchTerms: new string[] { "ice", "cream" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2607
        );

        /* üç© */
        public static readonly SingleEmoji Doughnut = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f369 }),
            name: "doughnut",
            searchTerms: new string[] { "doughnut" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2608
        );

        /* üç™ */
        public static readonly SingleEmoji Cookie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f36a }),
            name: "cookie",
            searchTerms: new string[] { "cookie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2609
        );

        /* üéÇ */
        public static readonly SingleEmoji BirthdayCake = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f382 }),
            name: "birthday cake",
            searchTerms: new string[] { "birthday", "cake" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2610
        );

        /* üç∞ */
        public static readonly SingleEmoji Shortcake = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f370 }),
            name: "shortcake",
            searchTerms: new string[] { "shortcake" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2611
        );

        /* üßÅ */
        public static readonly SingleEmoji Cupcake = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c1 }),
            name: "cupcake",
            searchTerms: new string[] { "cupcake" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2612
        );

        /* ü•ß */
        public static readonly SingleEmoji Pie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f967 }),
            name: "pie",
            searchTerms: new string[] { "pie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2613
        );

        /* üç´ */
        public static readonly SingleEmoji ChocolateBar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f36b }),
            name: "chocolate bar",
            searchTerms: new string[] { "chocolate", "bar" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2614
        );

        /* üç¨ */
        public static readonly SingleEmoji Candy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f36c }),
            name: "candy",
            searchTerms: new string[] { "candy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2615
        );

        /* üç≠ */
        public static readonly SingleEmoji Lollipop = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f36d }),
            name: "lollipop",
            searchTerms: new string[] { "lollipop" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2616
        );

        /* üçÆ */
        public static readonly SingleEmoji Custard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f36e }),
            name: "custard",
            searchTerms: new string[] { "custard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2617
        );

        /* üçØ */
        public static readonly SingleEmoji HoneyPot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f36f }),
            name: "honey pot",
            searchTerms: new string[] { "honey", "pot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.FOOD_SWEET,
            hasGlyph: true,
            sortOrder: 2618
        );

        /* üçº */
        public static readonly SingleEmoji BabyBottle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f37c }),
            name: "baby bottle",
            searchTerms: new string[] { "baby", "bottle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2619
        );

        /* ü•õ */
        public static readonly SingleEmoji GlassMilk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f95b }),
            name: "glass of milk",
            searchTerms: new string[] { "glass", "milk" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2620
        );

        /* ‚òï */
        public static readonly SingleEmoji HotBeverage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2615 }),
            name: "hot beverage",
            searchTerms: new string[] { "hot", "beverage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2621
        );

        /* üçµ */
        public static readonly SingleEmoji TeacupHandle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f375 }),
            name: "teacup without handle",
            searchTerms: new string[] { "teacup", "handle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2622
        );

        /* üç∂ */
        public static readonly SingleEmoji Sake = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f376 }),
            name: "sake",
            searchTerms: new string[] { "sake" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2623
        );

        /* üçæ */
        public static readonly SingleEmoji BottlePoppingCork = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f37e }),
            name: "bottle with popping cork",
            searchTerms: new string[] { "bottle", "popping", "cork" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2624
        );

        /* üç∑ */
        public static readonly SingleEmoji WineGlass = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f377 }),
            name: "wine glass",
            searchTerms: new string[] { "wine", "glass" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2625
        );

        /* üç∏ */
        public static readonly SingleEmoji CocktailGlass = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f378 }),
            name: "cocktail glass",
            searchTerms: new string[] { "cocktail", "glass" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2626
        );

        /* üçπ */
        public static readonly SingleEmoji TropicalDrink = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f379 }),
            name: "tropical drink",
            searchTerms: new string[] { "tropical", "drink" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2627
        );

        /* üç∫ */
        public static readonly SingleEmoji BeerMug = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f37a }),
            name: "beer mug",
            searchTerms: new string[] { "beer", "mug" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2628
        );

        /* üçª */
        public static readonly SingleEmoji ClinkingBeerMugs = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f37b }),
            name: "clinking beer mugs",
            searchTerms: new string[] { "clinking", "beer", "mugs" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2629
        );

        /* ü•Ç */
        public static readonly SingleEmoji ClinkingGlasses = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f942 }),
            name: "clinking glasses",
            searchTerms: new string[] { "clinking", "glasses" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2630
        );

        /* ü•É */
        public static readonly SingleEmoji TumblerGlass = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f943 }),
            name: "tumbler glass",
            searchTerms: new string[] { "tumbler", "glass" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2631
        );

        /* ü•§ */
        public static readonly SingleEmoji CupStraw = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f964 }),
            name: "cup with straw",
            searchTerms: new string[] { "cup", "straw" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2632
        );

        /* üßÉ */
        public static readonly SingleEmoji BeverageBox = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c3 }),
            name: "beverage box",
            searchTerms: new string[] { "beverage", "box" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2633
        );

        /* üßâ */
        public static readonly SingleEmoji Mate = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9c9 }),
            name: "mate",
            searchTerms: new string[] { "mate" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2634
        );

        /* üßä */
        public static readonly SingleEmoji IceCube = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ca }),
            name: "ice cube",
            searchTerms: new string[] { "ice", "cube" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DRINK,
            hasGlyph: true,
            sortOrder: 2635
        );

        /* ü•¢ */
        public static readonly SingleEmoji Chopsticks = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f962 }),
            name: "chopsticks",
            searchTerms: new string[] { "chopsticks" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DISHWARE,
            hasGlyph: true,
            sortOrder: 2636
        );

        /* üçΩÔ∏è */
        public static readonly SingleEmoji ForkKnifePlate = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f37d, 0xfe0f }),
            name: "fork and knife with plate",
            searchTerms: new string[] { "fork", "knife", "plate" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DISHWARE,
            hasGlyph: true,
            sortOrder: 2637
        );

        /* üç¥ */
        public static readonly SingleEmoji ForkKnife = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f374 }),
            name: "fork and knife",
            searchTerms: new string[] { "fork", "knife" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DISHWARE,
            hasGlyph: true,
            sortOrder: 2639
        );

        /* ü•Ñ */
        public static readonly SingleEmoji Spoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f944 }),
            name: "spoon",
            searchTerms: new string[] { "spoon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DISHWARE,
            hasGlyph: true,
            sortOrder: 2640
        );

        /* üî™ */
        public static readonly SingleEmoji KitchenKnife = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f52a }),
            name: "kitchen knife",
            searchTerms: new string[] { "kitchen", "knife" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DISHWARE,
            hasGlyph: true,
            sortOrder: 2641
        );

        /* üè∫ */
        public static readonly SingleEmoji Amphora = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3fa }),
            name: "amphora",
            searchTerms: new string[] { "amphora" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FOOD_AND_DRINK,
            subgroup: Subgroups.DISHWARE,
            hasGlyph: true,
            sortOrder: 2642
        );

        /* üåç */
        public static readonly SingleEmoji GlobeShowingEuropeAfrica = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f30d }),
            name: "globe showing Europe-Africa",
            searchTerms: new string[] { "globe", "showing", "europe", "africa" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_MAP,
            hasGlyph: true,
            sortOrder: 2643
        );

        /* üåé */
        public static readonly SingleEmoji GlobeShowingAmericas = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f30e }),
            name: "globe showing Americas",
            searchTerms: new string[] { "globe", "showing", "americas" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_MAP,
            hasGlyph: true,
            sortOrder: 2644
        );

        /* üåè */
        public static readonly SingleEmoji GlobeShowingAsiaAustralia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f30f }),
            name: "globe showing Asia-Australia",
            searchTerms: new string[] { "globe", "showing", "asia", "australia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_MAP,
            hasGlyph: true,
            sortOrder: 2645
        );

        /* üåê */
        public static readonly SingleEmoji GlobeMeridians = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f310 }),
            name: "globe with meridians",
            searchTerms: new string[] { "globe", "meridians" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_MAP,
            hasGlyph: true,
            sortOrder: 2646
        );

        /* üó∫Ô∏è */
        public static readonly SingleEmoji WorldMap = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5fa, 0xfe0f }),
            name: "world map",
            searchTerms: new string[] { "world", "map" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_MAP,
            hasGlyph: true,
            sortOrder: 2647
        );

        /* üóæ */
        public static readonly SingleEmoji MapJapan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5fe }),
            name: "map of Japan",
            searchTerms: new string[] { "map", "japan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_MAP,
            hasGlyph: true,
            sortOrder: 2649
        );

        /* üß≠ */
        public static readonly SingleEmoji Compass = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ed }),
            name: "compass",
            searchTerms: new string[] { "compass" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_MAP,
            hasGlyph: true,
            sortOrder: 2650
        );

        /* üèîÔ∏è */
        public static readonly SingleEmoji SnowCappedMountain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d4, 0xfe0f }),
            name: "snow-capped mountain",
            searchTerms: new string[] { "snow", "capped", "mountain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_GEOGRAPHIC,
            hasGlyph: true,
            sortOrder: 2651
        );

        /* ‚õ∞Ô∏è */
        public static readonly SingleEmoji Mountain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f0, 0xfe0f }),
            name: "mountain",
            searchTerms: new string[] { "mountain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_GEOGRAPHIC,
            hasGlyph: true,
            sortOrder: 2653
        );

        /* üåã */
        public static readonly SingleEmoji Volcano = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f30b }),
            name: "volcano",
            searchTerms: new string[] { "volcano" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_GEOGRAPHIC,
            hasGlyph: true,
            sortOrder: 2655
        );

        /* üóª */
        public static readonly SingleEmoji MountFuji = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5fb }),
            name: "mount fuji",
            searchTerms: new string[] { "mount", "fuji" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_GEOGRAPHIC,
            hasGlyph: true,
            sortOrder: 2656
        );

        /* üèïÔ∏è */
        public static readonly SingleEmoji Camping = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d5, 0xfe0f }),
            name: "camping",
            searchTerms: new string[] { "camping" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_GEOGRAPHIC,
            hasGlyph: true,
            sortOrder: 2657
        );

        /* üèñÔ∏è */
        public static readonly SingleEmoji BeachUmbrella = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d6, 0xfe0f }),
            name: "beach with umbrella",
            searchTerms: new string[] { "beach", "umbrella" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_GEOGRAPHIC,
            hasGlyph: true,
            sortOrder: 2659
        );

        /* üèúÔ∏è */
        public static readonly SingleEmoji Desert = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3dc, 0xfe0f }),
            name: "desert",
            searchTerms: new string[] { "desert" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_GEOGRAPHIC,
            hasGlyph: true,
            sortOrder: 2661
        );

        /* üèùÔ∏è */
        public static readonly SingleEmoji DesertIsland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3dd, 0xfe0f }),
            name: "desert island",
            searchTerms: new string[] { "desert", "island" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_GEOGRAPHIC,
            hasGlyph: true,
            sortOrder: 2663
        );

        /* üèûÔ∏è */
        public static readonly SingleEmoji NationalPark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3de, 0xfe0f }),
            name: "national park",
            searchTerms: new string[] { "national", "park" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_GEOGRAPHIC,
            hasGlyph: true,
            sortOrder: 2665
        );

        /* üèüÔ∏è */
        public static readonly SingleEmoji Stadium = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3df, 0xfe0f }),
            name: "stadium",
            searchTerms: new string[] { "stadium" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2667
        );

        /* üèõÔ∏è */
        public static readonly SingleEmoji ClassicalBuilding = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3db, 0xfe0f }),
            name: "classical building",
            searchTerms: new string[] { "classical", "building" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2669
        );

        /* üèóÔ∏è */
        public static readonly SingleEmoji BuildingConstruction = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d7, 0xfe0f }),
            name: "building construction",
            searchTerms: new string[] { "building", "construction" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2671
        );

        /* üß± */
        public static readonly SingleEmoji Brick = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f1 }),
            name: "brick",
            searchTerms: new string[] { "brick" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2673
        );

        /* üèòÔ∏è */
        public static readonly SingleEmoji Houses = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d8, 0xfe0f }),
            name: "houses",
            searchTerms: new string[] { "houses" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2674
        );

        /* üèöÔ∏è */
        public static readonly SingleEmoji DerelictHouse = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3da, 0xfe0f }),
            name: "derelict house",
            searchTerms: new string[] { "derelict", "house" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2676
        );

        /* üè† */
        public static readonly SingleEmoji House = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e0 }),
            name: "house",
            searchTerms: new string[] { "house" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2678
        );

        /* üè° */
        public static readonly SingleEmoji HouseGarden = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e1 }),
            name: "house with garden",
            searchTerms: new string[] { "house", "garden" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2679
        );

        /* üè¢ */
        public static readonly SingleEmoji OfficeBuilding = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e2 }),
            name: "office building",
            searchTerms: new string[] { "office", "building" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2680
        );

        /* üè£ */
        public static readonly SingleEmoji JapanesePostOffice = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e3 }),
            name: "Japanese post office",
            searchTerms: new string[] { "japanese", "post", "office" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2681
        );

        /* üè§ */
        public static readonly SingleEmoji PostOffice = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e4 }),
            name: "post office",
            searchTerms: new string[] { "post", "office" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2682
        );

        /* üè• */
        public static readonly SingleEmoji Hospital = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e5 }),
            name: "hospital",
            searchTerms: new string[] { "hospital" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2683
        );

        /* üè¶ */
        public static readonly SingleEmoji Bank = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e6 }),
            name: "bank",
            searchTerms: new string[] { "bank" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2684
        );

        /* üè® */
        public static readonly SingleEmoji Hotel = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e8 }),
            name: "hotel",
            searchTerms: new string[] { "hotel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2685
        );

        /* üè© */
        public static readonly SingleEmoji LoveHotel = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e9 }),
            name: "love hotel",
            searchTerms: new string[] { "love", "hotel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2686
        );

        /* üè™ */
        public static readonly SingleEmoji ConvenienceStore = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ea }),
            name: "convenience store",
            searchTerms: new string[] { "convenience", "store" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2687
        );

        /* üè´ */
        public static readonly SingleEmoji School = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3eb }),
            name: "school",
            searchTerms: new string[] { "school" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2688
        );

        /* üè¨ */
        public static readonly SingleEmoji DepartmentStore = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ec }),
            name: "department store",
            searchTerms: new string[] { "department", "store" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2689
        );

        /* üè≠ */
        public static readonly SingleEmoji Factory = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ed }),
            name: "factory",
            searchTerms: new string[] { "factory" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2690
        );

        /* üèØ */
        public static readonly SingleEmoji JapaneseCastle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ef }),
            name: "Japanese castle",
            searchTerms: new string[] { "japanese", "castle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2691
        );

        /* üè∞ */
        public static readonly SingleEmoji Castle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f0 }),
            name: "castle",
            searchTerms: new string[] { "castle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2692
        );

        /* üíí */
        public static readonly SingleEmoji Wedding = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f492 }),
            name: "wedding",
            searchTerms: new string[] { "wedding" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2693
        );

        /* üóº */
        public static readonly SingleEmoji TokyoTower = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5fc }),
            name: "Tokyo tower",
            searchTerms: new string[] { "tokyo", "tower" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2694
        );

        /* üóΩ */
        public static readonly SingleEmoji StatueLiberty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5fd }),
            name: "Statue of Liberty",
            searchTerms: new string[] { "statue", "liberty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_BUILDING,
            hasGlyph: true,
            sortOrder: 2695
        );

        /* ‚õ™ */
        public static readonly SingleEmoji Church = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26ea }),
            name: "church",
            searchTerms: new string[] { "church" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_RELIGIOUS,
            hasGlyph: true,
            sortOrder: 2696
        );

        /* üïå */
        public static readonly SingleEmoji Mosque = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f54c }),
            name: "mosque",
            searchTerms: new string[] { "mosque" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_RELIGIOUS,
            hasGlyph: true,
            sortOrder: 2697
        );

        /* üõï */
        public static readonly SingleEmoji HinduTemple = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6d5 }),
            name: "hindu temple",
            searchTerms: new string[] { "hindu", "temple" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_RELIGIOUS,
            hasGlyph: true,
            sortOrder: 2698
        );

        /* üïç */
        public static readonly SingleEmoji Synagogue = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f54d }),
            name: "synagogue",
            searchTerms: new string[] { "synagogue" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_RELIGIOUS,
            hasGlyph: true,
            sortOrder: 2699
        );

        /* ‚õ©Ô∏è */
        public static readonly SingleEmoji ShintoShrine = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26e9, 0xfe0f }),
            name: "shinto shrine",
            searchTerms: new string[] { "shinto", "shrine" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_RELIGIOUS,
            hasGlyph: true,
            sortOrder: 2700
        );

        /* üïã */
        public static readonly SingleEmoji Kaaba = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f54b }),
            name: "kaaba",
            searchTerms: new string[] { "kaaba" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_RELIGIOUS,
            hasGlyph: true,
            sortOrder: 2702
        );

        /* ‚õ≤ */
        public static readonly SingleEmoji Fountain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f2 }),
            name: "fountain",
            searchTerms: new string[] { "fountain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2703
        );

        /* ‚õ∫ */
        public static readonly SingleEmoji Tent = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26fa }),
            name: "tent",
            searchTerms: new string[] { "tent" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2704
        );

        /* üåÅ */
        public static readonly SingleEmoji Foggy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f301 }),
            name: "foggy",
            searchTerms: new string[] { "foggy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2705
        );

        /* üåÉ */
        public static readonly SingleEmoji NightStars = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f303 }),
            name: "night with stars",
            searchTerms: new string[] { "night", "stars" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2706
        );

        /* üèôÔ∏è */
        public static readonly SingleEmoji Cityscape = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d9, 0xfe0f }),
            name: "cityscape",
            searchTerms: new string[] { "cityscape" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2707
        );

        /* üåÑ */
        public static readonly SingleEmoji SunriseOverMountains = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f304 }),
            name: "sunrise over mountains",
            searchTerms: new string[] { "sunrise", "over", "mountains" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2709
        );

        /* üåÖ */
        public static readonly SingleEmoji Sunrise = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f305 }),
            name: "sunrise",
            searchTerms: new string[] { "sunrise" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2710
        );

        /* üåÜ */
        public static readonly SingleEmoji CityscapeAtDusk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f306 }),
            name: "cityscape at dusk",
            searchTerms: new string[] { "cityscape", "at", "dusk" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2711
        );

        /* üåá */
        public static readonly SingleEmoji Sunset = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f307 }),
            name: "sunset",
            searchTerms: new string[] { "sunset" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2712
        );

        /* üåâ */
        public static readonly SingleEmoji BridgeAtNight = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f309 }),
            name: "bridge at night",
            searchTerms: new string[] { "bridge", "at", "night" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2713
        );

        /* ‚ô®Ô∏è */
        public static readonly SingleEmoji HotSprings = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2668, 0xfe0f }),
            name: "hot springs",
            searchTerms: new string[] { "hot", "springs" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2714
        );

        /* üé† */
        public static readonly SingleEmoji CarouselHorse = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a0 }),
            name: "carousel horse",
            searchTerms: new string[] { "carousel", "horse" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2716
        );

        /* üé° */
        public static readonly SingleEmoji FerrisWheel = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a1 }),
            name: "ferris wheel",
            searchTerms: new string[] { "ferris", "wheel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2717
        );

        /* üé¢ */
        public static readonly SingleEmoji RollerCoaster = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a2 }),
            name: "roller coaster",
            searchTerms: new string[] { "roller", "coaster" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2718
        );

        /* üíà */
        public static readonly SingleEmoji BarberPole = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f488 }),
            name: "barber pole",
            searchTerms: new string[] { "barber", "pole" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2719
        );

        /* üé™ */
        public static readonly SingleEmoji CircusTent = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3aa }),
            name: "circus tent",
            searchTerms: new string[] { "circus", "tent" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.PLACE_OTHER,
            hasGlyph: true,
            sortOrder: 2720
        );

        /* üöÇ */
        public static readonly SingleEmoji Locomotive = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f682 }),
            name: "locomotive",
            searchTerms: new string[] { "locomotive" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2721
        );

        /* üöÉ */
        public static readonly SingleEmoji RailwayCar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f683 }),
            name: "railway car",
            searchTerms: new string[] { "railway", "car" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2722
        );

        /* üöÑ */
        public static readonly SingleEmoji HighSpeedTrain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f684 }),
            name: "high-speed train",
            searchTerms: new string[] { "high", "speed", "train" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2723
        );

        /* üöÖ */
        public static readonly SingleEmoji BulletTrain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f685 }),
            name: "bullet train",
            searchTerms: new string[] { "bullet", "train" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2724
        );

        /* üöÜ */
        public static readonly SingleEmoji Train = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f686 }),
            name: "train",
            searchTerms: new string[] { "train" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2725
        );

        /* üöá */
        public static readonly SingleEmoji Metro = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f687 }),
            name: "metro",
            searchTerms: new string[] { "metro" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2726
        );

        /* üöà */
        public static readonly SingleEmoji LightRail = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f688 }),
            name: "light rail",
            searchTerms: new string[] { "light", "rail" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2727
        );

        /* üöâ */
        public static readonly SingleEmoji Station = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f689 }),
            name: "station",
            searchTerms: new string[] { "station" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2728
        );

        /* üöä */
        public static readonly SingleEmoji Tram = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f68a }),
            name: "tram",
            searchTerms: new string[] { "tram" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2729
        );

        /* üöù */
        public static readonly SingleEmoji Monorail = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f69d }),
            name: "monorail",
            searchTerms: new string[] { "monorail" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2730
        );

        /* üöû */
        public static readonly SingleEmoji MountainRailway = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f69e }),
            name: "mountain railway",
            searchTerms: new string[] { "mountain", "railway" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2731
        );

        /* üöã */
        public static readonly SingleEmoji TramCar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f68b }),
            name: "tram car",
            searchTerms: new string[] { "tram", "car" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2732
        );

        /* üöå */
        public static readonly SingleEmoji Bus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f68c }),
            name: "bus",
            searchTerms: new string[] { "bus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2733
        );

        /* üöç */
        public static readonly SingleEmoji OncomingBus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f68d }),
            name: "oncoming bus",
            searchTerms: new string[] { "oncoming", "bus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2734
        );

        /* üöé */
        public static readonly SingleEmoji Trolleybus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f68e }),
            name: "trolleybus",
            searchTerms: new string[] { "trolleybus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2735
        );

        /* üöê */
        public static readonly SingleEmoji Minibus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f690 }),
            name: "minibus",
            searchTerms: new string[] { "minibus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2736
        );

        /* üöë */
        public static readonly SingleEmoji Ambulance = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f691 }),
            name: "ambulance",
            searchTerms: new string[] { "ambulance" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2737
        );

        /* üöí */
        public static readonly SingleEmoji FireEngine = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f692 }),
            name: "fire engine",
            searchTerms: new string[] { "fire", "engine" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2738
        );

        /* üöì */
        public static readonly SingleEmoji PoliceCar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f693 }),
            name: "police car",
            searchTerms: new string[] { "police", "car" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2739
        );

        /* üöî */
        public static readonly SingleEmoji OncomingPoliceCar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f694 }),
            name: "oncoming police car",
            searchTerms: new string[] { "oncoming", "police", "car" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2740
        );

        /* üöï */
        public static readonly SingleEmoji Taxi = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f695 }),
            name: "taxi",
            searchTerms: new string[] { "taxi" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2741
        );

        /* üöñ */
        public static readonly SingleEmoji OncomingTaxi = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f696 }),
            name: "oncoming taxi",
            searchTerms: new string[] { "oncoming", "taxi" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2742
        );

        /* üöó */
        public static readonly SingleEmoji Automobile = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f697 }),
            name: "automobile",
            searchTerms: new string[] { "automobile" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2743
        );

        /* üöò */
        public static readonly SingleEmoji OncomingAutomobile = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f698 }),
            name: "oncoming automobile",
            searchTerms: new string[] { "oncoming", "automobile" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2744
        );

        /* üöô */
        public static readonly SingleEmoji SportUtilityVehicle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f699 }),
            name: "sport utility vehicle",
            searchTerms: new string[] { "sport", "utility", "vehicle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2745
        );

        /* üöö */
        public static readonly SingleEmoji DeliveryTruck = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f69a }),
            name: "delivery truck",
            searchTerms: new string[] { "delivery", "truck" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2746
        );

        /* üöõ */
        public static readonly SingleEmoji ArticulatedLorry = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f69b }),
            name: "articulated lorry",
            searchTerms: new string[] { "articulated", "lorry" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2747
        );

        /* üöú */
        public static readonly SingleEmoji Tractor = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f69c }),
            name: "tractor",
            searchTerms: new string[] { "tractor" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2748
        );

        /* üèéÔ∏è */
        public static readonly SingleEmoji RacingCar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ce, 0xfe0f }),
            name: "racing car",
            searchTerms: new string[] { "racing", "car" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2749
        );

        /* üèçÔ∏è */
        public static readonly SingleEmoji Motorcycle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cd, 0xfe0f }),
            name: "motorcycle",
            searchTerms: new string[] { "motorcycle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2751
        );

        /* üõµ */
        public static readonly SingleEmoji MotorScooter = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6f5 }),
            name: "motor scooter",
            searchTerms: new string[] { "motor", "scooter" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2753
        );

        /* ü¶Ω */
        public static readonly SingleEmoji ManualWheelchair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9bd }),
            name: "manual wheelchair",
            searchTerms: new string[] { "manual", "wheelchair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2754
        );

        /* ü¶º */
        public static readonly SingleEmoji MotorizedWheelchair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9bc }),
            name: "motorized wheelchair",
            searchTerms: new string[] { "motorized", "wheelchair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2755
        );

        /* üõ∫ */
        public static readonly SingleEmoji AutoRickshaw = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6fa }),
            name: "auto rickshaw",
            searchTerms: new string[] { "auto", "rickshaw" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2756
        );

        /* üö≤ */
        public static readonly SingleEmoji Bicycle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b2 }),
            name: "bicycle",
            searchTerms: new string[] { "bicycle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2757
        );

        /* üõ¥ */
        public static readonly SingleEmoji KickScooter = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6f4 }),
            name: "kick scooter",
            searchTerms: new string[] { "kick", "scooter" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2758
        );

        /* üõπ */
        public static readonly SingleEmoji Skateboard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6f9 }),
            name: "skateboard",
            searchTerms: new string[] { "skateboard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2759
        );

        /* üöè */
        public static readonly SingleEmoji BusStop = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f68f }),
            name: "bus stop",
            searchTerms: new string[] { "bus", "stop" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2760
        );

        /* üõ£Ô∏è */
        public static readonly SingleEmoji Motorway = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6e3, 0xfe0f }),
            name: "motorway",
            searchTerms: new string[] { "motorway" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2761
        );

        /* üõ§Ô∏è */
        public static readonly SingleEmoji RailwayTrack = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6e4, 0xfe0f }),
            name: "railway track",
            searchTerms: new string[] { "railway", "track" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2763
        );

        /* üõ¢Ô∏è */
        public static readonly SingleEmoji OilDrum = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6e2, 0xfe0f }),
            name: "oil drum",
            searchTerms: new string[] { "oil", "drum" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2765
        );

        /* ‚õΩ */
        public static readonly SingleEmoji FuelPump = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26fd }),
            name: "fuel pump",
            searchTerms: new string[] { "fuel", "pump" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2767
        );

        /* üö® */
        public static readonly SingleEmoji PoliceCarLight = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a8 }),
            name: "police car light",
            searchTerms: new string[] { "police", "car", "light" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2768
        );

        /* üö• */
        public static readonly SingleEmoji HorizontalTrafficLight = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a5 }),
            name: "horizontal traffic light",
            searchTerms: new string[] { "horizontal", "traffic", "light" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2769
        );

        /* üö¶ */
        public static readonly SingleEmoji VerticalTrafficLight = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a6 }),
            name: "vertical traffic light",
            searchTerms: new string[] { "vertical", "traffic", "light" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2770
        );

        /* üõë */
        public static readonly SingleEmoji StopSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6d1 }),
            name: "stop sign",
            searchTerms: new string[] { "stop", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2771
        );

        /* üöß */
        public static readonly SingleEmoji Construction = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a7 }),
            name: "construction",
            searchTerms: new string[] { "construction" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_GROUND,
            hasGlyph: true,
            sortOrder: 2772
        );

        /* ‚öì */
        public static readonly SingleEmoji Anchor = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2693 }),
            name: "anchor",
            searchTerms: new string[] { "anchor" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_WATER,
            hasGlyph: true,
            sortOrder: 2773
        );

        /* ‚õµ */
        public static readonly SingleEmoji Sailboat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f5 }),
            name: "sailboat",
            searchTerms: new string[] { "sailboat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_WATER,
            hasGlyph: true,
            sortOrder: 2774
        );

        /* üõ∂ */
        public static readonly SingleEmoji Canoe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6f6 }),
            name: "canoe",
            searchTerms: new string[] { "canoe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_WATER,
            hasGlyph: true,
            sortOrder: 2775
        );

        /* üö§ */
        public static readonly SingleEmoji Speedboat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a4 }),
            name: "speedboat",
            searchTerms: new string[] { "speedboat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_WATER,
            hasGlyph: true,
            sortOrder: 2776
        );

        /* üõ≥Ô∏è */
        public static readonly SingleEmoji PassengerShip = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6f3, 0xfe0f }),
            name: "passenger ship",
            searchTerms: new string[] { "passenger", "ship" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_WATER,
            hasGlyph: true,
            sortOrder: 2777
        );

        /* ‚õ¥Ô∏è */
        public static readonly SingleEmoji Ferry = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f4, 0xfe0f }),
            name: "ferry",
            searchTerms: new string[] { "ferry" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_WATER,
            hasGlyph: true,
            sortOrder: 2779
        );

        /* üõ•Ô∏è */
        public static readonly SingleEmoji MotorBoat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6e5, 0xfe0f }),
            name: "motor boat",
            searchTerms: new string[] { "motor", "boat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_WATER,
            hasGlyph: true,
            sortOrder: 2781
        );

        /* üö¢ */
        public static readonly SingleEmoji Ship = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a2 }),
            name: "ship",
            searchTerms: new string[] { "ship" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_WATER,
            hasGlyph: true,
            sortOrder: 2783
        );

        /* ‚úàÔ∏è */
        public static readonly SingleEmoji Airplane = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2708, 0xfe0f }),
            name: "airplane",
            searchTerms: new string[] { "airplane" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2784
        );

        /* üõ©Ô∏è */
        public static readonly SingleEmoji SmallAirplane = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6e9, 0xfe0f }),
            name: "small airplane",
            searchTerms: new string[] { "small", "airplane" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2786
        );

        /* üõ´ */
        public static readonly SingleEmoji AirplaneDeparture = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6eb }),
            name: "airplane departure",
            searchTerms: new string[] { "airplane", "departure" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2788
        );

        /* üõ¨ */
        public static readonly SingleEmoji AirplaneArrival = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6ec }),
            name: "airplane arrival",
            searchTerms: new string[] { "airplane", "arrival" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2789
        );

        /* ü™Ç */
        public static readonly SingleEmoji Parachute = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa82 }),
            name: "parachute",
            searchTerms: new string[] { "parachute" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2790
        );

        /* üí∫ */
        public static readonly SingleEmoji Seat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ba }),
            name: "seat",
            searchTerms: new string[] { "seat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2791
        );

        /* üöÅ */
        public static readonly SingleEmoji Helicopter = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f681 }),
            name: "helicopter",
            searchTerms: new string[] { "helicopter" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2792
        );

        /* üöü */
        public static readonly SingleEmoji SuspensionRailway = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f69f }),
            name: "suspension railway",
            searchTerms: new string[] { "suspension", "railway" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2793
        );

        /* üö† */
        public static readonly SingleEmoji MountainCableway = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a0 }),
            name: "mountain cableway",
            searchTerms: new string[] { "mountain", "cableway" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2794
        );

        /* üö° */
        public static readonly SingleEmoji AerialTramway = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a1 }),
            name: "aerial tramway",
            searchTerms: new string[] { "aerial", "tramway" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2795
        );

        /* üõ∞Ô∏è */
        public static readonly SingleEmoji Satellite = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6f0, 0xfe0f }),
            name: "satellite",
            searchTerms: new string[] { "satellite" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2796
        );

        /* üöÄ */
        public static readonly SingleEmoji Rocket = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f680 }),
            name: "rocket",
            searchTerms: new string[] { "rocket" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2798
        );

        /* üõ∏ */
        public static readonly SingleEmoji FlyingSaucer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6f8 }),
            name: "flying saucer",
            searchTerms: new string[] { "flying", "saucer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TRANSPORT_AIR,
            hasGlyph: true,
            sortOrder: 2799
        );

        /* üõéÔ∏è */
        public static readonly SingleEmoji BellhopBell = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6ce, 0xfe0f }),
            name: "bellhop bell",
            searchTerms: new string[] { "bellhop", "bell" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.HOTEL,
            hasGlyph: true,
            sortOrder: 2800
        );

        /* üß≥ */
        public static readonly SingleEmoji Luggage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f3 }),
            name: "luggage",
            searchTerms: new string[] { "luggage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.HOTEL,
            hasGlyph: true,
            sortOrder: 2802
        );

        /* ‚åõ */
        public static readonly SingleEmoji HourglassDone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x231b }),
            name: "hourglass done",
            searchTerms: new string[] { "hourglass", "done" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2803
        );

        /* ‚è≥ */
        public static readonly SingleEmoji HourglassNotDone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23f3 }),
            name: "hourglass not done",
            searchTerms: new string[] { "hourglass", "not", "done" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2804
        );

        /* ‚åö */
        public static readonly SingleEmoji Watch = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x231a }),
            name: "watch",
            searchTerms: new string[] { "watch" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2805
        );

        /* ‚è∞ */
        public static readonly SingleEmoji AlarmClock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23f0 }),
            name: "alarm clock",
            searchTerms: new string[] { "alarm", "clock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2806
        );

        /* ‚è±Ô∏è */
        public static readonly SingleEmoji Stopwatch = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23f1, 0xfe0f }),
            name: "stopwatch",
            searchTerms: new string[] { "stopwatch" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2807
        );

        /* ‚è≤Ô∏è */
        public static readonly SingleEmoji TimerClock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23f2, 0xfe0f }),
            name: "timer clock",
            searchTerms: new string[] { "timer", "clock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2809
        );

        /* üï∞Ô∏è */
        public static readonly SingleEmoji MantelpieceClock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f570, 0xfe0f }),
            name: "mantelpiece clock",
            searchTerms: new string[] { "mantelpiece", "clock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2811
        );

        /* üïõ */
        public static readonly SingleEmoji TwelveOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f55b }),
            name: "twelve o‚Äôclock",
            searchTerms: new string[] { "twelve", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2813
        );

        /* üïß */
        public static readonly SingleEmoji TwelveThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f567 }),
            name: "twelve-thirty",
            searchTerms: new string[] { "twelve", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2814
        );

        /* üïê */
        public static readonly SingleEmoji OneOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f550 }),
            name: "one o‚Äôclock",
            searchTerms: new string[] { "one", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2815
        );

        /* üïú */
        public static readonly SingleEmoji OneThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f55c }),
            name: "one-thirty",
            searchTerms: new string[] { "one", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2816
        );

        /* üïë */
        public static readonly SingleEmoji TwoOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f551 }),
            name: "two o‚Äôclock",
            searchTerms: new string[] { "two", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2817
        );

        /* üïù */
        public static readonly SingleEmoji TwoThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f55d }),
            name: "two-thirty",
            searchTerms: new string[] { "two", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2818
        );

        /* üïí */
        public static readonly SingleEmoji ThreeOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f552 }),
            name: "three o‚Äôclock",
            searchTerms: new string[] { "three", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2819
        );

        /* üïû */
        public static readonly SingleEmoji ThreeThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f55e }),
            name: "three-thirty",
            searchTerms: new string[] { "three", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2820
        );

        /* üïì */
        public static readonly SingleEmoji FourOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f553 }),
            name: "four o‚Äôclock",
            searchTerms: new string[] { "four", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2821
        );

        /* üïü */
        public static readonly SingleEmoji FourThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f55f }),
            name: "four-thirty",
            searchTerms: new string[] { "four", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2822
        );

        /* üïî */
        public static readonly SingleEmoji FiveOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f554 }),
            name: "five o‚Äôclock",
            searchTerms: new string[] { "five", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2823
        );

        /* üï† */
        public static readonly SingleEmoji FiveThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f560 }),
            name: "five-thirty",
            searchTerms: new string[] { "five", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2824
        );

        /* üïï */
        public static readonly SingleEmoji SixOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f555 }),
            name: "six o‚Äôclock",
            searchTerms: new string[] { "six", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2825
        );

        /* üï° */
        public static readonly SingleEmoji SixThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f561 }),
            name: "six-thirty",
            searchTerms: new string[] { "six", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2826
        );

        /* üïñ */
        public static readonly SingleEmoji SevenOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f556 }),
            name: "seven o‚Äôclock",
            searchTerms: new string[] { "seven", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2827
        );

        /* üï¢ */
        public static readonly SingleEmoji SevenThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f562 }),
            name: "seven-thirty",
            searchTerms: new string[] { "seven", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2828
        );

        /* üïó */
        public static readonly SingleEmoji EightOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f557 }),
            name: "eight o‚Äôclock",
            searchTerms: new string[] { "eight", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2829
        );

        /* üï£ */
        public static readonly SingleEmoji EightThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f563 }),
            name: "eight-thirty",
            searchTerms: new string[] { "eight", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2830
        );

        /* üïò */
        public static readonly SingleEmoji NineOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f558 }),
            name: "nine o‚Äôclock",
            searchTerms: new string[] { "nine", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2831
        );

        /* üï§ */
        public static readonly SingleEmoji NineThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f564 }),
            name: "nine-thirty",
            searchTerms: new string[] { "nine", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2832
        );

        /* üïô */
        public static readonly SingleEmoji TenOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f559 }),
            name: "ten o‚Äôclock",
            searchTerms: new string[] { "ten", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2833
        );

        /* üï• */
        public static readonly SingleEmoji TenThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f565 }),
            name: "ten-thirty",
            searchTerms: new string[] { "ten", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2834
        );

        /* üïö */
        public static readonly SingleEmoji ElevenOclock = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f55a }),
            name: "eleven o‚Äôclock",
            searchTerms: new string[] { "eleven", "oclock" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2835
        );

        /* üï¶ */
        public static readonly SingleEmoji ElevenThirty = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f566 }),
            name: "eleven-thirty",
            searchTerms: new string[] { "eleven", "thirty" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.TIME,
            hasGlyph: true,
            sortOrder: 2836
        );

        /* üåë */
        public static readonly SingleEmoji NewMoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f311 }),
            name: "new moon",
            searchTerms: new string[] { "new", "moon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2837
        );

        /* üåí */
        public static readonly SingleEmoji WaxingCrescentMoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f312 }),
            name: "waxing crescent moon",
            searchTerms: new string[] { "waxing", "crescent", "moon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2838
        );

        /* üåì */
        public static readonly SingleEmoji FirstQuarterMoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f313 }),
            name: "first quarter moon",
            searchTerms: new string[] { "first", "quarter", "moon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2839
        );

        /* üåî */
        public static readonly SingleEmoji WaxingGibbousMoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f314 }),
            name: "waxing gibbous moon",
            searchTerms: new string[] { "waxing", "gibbous", "moon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2840
        );

        /* üåï */
        public static readonly SingleEmoji FullMoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f315 }),
            name: "full moon",
            searchTerms: new string[] { "full", "moon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2841
        );

        /* üåñ */
        public static readonly SingleEmoji WaningGibbousMoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f316 }),
            name: "waning gibbous moon",
            searchTerms: new string[] { "waning", "gibbous", "moon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2842
        );

        /* üåó */
        public static readonly SingleEmoji LastQuarterMoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f317 }),
            name: "last quarter moon",
            searchTerms: new string[] { "last", "quarter", "moon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2843
        );

        /* üåò */
        public static readonly SingleEmoji WaningCrescentMoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f318 }),
            name: "waning crescent moon",
            searchTerms: new string[] { "waning", "crescent", "moon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2844
        );

        /* üåô */
        public static readonly SingleEmoji CrescentMoon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f319 }),
            name: "crescent moon",
            searchTerms: new string[] { "crescent", "moon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2845
        );

        /* üåö */
        public static readonly SingleEmoji NewMoonFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f31a }),
            name: "new moon face",
            searchTerms: new string[] { "new", "moon", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2846
        );

        /* üåõ */
        public static readonly SingleEmoji FirstQuarterMoonFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f31b }),
            name: "first quarter moon face",
            searchTerms: new string[] { "first", "quarter", "moon", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2847
        );

        /* üåú */
        public static readonly SingleEmoji LastQuarterMoonFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f31c }),
            name: "last quarter moon face",
            searchTerms: new string[] { "last", "quarter", "moon", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2848
        );

        /* üå°Ô∏è */
        public static readonly SingleEmoji Thermometer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f321, 0xfe0f }),
            name: "thermometer",
            searchTerms: new string[] { "thermometer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2849
        );

        /* ‚òÄÔ∏è */
        public static readonly SingleEmoji Sun = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2600, 0xfe0f }),
            name: "sun",
            searchTerms: new string[] { "sun" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2851
        );

        /* üåù */
        public static readonly SingleEmoji FullMoonFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f31d }),
            name: "full moon face",
            searchTerms: new string[] { "full", "moon", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2853
        );

        /* üåû */
        public static readonly SingleEmoji SunFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f31e }),
            name: "sun with face",
            searchTerms: new string[] { "sun", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2854
        );

        /* ü™ê */
        public static readonly SingleEmoji RingedPlanet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa90 }),
            name: "ringed planet",
            searchTerms: new string[] { "ringed", "planet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2855
        );

        /* ‚≠ê */
        public static readonly SingleEmoji Star = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2b50 }),
            name: "star",
            searchTerms: new string[] { "star" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2856
        );

        /* üåü */
        public static readonly SingleEmoji GlowingStar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f31f }),
            name: "glowing star",
            searchTerms: new string[] { "glowing", "star" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2857
        );

        /* üå† */
        public static readonly SingleEmoji ShootingStar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f320 }),
            name: "shooting star",
            searchTerms: new string[] { "shooting", "star" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2858
        );

        /* üåå */
        public static readonly SingleEmoji MilkyWay = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f30c }),
            name: "milky way",
            searchTerms: new string[] { "milky", "way" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2859
        );

        /* ‚òÅÔ∏è */
        public static readonly SingleEmoji Cloud = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2601, 0xfe0f }),
            name: "cloud",
            searchTerms: new string[] { "cloud" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2860
        );

        /* ‚õÖ */
        public static readonly SingleEmoji SunBehindCloud = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26c5 }),
            name: "sun behind cloud",
            searchTerms: new string[] { "sun", "behind", "cloud" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2862
        );

        /* ‚õàÔ∏è */
        public static readonly SingleEmoji CloudLightningRain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26c8, 0xfe0f }),
            name: "cloud with lightning and rain",
            searchTerms: new string[] { "cloud", "lightning", "rain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2863
        );

        /* üå§Ô∏è */
        public static readonly SingleEmoji SunBehindSmallCloud = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f324, 0xfe0f }),
            name: "sun behind small cloud",
            searchTerms: new string[] { "sun", "behind", "small", "cloud" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2865
        );

        /* üå•Ô∏è */
        public static readonly SingleEmoji SunBehindLargeCloud = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f325, 0xfe0f }),
            name: "sun behind large cloud",
            searchTerms: new string[] { "sun", "behind", "large", "cloud" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2867
        );

        /* üå¶Ô∏è */
        public static readonly SingleEmoji SunBehindRainCloud = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f326, 0xfe0f }),
            name: "sun behind rain cloud",
            searchTerms: new string[] { "sun", "behind", "rain", "cloud" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2869
        );

        /* üåßÔ∏è */
        public static readonly SingleEmoji CloudRain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f327, 0xfe0f }),
            name: "cloud with rain",
            searchTerms: new string[] { "cloud", "rain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2871
        );

        /* üå®Ô∏è */
        public static readonly SingleEmoji CloudSnow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f328, 0xfe0f }),
            name: "cloud with snow",
            searchTerms: new string[] { "cloud", "snow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2873
        );

        /* üå©Ô∏è */
        public static readonly SingleEmoji CloudLightning = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f329, 0xfe0f }),
            name: "cloud with lightning",
            searchTerms: new string[] { "cloud", "lightning" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2875
        );

        /* üå™Ô∏è */
        public static readonly SingleEmoji Tornado = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f32a, 0xfe0f }),
            name: "tornado",
            searchTerms: new string[] { "tornado" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2877
        );

        /* üå´Ô∏è */
        public static readonly SingleEmoji Fog = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f32b, 0xfe0f }),
            name: "fog",
            searchTerms: new string[] { "fog" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2879
        );

        /* üå¨Ô∏è */
        public static readonly SingleEmoji WindFace = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f32c, 0xfe0f }),
            name: "wind face",
            searchTerms: new string[] { "wind", "face" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2881
        );

        /* üåÄ */
        public static readonly SingleEmoji Cyclone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f300 }),
            name: "cyclone",
            searchTerms: new string[] { "cyclone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2883
        );

        /* üåà */
        public static readonly SingleEmoji Rainbow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f308 }),
            name: "rainbow",
            searchTerms: new string[] { "rainbow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2884
        );

        /* üåÇ */
        public static readonly SingleEmoji ClosedUmbrella = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f302 }),
            name: "closed umbrella",
            searchTerms: new string[] { "closed", "umbrella" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2885
        );

        /* ‚òÇÔ∏è */
        public static readonly SingleEmoji Umbrella = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2602, 0xfe0f }),
            name: "umbrella",
            searchTerms: new string[] { "umbrella" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2886
        );

        /* ‚òî */
        public static readonly SingleEmoji UmbrellaRainDrops = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2614 }),
            name: "umbrella with rain drops",
            searchTerms: new string[] { "umbrella", "rain", "drops" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2888
        );

        /* ‚õ±Ô∏è */
        public static readonly SingleEmoji UmbrellaGround = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f1, 0xfe0f }),
            name: "umbrella on ground",
            searchTerms: new string[] { "umbrella", "ground" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2889
        );

        /* ‚ö° */
        public static readonly SingleEmoji HighVoltage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26a1 }),
            name: "high voltage",
            searchTerms: new string[] { "high", "voltage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2891
        );

        /* ‚ùÑÔ∏è */
        public static readonly SingleEmoji Snowflake = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2744, 0xfe0f }),
            name: "snowflake",
            searchTerms: new string[] { "snowflake" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2892
        );

        /* ‚òÉÔ∏è */
        public static readonly SingleEmoji Snowman = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2603, 0xfe0f }),
            name: "snowman",
            searchTerms: new string[] { "snowman" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2894
        );

        /* ‚õÑ */
        public static readonly SingleEmoji SnowmanSnow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26c4 }),
            name: "snowman without snow",
            searchTerms: new string[] { "snowman", "snow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2896
        );

        /* ‚òÑÔ∏è */
        public static readonly SingleEmoji Comet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2604, 0xfe0f }),
            name: "comet",
            searchTerms: new string[] { "comet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2897
        );

        /* üî• */
        public static readonly SingleEmoji Fire = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f525 }),
            name: "fire",
            searchTerms: new string[] { "fire" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2899
        );

        /* üíß */
        public static readonly SingleEmoji Droplet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a7 }),
            name: "droplet",
            searchTerms: new string[] { "droplet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2900
        );

        /* üåä */
        public static readonly SingleEmoji WaterWave = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f30a }),
            name: "water wave",
            searchTerms: new string[] { "water", "wave" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.TRAVEL_AND_PLACES,
            subgroup: Subgroups.SKY_WEATHER,
            hasGlyph: true,
            sortOrder: 2901
        );

        /* üéÉ */
        public static readonly SingleEmoji JackOLantern = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f383 }),
            name: "jack-o-lantern",
            searchTerms: new string[] { "jack", "o", "lantern" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2902
        );

        /* üéÑ */
        public static readonly SingleEmoji ChristmasTree = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f384 }),
            name: "Christmas tree",
            searchTerms: new string[] { "christmas", "tree" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2903
        );

        /* üéÜ */
        public static readonly SingleEmoji Fireworks = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f386 }),
            name: "fireworks",
            searchTerms: new string[] { "fireworks" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2904
        );

        /* üéá */
        public static readonly SingleEmoji Sparkler = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f387 }),
            name: "sparkler",
            searchTerms: new string[] { "sparkler" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2905
        );

        /* üß® */
        public static readonly SingleEmoji Firecracker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e8 }),
            name: "firecracker",
            searchTerms: new string[] { "firecracker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2906
        );

        /* ‚ú® */
        public static readonly SingleEmoji Sparkles = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2728 }),
            name: "sparkles",
            searchTerms: new string[] { "sparkles" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2907
        );

        /* üéà */
        public static readonly SingleEmoji Balloon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f388 }),
            name: "balloon",
            searchTerms: new string[] { "balloon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2908
        );

        /* üéâ */
        public static readonly SingleEmoji PartyPopper = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f389 }),
            name: "party popper",
            searchTerms: new string[] { "party", "popper" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2909
        );

        /* üéä */
        public static readonly SingleEmoji ConfettiBall = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f38a }),
            name: "confetti ball",
            searchTerms: new string[] { "confetti", "ball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2910
        );

        /* üéã */
        public static readonly SingleEmoji TanabataTree = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f38b }),
            name: "tanabata tree",
            searchTerms: new string[] { "tanabata", "tree" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2911
        );

        /* üéç */
        public static readonly SingleEmoji PineDecoration = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f38d }),
            name: "pine decoration",
            searchTerms: new string[] { "pine", "decoration" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2912
        );

        /* üéé */
        public static readonly SingleEmoji JapaneseDolls = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f38e }),
            name: "Japanese dolls",
            searchTerms: new string[] { "japanese", "dolls" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2913
        );

        /* üéè */
        public static readonly SingleEmoji CarpStreamer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f38f }),
            name: "carp streamer",
            searchTerms: new string[] { "carp", "streamer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2914
        );

        /* üéê */
        public static readonly SingleEmoji WindChime = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f390 }),
            name: "wind chime",
            searchTerms: new string[] { "wind", "chime" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2915
        );

        /* üéë */
        public static readonly SingleEmoji MoonViewingCeremony = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f391 }),
            name: "moon viewing ceremony",
            searchTerms: new string[] { "moon", "viewing", "ceremony" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2916
        );

        /* üßß */
        public static readonly SingleEmoji RedEnvelope = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e7 }),
            name: "red envelope",
            searchTerms: new string[] { "red", "envelope" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2917
        );

        /* üéÄ */
        public static readonly SingleEmoji Ribbon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f380 }),
            name: "ribbon",
            searchTerms: new string[] { "ribbon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2918
        );

        /* üéÅ */
        public static readonly SingleEmoji WrappedGift = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f381 }),
            name: "wrapped gift",
            searchTerms: new string[] { "wrapped", "gift" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2919
        );

        /* üéóÔ∏è */
        public static readonly SingleEmoji ReminderRibbon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f397, 0xfe0f }),
            name: "reminder ribbon",
            searchTerms: new string[] { "reminder", "ribbon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2920
        );

        /* üéüÔ∏è */
        public static readonly SingleEmoji AdmissionTickets = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f39f, 0xfe0f }),
            name: "admission tickets",
            searchTerms: new string[] { "admission", "tickets" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2922
        );

        /* üé´ */
        public static readonly SingleEmoji Ticket = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ab }),
            name: "ticket",
            searchTerms: new string[] { "ticket" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.EVENT,
            hasGlyph: true,
            sortOrder: 2924
        );

        /* üéñÔ∏è */
        public static readonly SingleEmoji MilitaryMedal = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f396, 0xfe0f }),
            name: "military medal",
            searchTerms: new string[] { "military", "medal" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.AWARD_MEDAL,
            hasGlyph: true,
            sortOrder: 2925
        );

        /* üèÜ */
        public static readonly SingleEmoji Trophy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c6 }),
            name: "trophy",
            searchTerms: new string[] { "trophy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.AWARD_MEDAL,
            hasGlyph: true,
            sortOrder: 2927
        );

        /* üèÖ */
        public static readonly SingleEmoji SportsMedal = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c5 }),
            name: "sports medal",
            searchTerms: new string[] { "sports", "medal" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.AWARD_MEDAL,
            hasGlyph: true,
            sortOrder: 2928
        );

        /* ü•á */
        public static readonly SingleEmoji FirstPlaceMedal = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f947 }),
            name: "1st place medal",
            searchTerms: new string[] { "first", "place", "medal" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.AWARD_MEDAL,
            hasGlyph: true,
            sortOrder: 2929
        );

        /* ü•à */
        public static readonly SingleEmoji SecondPlaceMedal = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f948 }),
            name: "2nd place medal",
            searchTerms: new string[] { "second", "place", "medal" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.AWARD_MEDAL,
            hasGlyph: true,
            sortOrder: 2930
        );

        /* ü•â */
        public static readonly SingleEmoji ThirdPlaceMedal = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f949 }),
            name: "3rd place medal",
            searchTerms: new string[] { "third", "place", "medal" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.AWARD_MEDAL,
            hasGlyph: true,
            sortOrder: 2931
        );

        /* ‚öΩ */
        public static readonly SingleEmoji SoccerBall = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26bd }),
            name: "soccer ball",
            searchTerms: new string[] { "soccer", "ball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2932
        );

        /* ‚öæ */
        public static readonly SingleEmoji Baseball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26be }),
            name: "baseball",
            searchTerms: new string[] { "baseball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2933
        );

        /* ü•é */
        public static readonly SingleEmoji Softball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f94e }),
            name: "softball",
            searchTerms: new string[] { "softball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2934
        );

        /* üèÄ */
        public static readonly SingleEmoji Basketball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c0 }),
            name: "basketball",
            searchTerms: new string[] { "basketball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2935
        );

        /* üèê */
        public static readonly SingleEmoji Volleyball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d0 }),
            name: "volleyball",
            searchTerms: new string[] { "volleyball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2936
        );

        /* üèà */
        public static readonly SingleEmoji AmericanFootball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c8 }),
            name: "american football",
            searchTerms: new string[] { "american", "football" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2937
        );

        /* üèâ */
        public static readonly SingleEmoji RugbyFootball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c9 }),
            name: "rugby football",
            searchTerms: new string[] { "rugby", "football" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2938
        );

        /* üéæ */
        public static readonly SingleEmoji Tennis = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3be }),
            name: "tennis",
            searchTerms: new string[] { "tennis" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2939
        );

        /* ü•è */
        public static readonly SingleEmoji FlyingDisc = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f94f }),
            name: "flying disc",
            searchTerms: new string[] { "flying", "disc" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2940
        );

        /* üé≥ */
        public static readonly SingleEmoji Bowling = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b3 }),
            name: "bowling",
            searchTerms: new string[] { "bowling" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2941
        );

        /* üèè */
        public static readonly SingleEmoji CricketGame = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3cf }),
            name: "cricket game",
            searchTerms: new string[] { "cricket", "game" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2942
        );

        /* üèë */
        public static readonly SingleEmoji FieldHockey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d1 }),
            name: "field hockey",
            searchTerms: new string[] { "field", "hockey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2943
        );

        /* üèí */
        public static readonly SingleEmoji IceHockey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d2 }),
            name: "ice hockey",
            searchTerms: new string[] { "ice", "hockey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2944
        );

        /* ü•ç */
        public static readonly SingleEmoji Lacrosse = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f94d }),
            name: "lacrosse",
            searchTerms: new string[] { "lacrosse" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2945
        );

        /* üèì */
        public static readonly SingleEmoji PingPong = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3d3 }),
            name: "ping pong",
            searchTerms: new string[] { "ping", "pong" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2946
        );

        /* üè∏ */
        public static readonly SingleEmoji Badminton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f8 }),
            name: "badminton",
            searchTerms: new string[] { "badminton" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2947
        );

        /* ü•ä */
        public static readonly SingleEmoji BoxingGlove = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f94a }),
            name: "boxing glove",
            searchTerms: new string[] { "boxing", "glove" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2948
        );

        /* ü•ã */
        public static readonly SingleEmoji MartialArtsUniform = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f94b }),
            name: "martial arts uniform",
            searchTerms: new string[] { "martial", "arts", "uniform" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2949
        );

        /* ü•Ö */
        public static readonly SingleEmoji GoalNet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f945 }),
            name: "goal net",
            searchTerms: new string[] { "goal", "net" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2950
        );

        /* ‚õ≥ */
        public static readonly SingleEmoji FlagHole = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f3 }),
            name: "flag in hole",
            searchTerms: new string[] { "flag", "hole" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2951
        );

        /* ‚õ∏Ô∏è */
        public static readonly SingleEmoji IceSkate = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26f8, 0xfe0f }),
            name: "ice skate",
            searchTerms: new string[] { "ice", "skate" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2952
        );

        /* üé£ */
        public static readonly SingleEmoji FishingPole = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a3 }),
            name: "fishing pole",
            searchTerms: new string[] { "fishing", "pole" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2954
        );

        /* ü§ø */
        public static readonly SingleEmoji DivingMask = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f93f }),
            name: "diving mask",
            searchTerms: new string[] { "diving", "mask" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2955
        );

        /* üéΩ */
        public static readonly SingleEmoji RunningShirt = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3bd }),
            name: "running shirt",
            searchTerms: new string[] { "running", "shirt" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2956
        );

        /* üéø */
        public static readonly SingleEmoji Skis = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3bf }),
            name: "skis",
            searchTerms: new string[] { "skis" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2957
        );

        /* üõ∑ */
        public static readonly SingleEmoji Sled = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6f7 }),
            name: "sled",
            searchTerms: new string[] { "sled" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2958
        );

        /* ü•å */
        public static readonly SingleEmoji CurlingStone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f94c }),
            name: "curling stone",
            searchTerms: new string[] { "curling", "stone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.SPORT,
            hasGlyph: true,
            sortOrder: 2959
        );

        /* üéØ */
        public static readonly SingleEmoji DirectHit = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3af }),
            name: "direct hit",
            searchTerms: new string[] { "direct", "hit" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2960
        );

        /* ü™Ä */
        public static readonly SingleEmoji YoYo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa80 }),
            name: "yo-yo",
            searchTerms: new string[] { "yo", "yo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2961
        );

        /* ü™Å */
        public static readonly SingleEmoji Kite = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa81 }),
            name: "kite",
            searchTerms: new string[] { "kite" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2962
        );

        /* üé± */
        public static readonly SingleEmoji Pool8Ball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b1 }),
            name: "pool 8 ball",
            searchTerms: new string[] { "pool", "8", "ball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2963
        );

        /* üîÆ */
        public static readonly SingleEmoji CrystalBall = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f52e }),
            name: "crystal ball",
            searchTerms: new string[] { "crystal", "ball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2964
        );

        /* üßø */
        public static readonly SingleEmoji NazarAmulet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ff }),
            name: "nazar amulet",
            searchTerms: new string[] { "nazar", "amulet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2965
        );

        /* üéÆ */
        public static readonly SingleEmoji VideoGame = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ae }),
            name: "video game",
            searchTerms: new string[] { "video", "game" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2966
        );

        /* üïπÔ∏è */
        public static readonly SingleEmoji Joystick = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f579, 0xfe0f }),
            name: "joystick",
            searchTerms: new string[] { "joystick" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2967
        );

        /* üé∞ */
        public static readonly SingleEmoji SlotMachine = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b0 }),
            name: "slot machine",
            searchTerms: new string[] { "slot", "machine" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2969
        );

        /* üé≤ */
        public static readonly SingleEmoji GameDie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b2 }),
            name: "game die",
            searchTerms: new string[] { "game", "die" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2970
        );

        /* üß© */
        public static readonly SingleEmoji PuzzlePiece = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e9 }),
            name: "puzzle piece",
            searchTerms: new string[] { "puzzle", "piece" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2971
        );

        /* üß∏ */
        public static readonly SingleEmoji TeddyBear = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f8 }),
            name: "teddy bear",
            searchTerms: new string[] { "teddy", "bear" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2972
        );

        /* ‚ô†Ô∏è */
        public static readonly SingleEmoji SpadeSuit = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2660, 0xfe0f }),
            name: "spade suit",
            searchTerms: new string[] { "spade", "suit" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2973
        );

        /* ‚ô•Ô∏è */
        public static readonly SingleEmoji HeartSuit = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2665, 0xfe0f }),
            name: "heart suit",
            searchTerms: new string[] { "heart", "suit" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2975
        );

        /* ‚ô¶Ô∏è */
        public static readonly SingleEmoji DiamondSuit = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2666, 0xfe0f }),
            name: "diamond suit",
            searchTerms: new string[] { "diamond", "suit" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2977
        );

        /* ‚ô£Ô∏è */
        public static readonly SingleEmoji ClubSuit = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2663, 0xfe0f }),
            name: "club suit",
            searchTerms: new string[] { "club", "suit" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2979
        );

        /* ‚ôüÔ∏è */
        public static readonly SingleEmoji ChessPawn = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x265f, 0xfe0f }),
            name: "chess pawn",
            searchTerms: new string[] { "chess", "pawn" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2981
        );

        /* üÉè */
        public static readonly SingleEmoji Joker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f0cf }),
            name: "joker",
            searchTerms: new string[] { "joker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2983
        );

        /* üÄÑ */
        public static readonly SingleEmoji MahjongRedDragon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f004 }),
            name: "mahjong red dragon",
            searchTerms: new string[] { "mahjong", "red", "dragon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2984
        );

        /* üé¥ */
        public static readonly SingleEmoji FlowerPlayingCards = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b4 }),
            name: "flower playing cards",
            searchTerms: new string[] { "flower", "playing", "cards" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.GAME,
            hasGlyph: true,
            sortOrder: 2985
        );

        /* üé≠ */
        public static readonly SingleEmoji PerformingArts = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ad }),
            name: "performing arts",
            searchTerms: new string[] { "performing", "arts" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.ARTS_CRAFTS,
            hasGlyph: true,
            sortOrder: 2986
        );

        /* üñºÔ∏è */
        public static readonly SingleEmoji FramedPicture = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5bc, 0xfe0f }),
            name: "framed picture",
            searchTerms: new string[] { "framed", "picture" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.ARTS_CRAFTS,
            hasGlyph: true,
            sortOrder: 2987
        );

        /* üé® */
        public static readonly SingleEmoji ArtistPalette = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a8 }),
            name: "artist palette",
            searchTerms: new string[] { "artist", "palette" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.ARTS_CRAFTS,
            hasGlyph: true,
            sortOrder: 2989
        );

        /* üßµ */
        public static readonly SingleEmoji Thread = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f5 }),
            name: "thread",
            searchTerms: new string[] { "thread" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.ARTS_CRAFTS,
            hasGlyph: true,
            sortOrder: 2990
        );

        /* üß∂ */
        public static readonly SingleEmoji Yarn = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f6 }),
            name: "yarn",
            searchTerms: new string[] { "yarn" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.ACTIVITIES,
            subgroup: Subgroups.ARTS_CRAFTS,
            hasGlyph: true,
            sortOrder: 2991
        );

        /* üëì */
        public static readonly SingleEmoji Glasses = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f453 }),
            name: "glasses",
            searchTerms: new string[] { "glasses" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 2992
        );

        /* üï∂Ô∏è */
        public static readonly SingleEmoji Sunglasses = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f576, 0xfe0f }),
            name: "sunglasses",
            searchTerms: new string[] { "sunglasses" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 2993
        );

        /* ü•Ω */
        public static readonly SingleEmoji Goggles = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f97d }),
            name: "goggles",
            searchTerms: new string[] { "goggles" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 2995
        );

        /* ü•º */
        public static readonly SingleEmoji LabCoat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f97c }),
            name: "lab coat",
            searchTerms: new string[] { "lab", "coat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 2996
        );

        /* ü¶∫ */
        public static readonly SingleEmoji SafetyVest = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ba }),
            name: "safety vest",
            searchTerms: new string[] { "safety", "vest" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 2997
        );

        /* üëî */
        public static readonly SingleEmoji Necktie = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f454 }),
            name: "necktie",
            searchTerms: new string[] { "necktie" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 2998
        );

        /* üëï */
        public static readonly SingleEmoji TShirt = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f455 }),
            name: "t-shirt",
            searchTerms: new string[] { "t", "shirt" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 2999
        );

        /* üëñ */
        public static readonly SingleEmoji Jeans = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f456 }),
            name: "jeans",
            searchTerms: new string[] { "jeans" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3000
        );

        /* üß£ */
        public static readonly SingleEmoji Scarf = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e3 }),
            name: "scarf",
            searchTerms: new string[] { "scarf" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3001
        );

        /* üß§ */
        public static readonly SingleEmoji Gloves = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e4 }),
            name: "gloves",
            searchTerms: new string[] { "gloves" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3002
        );

        /* üß• */
        public static readonly SingleEmoji Coat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e5 }),
            name: "coat",
            searchTerms: new string[] { "coat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3003
        );

        /* üß¶ */
        public static readonly SingleEmoji Socks = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e6 }),
            name: "socks",
            searchTerms: new string[] { "socks" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3004
        );

        /* üëó */
        public static readonly SingleEmoji Dress = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f457 }),
            name: "dress",
            searchTerms: new string[] { "dress" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3005
        );

        /* üëò */
        public static readonly SingleEmoji Kimono = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f458 }),
            name: "kimono",
            searchTerms: new string[] { "kimono" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3006
        );

        /* ü•ª */
        public static readonly SingleEmoji Sari = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f97b }),
            name: "sari",
            searchTerms: new string[] { "sari" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3007
        );

        /* ü©± */
        public static readonly SingleEmoji OnePieceSwimsuit = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa71 }),
            name: "one-piece swimsuit",
            searchTerms: new string[] { "one", "piece", "swimsuit" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3008
        );

        /* ü©≤ */
        public static readonly SingleEmoji SwimBrief = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa72 }),
            name: "swim brief",
            searchTerms: new string[] { "swim", "brief" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3009
        );

        /* ü©≥ */
        public static readonly SingleEmoji Shorts = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa73 }),
            name: "shorts",
            searchTerms: new string[] { "shorts" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3010
        );

        /* üëô */
        public static readonly SingleEmoji Bikini = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f459 }),
            name: "bikini",
            searchTerms: new string[] { "bikini" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3011
        );

        /* üëö */
        public static readonly SingleEmoji WomansClothes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f45a }),
            name: "woman‚Äôs clothes",
            searchTerms: new string[] { "womans", "clothes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3012
        );

        /* üëõ */
        public static readonly SingleEmoji Purse = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f45b }),
            name: "purse",
            searchTerms: new string[] { "purse" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3013
        );

        /* üëú */
        public static readonly SingleEmoji Handbag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f45c }),
            name: "handbag",
            searchTerms: new string[] { "handbag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3014
        );

        /* üëù */
        public static readonly SingleEmoji ClutchBag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f45d }),
            name: "clutch bag",
            searchTerms: new string[] { "clutch", "bag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3015
        );

        /* üõçÔ∏è */
        public static readonly SingleEmoji ShoppingBags = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6cd, 0xfe0f }),
            name: "shopping bags",
            searchTerms: new string[] { "shopping", "bags" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3016
        );

        /* üéí */
        public static readonly SingleEmoji Backpack = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f392 }),
            name: "backpack",
            searchTerms: new string[] { "backpack" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3018
        );

        /* üëû */
        public static readonly SingleEmoji MansShoe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f45e }),
            name: "man‚Äôs shoe",
            searchTerms: new string[] { "mans", "shoe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3019
        );

        /* üëü */
        public static readonly SingleEmoji RunningShoe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f45f }),
            name: "running shoe",
            searchTerms: new string[] { "running", "shoe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3020
        );

        /* ü•æ */
        public static readonly SingleEmoji HikingBoot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f97e }),
            name: "hiking boot",
            searchTerms: new string[] { "hiking", "boot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3021
        );

        /* ü•ø */
        public static readonly SingleEmoji FlatShoe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f97f }),
            name: "flat shoe",
            searchTerms: new string[] { "flat", "shoe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3022
        );

        /* üë† */
        public static readonly SingleEmoji HighHeeledShoe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f460 }),
            name: "high-heeled shoe",
            searchTerms: new string[] { "high", "heeled", "shoe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3023
        );

        /* üë° */
        public static readonly SingleEmoji WomansSandal = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f461 }),
            name: "woman‚Äôs sandal",
            searchTerms: new string[] { "womans", "sandal" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3024
        );

        /* ü©∞ */
        public static readonly SingleEmoji BalletShoes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa70 }),
            name: "ballet shoes",
            searchTerms: new string[] { "ballet", "shoes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3025
        );

        /* üë¢ */
        public static readonly SingleEmoji WomansBoot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f462 }),
            name: "woman‚Äôs boot",
            searchTerms: new string[] { "womans", "boot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3026
        );

        /* üëë */
        public static readonly SingleEmoji Crown = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f451 }),
            name: "crown",
            searchTerms: new string[] { "crown" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3027
        );

        /* üëí */
        public static readonly SingleEmoji WomansHat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f452 }),
            name: "woman‚Äôs hat",
            searchTerms: new string[] { "womans", "hat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3028
        );

        /* üé© */
        public static readonly SingleEmoji TopHat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a9 }),
            name: "top hat",
            searchTerms: new string[] { "top", "hat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3029
        );

        /* üéì */
        public static readonly SingleEmoji GraduationCap = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f393 }),
            name: "graduation cap",
            searchTerms: new string[] { "graduation", "cap" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3030
        );

        /* üß¢ */
        public static readonly SingleEmoji BilledCap = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9e2 }),
            name: "billed cap",
            searchTerms: new string[] { "billed", "cap" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3031
        );

        /* ‚õëÔ∏è */
        public static readonly SingleEmoji RescueWorkersHelmet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26d1, 0xfe0f }),
            name: "rescue worker‚Äôs helmet",
            searchTerms: new string[] { "rescue", "workers", "helmet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3032
        );

        /* üìø */
        public static readonly SingleEmoji PrayerBeads = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ff }),
            name: "prayer beads",
            searchTerms: new string[] { "prayer", "beads" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3034
        );

        /* üíÑ */
        public static readonly SingleEmoji Lipstick = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f484 }),
            name: "lipstick",
            searchTerms: new string[] { "lipstick" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3035
        );

        /* üíç */
        public static readonly SingleEmoji Ring = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f48d }),
            name: "ring",
            searchTerms: new string[] { "ring" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3036
        );

        /* üíé */
        public static readonly SingleEmoji GemStone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f48e }),
            name: "gem stone",
            searchTerms: new string[] { "gem", "stone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.CLOTHING,
            hasGlyph: true,
            sortOrder: 3037
        );

        /* üîá */
        public static readonly SingleEmoji MutedSpeaker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f507 }),
            name: "muted speaker",
            searchTerms: new string[] { "muted", "speaker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SOUND,
            hasGlyph: true,
            sortOrder: 3038
        );

        /* üîà */
        public static readonly SingleEmoji SpeakerLowVolume = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f508 }),
            name: "speaker low volume",
            searchTerms: new string[] { "speaker", "low", "volume" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SOUND,
            hasGlyph: true,
            sortOrder: 3039
        );

        /* üîâ */
        public static readonly SingleEmoji SpeakerMediumVolume = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f509 }),
            name: "speaker medium volume",
            searchTerms: new string[] { "speaker", "medium", "volume" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SOUND,
            hasGlyph: true,
            sortOrder: 3040
        );

        /* üîä */
        public static readonly SingleEmoji SpeakerHighVolume = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f50a }),
            name: "speaker high volume",
            searchTerms: new string[] { "speaker", "high", "volume" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SOUND,
            hasGlyph: true,
            sortOrder: 3041
        );

        /* üì¢ */
        public static readonly SingleEmoji Loudspeaker = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e2 }),
            name: "loudspeaker",
            searchTerms: new string[] { "loudspeaker" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SOUND,
            hasGlyph: true,
            sortOrder: 3042
        );

        /* üì£ */
        public static readonly SingleEmoji Megaphone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e3 }),
            name: "megaphone",
            searchTerms: new string[] { "megaphone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SOUND,
            hasGlyph: true,
            sortOrder: 3043
        );

        /* üìØ */
        public static readonly SingleEmoji PostalHorn = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ef }),
            name: "postal horn",
            searchTerms: new string[] { "postal", "horn" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SOUND,
            hasGlyph: true,
            sortOrder: 3044
        );

        /* üîî */
        public static readonly SingleEmoji Bell = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f514 }),
            name: "bell",
            searchTerms: new string[] { "bell" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SOUND,
            hasGlyph: true,
            sortOrder: 3045
        );

        /* üîï */
        public static readonly SingleEmoji BellSlash = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f515 }),
            name: "bell with slash",
            searchTerms: new string[] { "bell", "slash" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SOUND,
            hasGlyph: true,
            sortOrder: 3046
        );

        /* üéº */
        public static readonly SingleEmoji MusicalScore = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3bc }),
            name: "musical score",
            searchTerms: new string[] { "musical", "score" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSIC,
            hasGlyph: true,
            sortOrder: 3047
        );

        /* üéµ */
        public static readonly SingleEmoji MusicalNote = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b5 }),
            name: "musical note",
            searchTerms: new string[] { "musical", "note" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSIC,
            hasGlyph: true,
            sortOrder: 3048
        );

        /* üé∂ */
        public static readonly SingleEmoji MusicalNotes = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b6 }),
            name: "musical notes",
            searchTerms: new string[] { "musical", "notes" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSIC,
            hasGlyph: true,
            sortOrder: 3049
        );

        /* üéôÔ∏è */
        public static readonly SingleEmoji StudioMicrophone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f399, 0xfe0f }),
            name: "studio microphone",
            searchTerms: new string[] { "studio", "microphone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSIC,
            hasGlyph: true,
            sortOrder: 3050
        );

        /* üéöÔ∏è */
        public static readonly SingleEmoji LevelSlider = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f39a, 0xfe0f }),
            name: "level slider",
            searchTerms: new string[] { "level", "slider" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSIC,
            hasGlyph: true,
            sortOrder: 3052
        );

        /* üéõÔ∏è */
        public static readonly SingleEmoji ControlKnobs = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f39b, 0xfe0f }),
            name: "control knobs",
            searchTerms: new string[] { "control", "knobs" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSIC,
            hasGlyph: true,
            sortOrder: 3054
        );

        /* üé§ */
        public static readonly SingleEmoji Microphone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a4 }),
            name: "microphone",
            searchTerms: new string[] { "microphone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSIC,
            hasGlyph: true,
            sortOrder: 3056
        );

        /* üéß */
        public static readonly SingleEmoji Headphone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a7 }),
            name: "headphone",
            searchTerms: new string[] { "headphone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSIC,
            hasGlyph: true,
            sortOrder: 3057
        );

        /* üìª */
        public static readonly SingleEmoji Radio = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4fb }),
            name: "radio",
            searchTerms: new string[] { "radio" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSIC,
            hasGlyph: true,
            sortOrder: 3058
        );

        /* üé∑ */
        public static readonly SingleEmoji Saxophone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b7 }),
            name: "saxophone",
            searchTerms: new string[] { "saxophone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSICAL_INSTRUMENT,
            hasGlyph: true,
            sortOrder: 3059
        );

        /* üé∏ */
        public static readonly SingleEmoji Guitar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b8 }),
            name: "guitar",
            searchTerms: new string[] { "guitar" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSICAL_INSTRUMENT,
            hasGlyph: true,
            sortOrder: 3060
        );

        /* üéπ */
        public static readonly SingleEmoji MusicalKeyboard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3b9 }),
            name: "musical keyboard",
            searchTerms: new string[] { "musical", "keyboard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSICAL_INSTRUMENT,
            hasGlyph: true,
            sortOrder: 3061
        );

        /* üé∫ */
        public static readonly SingleEmoji Trumpet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ba }),
            name: "trumpet",
            searchTerms: new string[] { "trumpet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSICAL_INSTRUMENT,
            hasGlyph: true,
            sortOrder: 3062
        );

        /* üéª */
        public static readonly SingleEmoji Violin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3bb }),
            name: "violin",
            searchTerms: new string[] { "violin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSICAL_INSTRUMENT,
            hasGlyph: true,
            sortOrder: 3063
        );

        /* ü™ï */
        public static readonly SingleEmoji Banjo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa95 }),
            name: "banjo",
            searchTerms: new string[] { "banjo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSICAL_INSTRUMENT,
            hasGlyph: true,
            sortOrder: 3064
        );

        /* ü•Å */
        public static readonly SingleEmoji Drum = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f941 }),
            name: "drum",
            searchTerms: new string[] { "drum" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MUSICAL_INSTRUMENT,
            hasGlyph: true,
            sortOrder: 3065
        );

        /* üì± */
        public static readonly SingleEmoji MobilePhone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f1 }),
            name: "mobile phone",
            searchTerms: new string[] { "mobile", "phone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.PHONE,
            hasGlyph: true,
            sortOrder: 3066
        );

        /* üì≤ */
        public static readonly SingleEmoji MobilePhoneArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f2 }),
            name: "mobile phone with arrow",
            searchTerms: new string[] { "mobile", "phone", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.PHONE,
            hasGlyph: true,
            sortOrder: 3067
        );

        /* ‚òéÔ∏è */
        public static readonly SingleEmoji Telephone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x260e, 0xfe0f }),
            name: "telephone",
            searchTerms: new string[] { "telephone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.PHONE,
            hasGlyph: true,
            sortOrder: 3068
        );

        /* üìû */
        public static readonly SingleEmoji TelephoneReceiver = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4de }),
            name: "telephone receiver",
            searchTerms: new string[] { "telephone", "receiver" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.PHONE,
            hasGlyph: true,
            sortOrder: 3070
        );

        /* üìü */
        public static readonly SingleEmoji Pager = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4df }),
            name: "pager",
            searchTerms: new string[] { "pager" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.PHONE,
            hasGlyph: true,
            sortOrder: 3071
        );

        /* üì† */
        public static readonly SingleEmoji FaxMachine = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e0 }),
            name: "fax machine",
            searchTerms: new string[] { "fax", "machine" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.PHONE,
            hasGlyph: true,
            sortOrder: 3072
        );

        /* üîã */
        public static readonly SingleEmoji Battery = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f50b }),
            name: "battery",
            searchTerms: new string[] { "battery" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3073
        );

        /* üîå */
        public static readonly SingleEmoji ElectricPlug = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f50c }),
            name: "electric plug",
            searchTerms: new string[] { "electric", "plug" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3074
        );

        /* üíª */
        public static readonly SingleEmoji LaptopComputer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4bb }),
            name: "laptop computer",
            searchTerms: new string[] { "laptop", "computer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3075
        );

        /* üñ•Ô∏è */
        public static readonly SingleEmoji DesktopComputer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5a5, 0xfe0f }),
            name: "desktop computer",
            searchTerms: new string[] { "desktop", "computer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3076
        );

        /* üñ®Ô∏è */
        public static readonly SingleEmoji Printer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5a8, 0xfe0f }),
            name: "printer",
            searchTerms: new string[] { "printer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3078
        );

        /* ‚å®Ô∏è */
        public static readonly SingleEmoji Keyboard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2328, 0xfe0f }),
            name: "keyboard",
            searchTerms: new string[] { "keyboard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3080
        );

        /* üñ±Ô∏è */
        public static readonly SingleEmoji ComputerMouse = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5b1, 0xfe0f }),
            name: "computer mouse",
            searchTerms: new string[] { "computer", "mouse" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3082
        );

        /* üñ≤Ô∏è */
        public static readonly SingleEmoji Trackball = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5b2, 0xfe0f }),
            name: "trackball",
            searchTerms: new string[] { "trackball" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3084
        );

        /* üíΩ */
        public static readonly SingleEmoji ComputerDisk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4bd }),
            name: "computer disk",
            searchTerms: new string[] { "computer", "disk" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3086
        );

        /* üíæ */
        public static readonly SingleEmoji FloppyDisk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4be }),
            name: "floppy disk",
            searchTerms: new string[] { "floppy", "disk" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3087
        );

        /* üíø */
        public static readonly SingleEmoji OpticalDisk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4bf }),
            name: "optical disk",
            searchTerms: new string[] { "optical", "disk" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3088
        );

        /* üìÄ */
        public static readonly SingleEmoji Dvd = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c0 }),
            name: "dvd",
            searchTerms: new string[] { "dvd" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3089
        );

        /* üßÆ */
        public static readonly SingleEmoji Abacus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ee }),
            name: "abacus",
            searchTerms: new string[] { "abacus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.COMPUTER,
            hasGlyph: true,
            sortOrder: 3090
        );

        /* üé• */
        public static readonly SingleEmoji MovieCamera = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a5 }),
            name: "movie camera",
            searchTerms: new string[] { "movie", "camera" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3091
        );

        /* üéûÔ∏è */
        public static readonly SingleEmoji FilmFrames = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f39e, 0xfe0f }),
            name: "film frames",
            searchTerms: new string[] { "film", "frames" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3092
        );

        /* üìΩÔ∏è */
        public static readonly SingleEmoji FilmProjector = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4fd, 0xfe0f }),
            name: "film projector",
            searchTerms: new string[] { "film", "projector" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3094
        );

        /* üé¨ */
        public static readonly SingleEmoji ClapperBoard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ac }),
            name: "clapper board",
            searchTerms: new string[] { "clapper", "board" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3096
        );

        /* üì∫ */
        public static readonly SingleEmoji Television = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4fa }),
            name: "television",
            searchTerms: new string[] { "television" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3097
        );

        /* üì∑ */
        public static readonly SingleEmoji Camera = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f7 }),
            name: "camera",
            searchTerms: new string[] { "camera" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3098
        );

        /* üì∏ */
        public static readonly SingleEmoji CameraFlash = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f8 }),
            name: "camera with flash",
            searchTerms: new string[] { "camera", "flash" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3099
        );

        /* üìπ */
        public static readonly SingleEmoji VideoCamera = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f9 }),
            name: "video camera",
            searchTerms: new string[] { "video", "camera" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3100
        );

        /* üìº */
        public static readonly SingleEmoji Videocassette = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4fc }),
            name: "videocassette",
            searchTerms: new string[] { "videocassette" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3101
        );

        /* üîç */
        public static readonly SingleEmoji MagnifyingGlassTiltedLeft = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f50d }),
            name: "magnifying glass tilted left",
            searchTerms: new string[] { "magnifying", "glass", "tilted", "left" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3102
        );

        /* üîé */
        public static readonly SingleEmoji MagnifyingGlassTiltedRight = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f50e }),
            name: "magnifying glass tilted right",
            searchTerms: new string[] { "magnifying", "glass", "tilted", "right" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3103
        );

        /* üïØÔ∏è */
        public static readonly SingleEmoji Candle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f56f, 0xfe0f }),
            name: "candle",
            searchTerms: new string[] { "candle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3104
        );

        /* üí° */
        public static readonly SingleEmoji LightBulb = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a1 }),
            name: "light bulb",
            searchTerms: new string[] { "light", "bulb" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3106
        );

        /* üî¶ */
        public static readonly SingleEmoji Flashlight = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f526 }),
            name: "flashlight",
            searchTerms: new string[] { "flashlight" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3107
        );

        /* üèÆ */
        public static readonly SingleEmoji RedPaperLantern = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3ee }),
            name: "red paper lantern",
            searchTerms: new string[] { "red", "paper", "lantern" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3108
        );

        /* ü™î */
        public static readonly SingleEmoji DiyaLamp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa94 }),
            name: "diya lamp",
            searchTerms: new string[] { "diya", "lamp" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LIGHT_VIDEO,
            hasGlyph: true,
            sortOrder: 3109
        );

        /* üìî */
        public static readonly SingleEmoji NotebookDecorativeCover = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d4 }),
            name: "notebook with decorative cover",
            searchTerms: new string[] { "notebook", "decorative", "cover" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3110
        );

        /* üìï */
        public static readonly SingleEmoji ClosedBook = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d5 }),
            name: "closed book",
            searchTerms: new string[] { "closed", "book" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3111
        );

        /* üìñ */
        public static readonly SingleEmoji OpenBook = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d6 }),
            name: "open book",
            searchTerms: new string[] { "open", "book" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3112
        );

        /* üìó */
        public static readonly SingleEmoji GreenBook = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d7 }),
            name: "green book",
            searchTerms: new string[] { "green", "book" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3113
        );

        /* üìò */
        public static readonly SingleEmoji BlueBook = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d8 }),
            name: "blue book",
            searchTerms: new string[] { "blue", "book" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3114
        );

        /* üìô */
        public static readonly SingleEmoji OrangeBook = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d9 }),
            name: "orange book",
            searchTerms: new string[] { "orange", "book" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3115
        );

        /* üìö */
        public static readonly SingleEmoji Books = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4da }),
            name: "books",
            searchTerms: new string[] { "books" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3116
        );

        /* üìì */
        public static readonly SingleEmoji Notebook = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d3 }),
            name: "notebook",
            searchTerms: new string[] { "notebook" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3117
        );

        /* üìí */
        public static readonly SingleEmoji Ledger = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d2 }),
            name: "ledger",
            searchTerms: new string[] { "ledger" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3118
        );

        /* üìÉ */
        public static readonly SingleEmoji PageCurl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c3 }),
            name: "page with curl",
            searchTerms: new string[] { "page", "curl" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3119
        );

        /* üìú */
        public static readonly SingleEmoji Scroll = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4dc }),
            name: "scroll",
            searchTerms: new string[] { "scroll" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3120
        );

        /* üìÑ */
        public static readonly SingleEmoji PageFacingUp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c4 }),
            name: "page facing up",
            searchTerms: new string[] { "page", "facing", "up" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3121
        );

        /* üì∞ */
        public static readonly SingleEmoji Newspaper = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f0 }),
            name: "newspaper",
            searchTerms: new string[] { "newspaper" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3122
        );

        /* üóûÔ∏è */
        public static readonly SingleEmoji RolledUpNewspaper = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5de, 0xfe0f }),
            name: "rolled-up newspaper",
            searchTerms: new string[] { "rolled", "up", "newspaper" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3123
        );

        /* üìë */
        public static readonly SingleEmoji BookmarkTabs = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d1 }),
            name: "bookmark tabs",
            searchTerms: new string[] { "bookmark", "tabs" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3125
        );

        /* üîñ */
        public static readonly SingleEmoji Bookmark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f516 }),
            name: "bookmark",
            searchTerms: new string[] { "bookmark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3126
        );

        /* üè∑Ô∏è */
        public static readonly SingleEmoji Label = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f7, 0xfe0f }),
            name: "label",
            searchTerms: new string[] { "label" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.BOOK_PAPER,
            hasGlyph: true,
            sortOrder: 3127
        );

        /* üí∞ */
        public static readonly SingleEmoji MoneyBag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b0 }),
            name: "money bag",
            searchTerms: new string[] { "money", "bag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3129
        );

        /* üí¥ */
        public static readonly SingleEmoji YenBanknote = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b4 }),
            name: "yen banknote",
            searchTerms: new string[] { "yen", "banknote" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3130
        );

        /* üíµ */
        public static readonly SingleEmoji DollarBanknote = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b5 }),
            name: "dollar banknote",
            searchTerms: new string[] { "dollar", "banknote" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3131
        );

        /* üí∂ */
        public static readonly SingleEmoji EuroBanknote = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b6 }),
            name: "euro banknote",
            searchTerms: new string[] { "euro", "banknote" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3132
        );

        /* üí∑ */
        public static readonly SingleEmoji PoundBanknote = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b7 }),
            name: "pound banknote",
            searchTerms: new string[] { "pound", "banknote" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3133
        );

        /* üí∏ */
        public static readonly SingleEmoji MoneyWings = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b8 }),
            name: "money with wings",
            searchTerms: new string[] { "money", "wings" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3134
        );

        /* üí≥ */
        public static readonly SingleEmoji CreditCard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b3 }),
            name: "credit card",
            searchTerms: new string[] { "credit", "card" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3135
        );

        /* üßæ */
        public static readonly SingleEmoji Receipt = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9fe }),
            name: "receipt",
            searchTerms: new string[] { "receipt" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3136
        );

        /* üíπ */
        public static readonly SingleEmoji ChartIncreasingYen = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b9 }),
            name: "chart increasing with yen",
            searchTerms: new string[] { "chart", "increasing", "yen" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3137
        );

        /* üí± */
        public static readonly SingleEmoji CurrencyExchange = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b1 }),
            name: "currency exchange",
            searchTerms: new string[] { "currency", "exchange" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3138
        );

        /* üí≤ */
        public static readonly SingleEmoji HeavyDollarSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4b2 }),
            name: "heavy dollar sign",
            searchTerms: new string[] { "heavy", "dollar", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MONEY,
            hasGlyph: true,
            sortOrder: 3139
        );

        /* ‚úâÔ∏è */
        public static readonly SingleEmoji Envelope = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2709, 0xfe0f }),
            name: "envelope",
            searchTerms: new string[] { "envelope" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3140
        );

        /* üìß */
        public static readonly SingleEmoji EMail = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e7 }),
            name: "e-mail",
            searchTerms: new string[] { "e", "mail" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3142
        );

        /* üì® */
        public static readonly SingleEmoji IncomingEnvelope = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e8 }),
            name: "incoming envelope",
            searchTerms: new string[] { "incoming", "envelope" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3143
        );

        /* üì© */
        public static readonly SingleEmoji EnvelopeArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e9 }),
            name: "envelope with arrow",
            searchTerms: new string[] { "envelope", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3144
        );

        /* üì§ */
        public static readonly SingleEmoji OutboxTray = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e4 }),
            name: "outbox tray",
            searchTerms: new string[] { "outbox", "tray" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3145
        );

        /* üì• */
        public static readonly SingleEmoji InboxTray = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e5 }),
            name: "inbox tray",
            searchTerms: new string[] { "inbox", "tray" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3146
        );

        /* üì¶ */
        public static readonly SingleEmoji Package = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e6 }),
            name: "package",
            searchTerms: new string[] { "package" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3147
        );

        /* üì´ */
        public static readonly SingleEmoji ClosedMailboxRaisedFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4eb }),
            name: "closed mailbox with raised flag",
            searchTerms: new string[] { "closed", "mailbox", "raised", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3148
        );

        /* üì™ */
        public static readonly SingleEmoji ClosedMailboxLoweredFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ea }),
            name: "closed mailbox with lowered flag",
            searchTerms: new string[] { "closed", "mailbox", "lowered", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3149
        );

        /* üì¨ */
        public static readonly SingleEmoji OpenMailboxRaisedFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ec }),
            name: "open mailbox with raised flag",
            searchTerms: new string[] { "open", "mailbox", "raised", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3150
        );

        /* üì≠ */
        public static readonly SingleEmoji OpenMailboxLoweredFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ed }),
            name: "open mailbox with lowered flag",
            searchTerms: new string[] { "open", "mailbox", "lowered", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3151
        );

        /* üìÆ */
        public static readonly SingleEmoji Postbox = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ee }),
            name: "postbox",
            searchTerms: new string[] { "postbox" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3152
        );

        /* üó≥Ô∏è */
        public static readonly SingleEmoji BallotBoxBallot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5f3, 0xfe0f }),
            name: "ballot box with ballot",
            searchTerms: new string[] { "ballot", "box", "ballot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MAIL,
            hasGlyph: true,
            sortOrder: 3153
        );

        /* ‚úèÔ∏è */
        public static readonly SingleEmoji Pencil = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x270f, 0xfe0f }),
            name: "pencil",
            searchTerms: new string[] { "pencil" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.WRITING,
            hasGlyph: true,
            sortOrder: 3155
        );

        /* ‚úíÔ∏è */
        public static readonly SingleEmoji BlackNib = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2712, 0xfe0f }),
            name: "black nib",
            searchTerms: new string[] { "black", "nib" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.WRITING,
            hasGlyph: true,
            sortOrder: 3157
        );

        /* üñãÔ∏è */
        public static readonly SingleEmoji FountainPen = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f58b, 0xfe0f }),
            name: "fountain pen",
            searchTerms: new string[] { "fountain", "pen" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.WRITING,
            hasGlyph: true,
            sortOrder: 3159
        );

        /* üñäÔ∏è */
        public static readonly SingleEmoji Pen = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f58a, 0xfe0f }),
            name: "pen",
            searchTerms: new string[] { "pen" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.WRITING,
            hasGlyph: true,
            sortOrder: 3161
        );

        /* üñåÔ∏è */
        public static readonly SingleEmoji Paintbrush = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f58c, 0xfe0f }),
            name: "paintbrush",
            searchTerms: new string[] { "paintbrush" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.WRITING,
            hasGlyph: true,
            sortOrder: 3163
        );

        /* üñçÔ∏è */
        public static readonly SingleEmoji Crayon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f58d, 0xfe0f }),
            name: "crayon",
            searchTerms: new string[] { "crayon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.WRITING,
            hasGlyph: true,
            sortOrder: 3165
        );

        /* üìù */
        public static readonly SingleEmoji Memo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4dd }),
            name: "memo",
            searchTerms: new string[] { "memo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.WRITING,
            hasGlyph: true,
            sortOrder: 3167
        );

        /* üíº */
        public static readonly SingleEmoji Briefcase = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4bc }),
            name: "briefcase",
            searchTerms: new string[] { "briefcase" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3168
        );

        /* üìÅ */
        public static readonly SingleEmoji FileFolder = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c1 }),
            name: "file folder",
            searchTerms: new string[] { "file", "folder" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3169
        );

        /* üìÇ */
        public static readonly SingleEmoji OpenFileFolder = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c2 }),
            name: "open file folder",
            searchTerms: new string[] { "open", "file", "folder" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3170
        );

        /* üóÇÔ∏è */
        public static readonly SingleEmoji CardIndexDividers = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5c2, 0xfe0f }),
            name: "card index dividers",
            searchTerms: new string[] { "card", "index", "dividers" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3171
        );

        /* üìÖ */
        public static readonly SingleEmoji Calendar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c5 }),
            name: "calendar",
            searchTerms: new string[] { "calendar" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3173
        );

        /* üìÜ */
        public static readonly SingleEmoji TearOffCalendar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c6 }),
            name: "tear-off calendar",
            searchTerms: new string[] { "tear", "off", "calendar" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3174
        );

        /* üóíÔ∏è */
        public static readonly SingleEmoji SpiralNotepad = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5d2, 0xfe0f }),
            name: "spiral notepad",
            searchTerms: new string[] { "spiral", "notepad" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3175
        );

        /* üóìÔ∏è */
        public static readonly SingleEmoji SpiralCalendar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5d3, 0xfe0f }),
            name: "spiral calendar",
            searchTerms: new string[] { "spiral", "calendar" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3177
        );

        /* üìá */
        public static readonly SingleEmoji CardIndex = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c7 }),
            name: "card index",
            searchTerms: new string[] { "card", "index" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3179
        );

        /* üìà */
        public static readonly SingleEmoji ChartIncreasing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c8 }),
            name: "chart increasing",
            searchTerms: new string[] { "chart", "increasing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3180
        );

        /* üìâ */
        public static readonly SingleEmoji ChartDecreasing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4c9 }),
            name: "chart decreasing",
            searchTerms: new string[] { "chart", "decreasing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3181
        );

        /* üìä */
        public static readonly SingleEmoji BarChart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ca }),
            name: "bar chart",
            searchTerms: new string[] { "bar", "chart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3182
        );

        /* üìã */
        public static readonly SingleEmoji Clipboard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4cb }),
            name: "clipboard",
            searchTerms: new string[] { "clipboard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3183
        );

        /* üìå */
        public static readonly SingleEmoji Pushpin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4cc }),
            name: "pushpin",
            searchTerms: new string[] { "pushpin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3184
        );

        /* üìç */
        public static readonly SingleEmoji RoundPushpin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4cd }),
            name: "round pushpin",
            searchTerms: new string[] { "round", "pushpin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3185
        );

        /* üìé */
        public static readonly SingleEmoji Paperclip = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4ce }),
            name: "paperclip",
            searchTerms: new string[] { "paperclip" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3186
        );

        /* üñáÔ∏è */
        public static readonly SingleEmoji LinkedPaperclips = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f587, 0xfe0f }),
            name: "linked paperclips",
            searchTerms: new string[] { "linked", "paperclips" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3187
        );

        /* üìè */
        public static readonly SingleEmoji StraightRuler = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4cf }),
            name: "straight ruler",
            searchTerms: new string[] { "straight", "ruler" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3189
        );

        /* üìê */
        public static readonly SingleEmoji TriangularRuler = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4d0 }),
            name: "triangular ruler",
            searchTerms: new string[] { "triangular", "ruler" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3190
        );

        /* ‚úÇÔ∏è */
        public static readonly SingleEmoji Scissors = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2702, 0xfe0f }),
            name: "scissors",
            searchTerms: new string[] { "scissors" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3191
        );

        /* üóÉÔ∏è */
        public static readonly SingleEmoji CardFileBox = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5c3, 0xfe0f }),
            name: "card file box",
            searchTerms: new string[] { "card", "file", "box" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3193
        );

        /* üóÑÔ∏è */
        public static readonly SingleEmoji FileCabinet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5c4, 0xfe0f }),
            name: "file cabinet",
            searchTerms: new string[] { "file", "cabinet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3195
        );

        /* üóëÔ∏è */
        public static readonly SingleEmoji Wastebasket = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5d1, 0xfe0f }),
            name: "wastebasket",
            searchTerms: new string[] { "wastebasket" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OFFICE,
            hasGlyph: true,
            sortOrder: 3197
        );

        /* üîí */
        public static readonly SingleEmoji Locked = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f512 }),
            name: "locked",
            searchTerms: new string[] { "locked" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LOCK,
            hasGlyph: true,
            sortOrder: 3199
        );

        /* üîì */
        public static readonly SingleEmoji Unlocked = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f513 }),
            name: "unlocked",
            searchTerms: new string[] { "unlocked" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LOCK,
            hasGlyph: true,
            sortOrder: 3200
        );

        /* üîè */
        public static readonly SingleEmoji LockedPen = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f50f }),
            name: "locked with pen",
            searchTerms: new string[] { "locked", "pen" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LOCK,
            hasGlyph: true,
            sortOrder: 3201
        );

        /* üîê */
        public static readonly SingleEmoji LockedKey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f510 }),
            name: "locked with key",
            searchTerms: new string[] { "locked", "key" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LOCK,
            hasGlyph: true,
            sortOrder: 3202
        );

        /* üîë */
        public static readonly SingleEmoji Key = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f511 }),
            name: "key",
            searchTerms: new string[] { "key" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LOCK,
            hasGlyph: true,
            sortOrder: 3203
        );

        /* üóùÔ∏è */
        public static readonly SingleEmoji OldKey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5dd, 0xfe0f }),
            name: "old key",
            searchTerms: new string[] { "old", "key" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.LOCK,
            hasGlyph: true,
            sortOrder: 3204
        );

        /* üî® */
        public static readonly SingleEmoji Hammer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f528 }),
            name: "hammer",
            searchTerms: new string[] { "hammer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3206
        );

        /* ü™ì */
        public static readonly SingleEmoji Axe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa93 }),
            name: "axe",
            searchTerms: new string[] { "axe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3207
        );

        /* ‚õèÔ∏è */
        public static readonly SingleEmoji Pick = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26cf, 0xfe0f }),
            name: "pick",
            searchTerms: new string[] { "pick" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3208
        );

        /* ‚öíÔ∏è */
        public static readonly SingleEmoji HammerPick = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2692, 0xfe0f }),
            name: "hammer and pick",
            searchTerms: new string[] { "hammer", "pick" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3210
        );

        /* üõ†Ô∏è */
        public static readonly SingleEmoji HammerWrench = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6e0, 0xfe0f }),
            name: "hammer and wrench",
            searchTerms: new string[] { "hammer", "wrench" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3212
        );

        /* üó°Ô∏è */
        public static readonly SingleEmoji Dagger = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5e1, 0xfe0f }),
            name: "dagger",
            searchTerms: new string[] { "dagger" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3214
        );

        /* ‚öîÔ∏è */
        public static readonly SingleEmoji CrossedSwords = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2694, 0xfe0f }),
            name: "crossed swords",
            searchTerms: new string[] { "crossed", "swords" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3216
        );

        /* üî´ */
        public static readonly SingleEmoji Pistol = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f52b }),
            name: "pistol",
            searchTerms: new string[] { "pistol" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3218
        );

        /* üèπ */
        public static readonly SingleEmoji BowArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f9 }),
            name: "bow and arrow",
            searchTerms: new string[] { "bow", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3219
        );

        /* üõ°Ô∏è */
        public static readonly SingleEmoji Shield = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6e1, 0xfe0f }),
            name: "shield",
            searchTerms: new string[] { "shield" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3220
        );

        /* üîß */
        public static readonly SingleEmoji Wrench = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f527 }),
            name: "wrench",
            searchTerms: new string[] { "wrench" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3222
        );

        /* üî© */
        public static readonly SingleEmoji NutBolt = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f529 }),
            name: "nut and bolt",
            searchTerms: new string[] { "nut", "bolt" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3223
        );

        /* ‚öôÔ∏è */
        public static readonly SingleEmoji Gear = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2699, 0xfe0f }),
            name: "gear",
            searchTerms: new string[] { "gear" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3224
        );

        /* üóúÔ∏è */
        public static readonly SingleEmoji Clamp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5dc, 0xfe0f }),
            name: "clamp",
            searchTerms: new string[] { "clamp" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3226
        );

        /* ‚öñÔ∏è */
        public static readonly SingleEmoji BalanceScale = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2696, 0xfe0f }),
            name: "balance scale",
            searchTerms: new string[] { "balance", "scale" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3228
        );

        /* ü¶Ø */
        public static readonly SingleEmoji ProbingCane = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9af }),
            name: "probing cane",
            searchTerms: new string[] { "probing", "cane" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3230
        );

        /* üîó */
        public static readonly SingleEmoji Link = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f517 }),
            name: "link",
            searchTerms: new string[] { "link" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3231
        );

        /* ‚õìÔ∏è */
        public static readonly SingleEmoji Chains = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26d3, 0xfe0f }),
            name: "chains",
            searchTerms: new string[] { "chains" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3232
        );

        /* üß∞ */
        public static readonly SingleEmoji Toolbox = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f0 }),
            name: "toolbox",
            searchTerms: new string[] { "toolbox" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3234
        );

        /* üß≤ */
        public static readonly SingleEmoji Magnet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f2 }),
            name: "magnet",
            searchTerms: new string[] { "magnet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.TOOL,
            hasGlyph: true,
            sortOrder: 3235
        );

        /* ‚öóÔ∏è */
        public static readonly SingleEmoji Alembic = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2697, 0xfe0f }),
            name: "alembic",
            searchTerms: new string[] { "alembic" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SCIENCE,
            hasGlyph: true,
            sortOrder: 3236
        );

        /* üß™ */
        public static readonly SingleEmoji TestTube = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ea }),
            name: "test tube",
            searchTerms: new string[] { "test", "tube" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SCIENCE,
            hasGlyph: true,
            sortOrder: 3238
        );

        /* üß´ */
        public static readonly SingleEmoji PetriDish = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9eb }),
            name: "petri dish",
            searchTerms: new string[] { "petri", "dish" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SCIENCE,
            hasGlyph: true,
            sortOrder: 3239
        );

        /* üß¨ */
        public static readonly SingleEmoji Dna = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ec }),
            name: "dna",
            searchTerms: new string[] { "dna" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SCIENCE,
            hasGlyph: true,
            sortOrder: 3240
        );

        /* üî¨ */
        public static readonly SingleEmoji Microscope = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f52c }),
            name: "microscope",
            searchTerms: new string[] { "microscope" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SCIENCE,
            hasGlyph: true,
            sortOrder: 3241
        );

        /* üî≠ */
        public static readonly SingleEmoji Telescope = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f52d }),
            name: "telescope",
            searchTerms: new string[] { "telescope" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SCIENCE,
            hasGlyph: true,
            sortOrder: 3242
        );

        /* üì° */
        public static readonly SingleEmoji SatelliteAntenna = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4e1 }),
            name: "satellite antenna",
            searchTerms: new string[] { "satellite", "antenna" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.SCIENCE,
            hasGlyph: true,
            sortOrder: 3243
        );

        /* üíâ */
        public static readonly SingleEmoji Syringe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f489 }),
            name: "syringe",
            searchTerms: new string[] { "syringe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MEDICAL,
            hasGlyph: true,
            sortOrder: 3244
        );

        /* ü©∏ */
        public static readonly SingleEmoji DropBlood = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa78 }),
            name: "drop of blood",
            searchTerms: new string[] { "drop", "blood" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MEDICAL,
            hasGlyph: true,
            sortOrder: 3245
        );

        /* üíä */
        public static readonly SingleEmoji Pill = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f48a }),
            name: "pill",
            searchTerms: new string[] { "pill" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MEDICAL,
            hasGlyph: true,
            sortOrder: 3246
        );

        /* ü©π */
        public static readonly SingleEmoji AdhesiveBandage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa79 }),
            name: "adhesive bandage",
            searchTerms: new string[] { "adhesive", "bandage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MEDICAL,
            hasGlyph: true,
            sortOrder: 3247
        );

        /* ü©∫ */
        public static readonly SingleEmoji Stethoscope = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa7a }),
            name: "stethoscope",
            searchTerms: new string[] { "stethoscope" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.MEDICAL,
            hasGlyph: true,
            sortOrder: 3248
        );

        /* üö™ */
        public static readonly SingleEmoji Door = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6aa }),
            name: "door",
            searchTerms: new string[] { "door" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3249
        );

        /* üõèÔ∏è */
        public static readonly SingleEmoji Bed = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6cf, 0xfe0f }),
            name: "bed",
            searchTerms: new string[] { "bed" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3250
        );

        /* üõãÔ∏è */
        public static readonly SingleEmoji CouchLamp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6cb, 0xfe0f }),
            name: "couch and lamp",
            searchTerms: new string[] { "couch", "lamp" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3252
        );

        /* ü™ë */
        public static readonly SingleEmoji Chair = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa91 }),
            name: "chair",
            searchTerms: new string[] { "chair" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3254
        );

        /* üöΩ */
        public static readonly SingleEmoji Toilet = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6bd }),
            name: "toilet",
            searchTerms: new string[] { "toilet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3255
        );

        /* üöø */
        public static readonly SingleEmoji Shower = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6bf }),
            name: "shower",
            searchTerms: new string[] { "shower" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3256
        );

        /* üõÅ */
        public static readonly SingleEmoji Bathtub = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c1 }),
            name: "bathtub",
            searchTerms: new string[] { "bathtub" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3257
        );

        /* ü™í */
        public static readonly SingleEmoji Razor = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1fa92 }),
            name: "razor",
            searchTerms: new string[] { "razor" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3258
        );

        /* üß¥ */
        public static readonly SingleEmoji LotionBottle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f4 }),
            name: "lotion bottle",
            searchTerms: new string[] { "lotion", "bottle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3259
        );

        /* üß∑ */
        public static readonly SingleEmoji SafetyPin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f7 }),
            name: "safety pin",
            searchTerms: new string[] { "safety", "pin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3260
        );

        /* üßπ */
        public static readonly SingleEmoji Broom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9f9 }),
            name: "broom",
            searchTerms: new string[] { "broom" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3261
        );

        /* üß∫ */
        public static readonly SingleEmoji Basket = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9fa }),
            name: "basket",
            searchTerms: new string[] { "basket" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3262
        );

        /* üßª */
        public static readonly SingleEmoji RollPaper = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9fb }),
            name: "roll of paper",
            searchTerms: new string[] { "roll", "paper" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3263
        );

        /* üßº */
        public static readonly SingleEmoji Soap = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9fc }),
            name: "soap",
            searchTerms: new string[] { "soap" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3264
        );

        /* üßΩ */
        public static readonly SingleEmoji Sponge = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9fd }),
            name: "sponge",
            searchTerms: new string[] { "sponge" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3265
        );

        /* üßØ */
        public static readonly SingleEmoji FireExtinguisher = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f9ef }),
            name: "fire extinguisher",
            searchTerms: new string[] { "fire", "extinguisher" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3266
        );

        /* üõí */
        public static readonly SingleEmoji ShoppingCart = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6d2 }),
            name: "shopping cart",
            searchTerms: new string[] { "shopping", "cart" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.HOUSEHOLD,
            hasGlyph: true,
            sortOrder: 3267
        );

        /* üö¨ */
        public static readonly SingleEmoji Cigarette = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6ac }),
            name: "cigarette",
            searchTerms: new string[] { "cigarette" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OTHER_OBJECT,
            hasGlyph: true,
            sortOrder: 3268
        );

        /* ‚ö∞Ô∏è */
        public static readonly SingleEmoji Coffin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26b0, 0xfe0f }),
            name: "coffin",
            searchTerms: new string[] { "coffin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OTHER_OBJECT,
            hasGlyph: true,
            sortOrder: 3269
        );

        /* ‚ö±Ô∏è */
        public static readonly SingleEmoji FuneralUrn = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26b1, 0xfe0f }),
            name: "funeral urn",
            searchTerms: new string[] { "funeral", "urn" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OTHER_OBJECT,
            hasGlyph: true,
            sortOrder: 3271
        );

        /* üóø */
        public static readonly SingleEmoji Moai = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f5ff }),
            name: "moai",
            searchTerms: new string[] { "moai" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.OBJECTS,
            subgroup: Subgroups.OTHER_OBJECT,
            hasGlyph: true,
            sortOrder: 3273
        );

        /* üèß */
        public static readonly SingleEmoji AtmSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3e7 }),
            name: "ATM sign",
            searchTerms: new string[] { "atm", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3274
        );

        /* üöÆ */
        public static readonly SingleEmoji LitterBinSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6ae }),
            name: "litter in bin sign",
            searchTerms: new string[] { "litter", "bin", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3275
        );

        /* üö∞ */
        public static readonly SingleEmoji PotableWater = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b0 }),
            name: "potable water",
            searchTerms: new string[] { "potable", "water" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3276
        );

        /* ‚ôø */
        public static readonly SingleEmoji WheelchairSymbol = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x267f }),
            name: "wheelchair symbol",
            searchTerms: new string[] { "wheelchair", "symbol" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3277
        );

        /* üöπ */
        public static readonly SingleEmoji MensRoom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b9 }),
            name: "men‚Äôs room",
            searchTerms: new string[] { "mens", "room" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3278
        );

        /* üö∫ */
        public static readonly SingleEmoji WomensRoom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6ba }),
            name: "women‚Äôs room",
            searchTerms: new string[] { "womens", "room" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3279
        );

        /* üöª */
        public static readonly SingleEmoji Restroom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6bb }),
            name: "restroom",
            searchTerms: new string[] { "restroom" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3280
        );

        /* üöº */
        public static readonly SingleEmoji BabySymbol = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6bc }),
            name: "baby symbol",
            searchTerms: new string[] { "baby", "symbol" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3281
        );

        /* üöæ */
        public static readonly SingleEmoji WaterCloset = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6be }),
            name: "water closet",
            searchTerms: new string[] { "water", "closet" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3282
        );

        /* üõÇ */
        public static readonly SingleEmoji PassportControl = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c2 }),
            name: "passport control",
            searchTerms: new string[] { "passport", "control" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3283
        );

        /* üõÉ */
        public static readonly SingleEmoji Customs = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c3 }),
            name: "customs",
            searchTerms: new string[] { "customs" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3284
        );

        /* üõÑ */
        public static readonly SingleEmoji BaggageClaim = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c4 }),
            name: "baggage claim",
            searchTerms: new string[] { "baggage", "claim" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3285
        );

        /* üõÖ */
        public static readonly SingleEmoji LeftLuggage = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6c5 }),
            name: "left luggage",
            searchTerms: new string[] { "left", "luggage" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.TRANSPORT_SIGN,
            hasGlyph: true,
            sortOrder: 3286
        );

        /* ‚ö†Ô∏è */
        public static readonly SingleEmoji Warning = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26a0, 0xfe0f }),
            name: "warning",
            searchTerms: new string[] { "warning" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3287
        );

        /* üö∏ */
        public static readonly SingleEmoji ChildrenCrossing = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b8 }),
            name: "children crossing",
            searchTerms: new string[] { "children", "crossing" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3289
        );

        /* ‚õî */
        public static readonly SingleEmoji NoEntry = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26d4 }),
            name: "no entry",
            searchTerms: new string[] { "no", "entry" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3290
        );

        /* üö´ */
        public static readonly SingleEmoji Prohibited = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6ab }),
            name: "prohibited",
            searchTerms: new string[] { "prohibited" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3291
        );

        /* üö≥ */
        public static readonly SingleEmoji NoBicycles = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b3 }),
            name: "no bicycles",
            searchTerms: new string[] { "no", "bicycles" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3292
        );

        /* üö≠ */
        public static readonly SingleEmoji NoSmoking = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6ad }),
            name: "no smoking",
            searchTerms: new string[] { "no", "smoking" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3293
        );

        /* üöØ */
        public static readonly SingleEmoji NoLittering = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6af }),
            name: "no littering",
            searchTerms: new string[] { "no", "littering" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3294
        );

        /* üö± */
        public static readonly SingleEmoji NonPotableWater = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b1 }),
            name: "non-potable water",
            searchTerms: new string[] { "non", "potable", "water" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3295
        );

        /* üö∑ */
        public static readonly SingleEmoji NoPedestrians = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6b7 }),
            name: "no pedestrians",
            searchTerms: new string[] { "no", "pedestrians" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3296
        );

        /* üìµ */
        public static readonly SingleEmoji NoMobilePhones = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f5 }),
            name: "no mobile phones",
            searchTerms: new string[] { "no", "mobile", "phones" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3297
        );

        /* üîû */
        public static readonly SingleEmoji NoOneUnderEighteen = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f51e }),
            name: "no one under eighteen",
            searchTerms: new string[] { "no", "one", "under", "eighteen" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3298
        );

        /* ‚ò¢Ô∏è */
        public static readonly SingleEmoji Radioactive = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2622, 0xfe0f }),
            name: "radioactive",
            searchTerms: new string[] { "radioactive" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3299
        );

        /* ‚ò£Ô∏è */
        public static readonly SingleEmoji Biohazard = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2623, 0xfe0f }),
            name: "biohazard",
            searchTerms: new string[] { "biohazard" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.WARNING,
            hasGlyph: true,
            sortOrder: 3301
        );

        /* ‚¨ÜÔ∏è */
        public static readonly SingleEmoji UpArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2b06, 0xfe0f }),
            name: "up arrow",
            searchTerms: new string[] { "up", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3303
        );

        /* ‚ÜóÔ∏è */
        public static readonly SingleEmoji UpRightArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2197, 0xfe0f }),
            name: "up-right arrow",
            searchTerms: new string[] { "up", "right", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3305
        );

        /* ‚û°Ô∏è */
        public static readonly SingleEmoji RightArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x27a1, 0xfe0f }),
            name: "right arrow",
            searchTerms: new string[] { "right", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3307
        );

        /* ‚ÜòÔ∏è */
        public static readonly SingleEmoji DownRightArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2198, 0xfe0f }),
            name: "down-right arrow",
            searchTerms: new string[] { "down", "right", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3309
        );

        /* ‚¨áÔ∏è */
        public static readonly SingleEmoji DownArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2b07, 0xfe0f }),
            name: "down arrow",
            searchTerms: new string[] { "down", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3311
        );

        /* ‚ÜôÔ∏è */
        public static readonly SingleEmoji DownLeftArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2199, 0xfe0f }),
            name: "down-left arrow",
            searchTerms: new string[] { "down", "left", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3313
        );

        /* ‚¨ÖÔ∏è */
        public static readonly SingleEmoji LeftArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2b05, 0xfe0f }),
            name: "left arrow",
            searchTerms: new string[] { "left", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3315
        );

        /* ‚ÜñÔ∏è */
        public static readonly SingleEmoji UpLeftArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2196, 0xfe0f }),
            name: "up-left arrow",
            searchTerms: new string[] { "up", "left", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3317
        );

        /* ‚ÜïÔ∏è */
        public static readonly SingleEmoji UpDownArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2195, 0xfe0f }),
            name: "up-down arrow",
            searchTerms: new string[] { "up", "down", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3319
        );

        /* ‚ÜîÔ∏è */
        public static readonly SingleEmoji LeftRightArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2194, 0xfe0f }),
            name: "left-right arrow",
            searchTerms: new string[] { "left", "right", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3321
        );

        /* ‚Ü©Ô∏è */
        public static readonly SingleEmoji RightArrowCurvingLeft = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x21a9, 0xfe0f }),
            name: "right arrow curving left",
            searchTerms: new string[] { "right", "arrow", "curving", "left" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3323
        );

        /* ‚Ü™Ô∏è */
        public static readonly SingleEmoji LeftArrowCurvingRight = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x21aa, 0xfe0f }),
            name: "left arrow curving right",
            searchTerms: new string[] { "left", "arrow", "curving", "right" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3325
        );

        /* ‚§¥Ô∏è */
        public static readonly SingleEmoji RightArrowCurvingUp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2934, 0xfe0f }),
            name: "right arrow curving up",
            searchTerms: new string[] { "right", "arrow", "curving", "up" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3327
        );

        /* ‚§µÔ∏è */
        public static readonly SingleEmoji RightArrowCurvingDown = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2935, 0xfe0f }),
            name: "right arrow curving down",
            searchTerms: new string[] { "right", "arrow", "curving", "down" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3329
        );

        /* üîÉ */
        public static readonly SingleEmoji ClockwiseVerticalArrows = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f503 }),
            name: "clockwise vertical arrows",
            searchTerms: new string[] { "clockwise", "vertical", "arrows" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3331
        );

        /* üîÑ */
        public static readonly SingleEmoji CounterclockwiseArrowsButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f504 }),
            name: "counterclockwise arrows button",
            searchTerms: new string[] { "counterclockwise", "arrows", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3332
        );

        /* üîô */
        public static readonly SingleEmoji BackArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f519 }),
            name: "BACK arrow",
            searchTerms: new string[] { "back", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3333
        );

        /* üîö */
        public static readonly SingleEmoji EndArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f51a }),
            name: "END arrow",
            searchTerms: new string[] { "end", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3334
        );

        /* üîõ */
        public static readonly SingleEmoji OnArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f51b }),
            name: "ON! arrow",
            searchTerms: new string[] { "on", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3335
        );

        /* üîú */
        public static readonly SingleEmoji SoonArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f51c }),
            name: "SOON arrow",
            searchTerms: new string[] { "soon", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3336
        );

        /* üîù */
        public static readonly SingleEmoji TopArrow = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f51d }),
            name: "TOP arrow",
            searchTerms: new string[] { "top", "arrow" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ARROW,
            hasGlyph: true,
            sortOrder: 3337
        );

        /* üõê */
        public static readonly SingleEmoji PlaceWorship = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6d0 }),
            name: "place of worship",
            searchTerms: new string[] { "place", "worship" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3338
        );

        /* ‚öõÔ∏è */
        public static readonly SingleEmoji AtomSymbol = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x269b, 0xfe0f }),
            name: "atom symbol",
            searchTerms: new string[] { "atom", "symbol" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3339
        );

        /* üïâÔ∏è */
        public static readonly SingleEmoji Om = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f549, 0xfe0f }),
            name: "om",
            searchTerms: new string[] { "om" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3341
        );

        /* ‚ú°Ô∏è */
        public static readonly SingleEmoji StarDavid = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2721, 0xfe0f }),
            name: "star of David",
            searchTerms: new string[] { "star", "david" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3343
        );

        /* ‚ò∏Ô∏è */
        public static readonly SingleEmoji WheelDharma = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2638, 0xfe0f }),
            name: "wheel of dharma",
            searchTerms: new string[] { "wheel", "dharma" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3345
        );

        /* ‚òØÔ∏è */
        public static readonly SingleEmoji YinYang = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x262f, 0xfe0f }),
            name: "yin yang",
            searchTerms: new string[] { "yin", "yang" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3347
        );

        /* ‚úùÔ∏è */
        public static readonly SingleEmoji LatinCross = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x271d, 0xfe0f }),
            name: "latin cross",
            searchTerms: new string[] { "latin", "cross" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3349
        );

        /* ‚ò¶Ô∏è */
        public static readonly SingleEmoji OrthodoxCross = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2626, 0xfe0f }),
            name: "orthodox cross",
            searchTerms: new string[] { "orthodox", "cross" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3351
        );

        /* ‚ò™Ô∏è */
        public static readonly SingleEmoji StarCrescent = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x262a, 0xfe0f }),
            name: "star and crescent",
            searchTerms: new string[] { "star", "crescent" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3353
        );

        /* ‚òÆÔ∏è */
        public static readonly SingleEmoji PeaceSymbol = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x262e, 0xfe0f }),
            name: "peace symbol",
            searchTerms: new string[] { "peace", "symbol" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3355
        );

        /* üïé */
        public static readonly SingleEmoji Menorah = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f54e }),
            name: "menorah",
            searchTerms: new string[] { "menorah" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3357
        );

        /* üîØ */
        public static readonly SingleEmoji DottedSixPointedStar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f52f }),
            name: "dotted six-pointed star",
            searchTerms: new string[] { "dotted", "six", "pointed", "star" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.RELIGION,
            hasGlyph: true,
            sortOrder: 3358
        );

        /* ‚ôà */
        public static readonly SingleEmoji Aries = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2648 }),
            name: "Aries",
            searchTerms: new string[] { "aries" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3359
        );

        /* ‚ôâ */
        public static readonly SingleEmoji Taurus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2649 }),
            name: "Taurus",
            searchTerms: new string[] { "taurus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3360
        );

        /* ‚ôä */
        public static readonly SingleEmoji Gemini = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x264a }),
            name: "Gemini",
            searchTerms: new string[] { "gemini" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3361
        );

        /* ‚ôã */
        public static readonly SingleEmoji Cancer = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x264b }),
            name: "Cancer",
            searchTerms: new string[] { "cancer" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3362
        );

        /* ‚ôå */
        public static readonly SingleEmoji Leo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x264c }),
            name: "Leo",
            searchTerms: new string[] { "leo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3363
        );

        /* ‚ôç */
        public static readonly SingleEmoji Virgo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x264d }),
            name: "Virgo",
            searchTerms: new string[] { "virgo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3364
        );

        /* ‚ôé */
        public static readonly SingleEmoji Libra = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x264e }),
            name: "Libra",
            searchTerms: new string[] { "libra" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3365
        );

        /* ‚ôè */
        public static readonly SingleEmoji Scorpio = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x264f }),
            name: "Scorpio",
            searchTerms: new string[] { "scorpio" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3366
        );

        /* ‚ôê */
        public static readonly SingleEmoji Sagittarius = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2650 }),
            name: "Sagittarius",
            searchTerms: new string[] { "sagittarius" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3367
        );

        /* ‚ôë */
        public static readonly SingleEmoji Capricorn = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2651 }),
            name: "Capricorn",
            searchTerms: new string[] { "capricorn" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3368
        );

        /* ‚ôí */
        public static readonly SingleEmoji Aquarius = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2652 }),
            name: "Aquarius",
            searchTerms: new string[] { "aquarius" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3369
        );

        /* ‚ôì */
        public static readonly SingleEmoji Pisces = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2653 }),
            name: "Pisces",
            searchTerms: new string[] { "pisces" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3370
        );

        /* ‚õé */
        public static readonly SingleEmoji Ophiuchus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26ce }),
            name: "Ophiuchus",
            searchTerms: new string[] { "ophiuchus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ZODIAC,
            hasGlyph: true,
            sortOrder: 3371
        );

        /* üîÄ */
        public static readonly SingleEmoji ShuffleTracksButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f500 }),
            name: "shuffle tracks button",
            searchTerms: new string[] { "shuffle", "tracks", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3372
        );

        /* üîÅ */
        public static readonly SingleEmoji RepeatButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f501 }),
            name: "repeat button",
            searchTerms: new string[] { "repeat", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3373
        );

        /* üîÇ */
        public static readonly SingleEmoji RepeatSingleButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f502 }),
            name: "repeat single button",
            searchTerms: new string[] { "repeat", "single", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3374
        );

        /* ‚ñ∂Ô∏è */
        public static readonly SingleEmoji PlayButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x25b6, 0xfe0f }),
            name: "play button",
            searchTerms: new string[] { "play", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3375
        );

        /* ‚è© */
        public static readonly SingleEmoji FastForwardButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23e9 }),
            name: "fast-forward button",
            searchTerms: new string[] { "fast", "forward", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3377
        );

        /* ‚è≠Ô∏è */
        public static readonly SingleEmoji NextTrackButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23ed, 0xfe0f }),
            name: "next track button",
            searchTerms: new string[] { "next", "track", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3378
        );

        /* ‚èØÔ∏è */
        public static readonly SingleEmoji PlayPauseButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23ef, 0xfe0f }),
            name: "play or pause button",
            searchTerms: new string[] { "play", "pause", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3380
        );

        /* ‚óÄÔ∏è */
        public static readonly SingleEmoji ReverseButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x25c0, 0xfe0f }),
            name: "reverse button",
            searchTerms: new string[] { "reverse", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3382
        );

        /* ‚è™ */
        public static readonly SingleEmoji FastReverseButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23ea }),
            name: "fast reverse button",
            searchTerms: new string[] { "fast", "reverse", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3384
        );

        /* ‚èÆÔ∏è */
        public static readonly SingleEmoji LastTrackButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23ee, 0xfe0f }),
            name: "last track button",
            searchTerms: new string[] { "last", "track", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3385
        );

        /* üîº */
        public static readonly SingleEmoji UpwardsButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f53c }),
            name: "upwards button",
            searchTerms: new string[] { "upwards", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3387
        );

        /* ‚è´ */
        public static readonly SingleEmoji FastUpButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23eb }),
            name: "fast up button",
            searchTerms: new string[] { "fast", "up", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3388
        );

        /* üîΩ */
        public static readonly SingleEmoji DownwardsButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f53d }),
            name: "downwards button",
            searchTerms: new string[] { "downwards", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3389
        );

        /* ‚è¨ */
        public static readonly SingleEmoji FastDownButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23ec }),
            name: "fast down button",
            searchTerms: new string[] { "fast", "down", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3390
        );

        /* ‚è∏Ô∏è */
        public static readonly SingleEmoji PauseButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23f8, 0xfe0f }),
            name: "pause button",
            searchTerms: new string[] { "pause", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3391
        );

        /* ‚èπÔ∏è */
        public static readonly SingleEmoji StopButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23f9, 0xfe0f }),
            name: "stop button",
            searchTerms: new string[] { "stop", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3393
        );

        /* ‚è∫Ô∏è */
        public static readonly SingleEmoji RecordButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23fa, 0xfe0f }),
            name: "record button",
            searchTerms: new string[] { "record", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3395
        );

        /* ‚èèÔ∏è */
        public static readonly SingleEmoji EjectButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23cf, 0xfe0f }),
            name: "eject button",
            searchTerms: new string[] { "eject", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3397
        );

        /* üé¶ */
        public static readonly SingleEmoji Cinema = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3a6 }),
            name: "cinema",
            searchTerms: new string[] { "cinema" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3399
        );

        /* üîÖ */
        public static readonly SingleEmoji DimButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f505 }),
            name: "dim button",
            searchTerms: new string[] { "dim", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3400
        );

        /* üîÜ */
        public static readonly SingleEmoji BrightButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f506 }),
            name: "bright button",
            searchTerms: new string[] { "bright", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3401
        );

        /* üì∂ */
        public static readonly SingleEmoji AntennaBars = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f6 }),
            name: "antenna bars",
            searchTerms: new string[] { "antenna", "bars" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3402
        );

        /* üì≥ */
        public static readonly SingleEmoji VibrationMode = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f3 }),
            name: "vibration mode",
            searchTerms: new string[] { "vibration", "mode" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3403
        );

        /* üì¥ */
        public static readonly SingleEmoji MobilePhoneOff = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4f4 }),
            name: "mobile phone off",
            searchTerms: new string[] { "mobile", "phone", "off" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.AV_SYMBOL,
            hasGlyph: true,
            sortOrder: 3404
        );

        /* ‚ôÄÔ∏è */
        public static readonly SingleEmoji FemaleSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2640, 0xfe0f }),
            name: "female sign",
            searchTerms: new string[] { "female", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GENDER,
            hasGlyph: true,
            sortOrder: 3405
        );

        /* ‚ôÇÔ∏è */
        public static readonly SingleEmoji MaleSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2642, 0xfe0f }),
            name: "male sign",
            searchTerms: new string[] { "male", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GENDER,
            hasGlyph: true,
            sortOrder: 3407
        );

        /* ‚öïÔ∏è */
        public static readonly SingleEmoji MedicalSymbol = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2695, 0xfe0f }),
            name: "medical symbol",
            searchTerms: new string[] { "medical", "symbol" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3409
        );

        /* ‚ôæÔ∏è */
        public static readonly SingleEmoji Infinity = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x267e, 0xfe0f }),
            name: "infinity",
            searchTerms: new string[] { "infinity" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3411
        );

        /* ‚ôªÔ∏è */
        public static readonly SingleEmoji RecyclingSymbol = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x267b, 0xfe0f }),
            name: "recycling symbol",
            searchTerms: new string[] { "recycling", "symbol" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3413
        );

        /* ‚öúÔ∏è */
        public static readonly SingleEmoji FleurDeLis = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x269c, 0xfe0f }),
            name: "fleur-de-lis",
            searchTerms: new string[] { "fleur", "de", "lis" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3415
        );

        /* üî± */
        public static readonly SingleEmoji TridentEmblem = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f531 }),
            name: "trident emblem",
            searchTerms: new string[] { "trident", "emblem" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3417
        );

        /* üìõ */
        public static readonly SingleEmoji NameBadge = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4db }),
            name: "name badge",
            searchTerms: new string[] { "name", "badge" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3418
        );

        /* üî∞ */
        public static readonly SingleEmoji JapaneseSymbolForBeginner = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f530 }),
            name: "Japanese symbol for beginner",
            searchTerms: new string[] { "japanese", "symbol", "for", "beginner" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3419
        );

        /* ‚≠ï */
        public static readonly SingleEmoji HollowRedCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2b55 }),
            name: "hollow red circle",
            searchTerms: new string[] { "hollow", "red", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3420
        );

        /* ‚úÖ */
        public static readonly SingleEmoji CheckMarkButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2705 }),
            name: "check mark button",
            searchTerms: new string[] { "check", "mark", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3421
        );

        /* ‚òëÔ∏è */
        public static readonly SingleEmoji CheckBoxCheck = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2611, 0xfe0f }),
            name: "check box with check",
            searchTerms: new string[] { "check", "box", "check" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3422
        );

        /* ‚úîÔ∏è */
        public static readonly SingleEmoji CheckMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2714, 0xfe0f }),
            name: "check mark",
            searchTerms: new string[] { "check", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3424
        );

        /* ‚úñÔ∏è */
        public static readonly SingleEmoji MultiplicationSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2716, 0xfe0f }),
            name: "multiplication sign",
            searchTerms: new string[] { "multiplication", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3426
        );

        /* ‚ùå */
        public static readonly SingleEmoji CrossMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x274c }),
            name: "cross mark",
            searchTerms: new string[] { "cross", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3428
        );

        /* ‚ùé */
        public static readonly SingleEmoji CrossMarkButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x274e }),
            name: "cross mark button",
            searchTerms: new string[] { "cross", "mark", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3429
        );

        /* ‚ûï */
        public static readonly SingleEmoji PlusSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2795 }),
            name: "plus sign",
            searchTerms: new string[] { "plus", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3430
        );

        /* ‚ûñ */
        public static readonly SingleEmoji MinusSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2796 }),
            name: "minus sign",
            searchTerms: new string[] { "minus", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3431
        );

        /* ‚ûó */
        public static readonly SingleEmoji DivisionSign = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2797 }),
            name: "division sign",
            searchTerms: new string[] { "division", "sign" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3432
        );

        /* ‚û∞ */
        public static readonly SingleEmoji CurlyLoop = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x27b0 }),
            name: "curly loop",
            searchTerms: new string[] { "curly", "loop" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3433
        );

        /* ‚ûø */
        public static readonly SingleEmoji DoubleCurlyLoop = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x27bf }),
            name: "double curly loop",
            searchTerms: new string[] { "double", "curly", "loop" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3434
        );

        /* „ÄΩÔ∏è */
        public static readonly SingleEmoji PartAlternationMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x303d, 0xfe0f }),
            name: "part alternation mark",
            searchTerms: new string[] { "part", "alternation", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3435
        );

        /* ‚ú≥Ô∏è */
        public static readonly SingleEmoji EightSpokedAsterisk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2733, 0xfe0f }),
            name: "eight-spoked asterisk",
            searchTerms: new string[] { "eight", "spoked", "asterisk" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3437
        );

        /* ‚ú¥Ô∏è */
        public static readonly SingleEmoji EightPointedStar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2734, 0xfe0f }),
            name: "eight-pointed star",
            searchTerms: new string[] { "eight", "pointed", "star" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3439
        );

        /* ‚ùáÔ∏è */
        public static readonly SingleEmoji Sparkle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2747, 0xfe0f }),
            name: "sparkle",
            searchTerms: new string[] { "sparkle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3441
        );

        /* ‚ÄºÔ∏è */
        public static readonly SingleEmoji DoubleExclamationMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x203c, 0xfe0f }),
            name: "double exclamation mark",
            searchTerms: new string[] { "double", "exclamation", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3443
        );

        /* ‚ÅâÔ∏è */
        public static readonly SingleEmoji ExclamationQuestionMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2049, 0xfe0f }),
            name: "exclamation question mark",
            searchTerms: new string[] { "exclamation", "question", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3445
        );

        /* ‚ùì */
        public static readonly SingleEmoji QuestionMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2753 }),
            name: "question mark",
            searchTerms: new string[] { "question", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3447
        );

        /* ‚ùî */
        public static readonly SingleEmoji WhiteQuestionMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2754 }),
            name: "white question mark",
            searchTerms: new string[] { "white", "question", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3448
        );

        /* ‚ùï */
        public static readonly SingleEmoji WhiteExclamationMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2755 }),
            name: "white exclamation mark",
            searchTerms: new string[] { "white", "exclamation", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3449
        );

        /* ‚ùó */
        public static readonly SingleEmoji ExclamationMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2757 }),
            name: "exclamation mark",
            searchTerms: new string[] { "exclamation", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3450
        );

        /* „Ä∞Ô∏è */
        public static readonly SingleEmoji WavyDash = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x3030, 0xfe0f }),
            name: "wavy dash",
            searchTerms: new string[] { "wavy", "dash" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3451
        );

        /* ¬©Ô∏è */
        public static readonly SingleEmoji Copyright = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0xa9, 0xfe0f }),
            name: "copyright",
            searchTerms: new string[] { "copyright" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3453
        );

        /* ¬ÆÔ∏è */
        public static readonly SingleEmoji Registered = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0xae, 0xfe0f }),
            name: "registered",
            searchTerms: new string[] { "registered" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3455
        );

        /* ‚Ñ¢Ô∏è */
        public static readonly SingleEmoji TradeMark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2122, 0xfe0f }),
            name: "trade mark",
            searchTerms: new string[] { "trade", "mark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.OTHER_SYMBOL,
            hasGlyph: true,
            sortOrder: 3457
        );

        /* Ô∏è‚É£ */
        public static readonly SingleEmoji KeycapHash = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x23, 0xfe0f, 0x20e3 }),
            name: "keycap: #",
            searchTerms: new string[] { "keycap", "hash" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: false,
            sortOrder: 3459
        );

        /* *Ô∏è‚É£ */
        public static readonly SingleEmoji KeycapAsterisk = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2a, 0xfe0f, 0x20e3 }),
            name: "keycap: *",
            searchTerms: new string[] { "keycap", "asterisk" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3461
        );

        /* 0Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap0 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x30, 0xfe0f, 0x20e3 }),
            name: "keycap: 0",
            searchTerms: new string[] { "keycap", "0" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3463
        );

        /* 1Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap1 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x31, 0xfe0f, 0x20e3 }),
            name: "keycap: 1",
            searchTerms: new string[] { "keycap", "1" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3465
        );

        /* 2Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap2 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x32, 0xfe0f, 0x20e3 }),
            name: "keycap: 2",
            searchTerms: new string[] { "keycap", "2" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3467
        );

        /* 3Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap3 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x33, 0xfe0f, 0x20e3 }),
            name: "keycap: 3",
            searchTerms: new string[] { "keycap", "3" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3469
        );

        /* 4Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap4 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x34, 0xfe0f, 0x20e3 }),
            name: "keycap: 4",
            searchTerms: new string[] { "keycap", "4" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3471
        );

        /* 5Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap5 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x35, 0xfe0f, 0x20e3 }),
            name: "keycap: 5",
            searchTerms: new string[] { "keycap", "5" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3473
        );

        /* 6Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap6 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x36, 0xfe0f, 0x20e3 }),
            name: "keycap: 6",
            searchTerms: new string[] { "keycap", "6" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3475
        );

        /* 7Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap7 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x37, 0xfe0f, 0x20e3 }),
            name: "keycap: 7",
            searchTerms: new string[] { "keycap", "7" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3477
        );

        /* 8Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap8 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x38, 0xfe0f, 0x20e3 }),
            name: "keycap: 8",
            searchTerms: new string[] { "keycap", "8" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3479
        );

        /* 9Ô∏è‚É£ */
        public static readonly SingleEmoji Keycap9 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x39, 0xfe0f, 0x20e3 }),
            name: "keycap: 9",
            searchTerms: new string[] { "keycap", "9" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3481
        );

        /* üîü */
        public static readonly SingleEmoji Keycap10 = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f51f }),
            name: "keycap: 10",
            searchTerms: new string[] { "keycap", "10" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.KEYCAP,
            hasGlyph: true,
            sortOrder: 3483
        );

        /* üî† */
        public static readonly SingleEmoji InputLatinUppercase = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f520 }),
            name: "input latin uppercase",
            searchTerms: new string[] { "input", "latin", "uppercase" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3484
        );

        /* üî° */
        public static readonly SingleEmoji InputLatinLowercase = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f521 }),
            name: "input latin lowercase",
            searchTerms: new string[] { "input", "latin", "lowercase" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3485
        );

        /* üî¢ */
        public static readonly SingleEmoji InputNumbers = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f522 }),
            name: "input numbers",
            searchTerms: new string[] { "input", "numbers" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3486
        );

        /* üî£ */
        public static readonly SingleEmoji InputSymbols = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f523 }),
            name: "input symbols",
            searchTerms: new string[] { "input", "symbols" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3487
        );

        /* üî§ */
        public static readonly SingleEmoji InputLatinLetters = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f524 }),
            name: "input latin letters",
            searchTerms: new string[] { "input", "latin", "letters" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3488
        );

        /* üÖ∞Ô∏è */
        public static readonly SingleEmoji AButtonBloodType = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f170, 0xfe0f }),
            name: "A button (blood type)",
            searchTerms: new string[] { "a", "button", "blood", "type" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3489
        );

        /* üÜé */
        public static readonly SingleEmoji AbButtonBloodType = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f18e }),
            name: "AB button (blood type)",
            searchTerms: new string[] { "ab", "button", "blood", "type" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3491
        );

        /* üÖ±Ô∏è */
        public static readonly SingleEmoji BButtonBloodType = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f171, 0xfe0f }),
            name: "B button (blood type)",
            searchTerms: new string[] { "b", "button", "blood", "type" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3492
        );

        /* üÜë */
        public static readonly SingleEmoji ClButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f191 }),
            name: "CL button",
            searchTerms: new string[] { "cl", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3494
        );

        /* üÜí */
        public static readonly SingleEmoji CoolButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f192 }),
            name: "COOL button",
            searchTerms: new string[] { "cool", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3495
        );

        /* üÜì */
        public static readonly SingleEmoji FreeButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f193 }),
            name: "FREE button",
            searchTerms: new string[] { "free", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3496
        );

        /* ‚ÑπÔ∏è */
        public static readonly SingleEmoji Information = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2139, 0xfe0f }),
            name: "information",
            searchTerms: new string[] { "information" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3497
        );

        /* üÜî */
        public static readonly SingleEmoji IdButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f194 }),
            name: "ID button",
            searchTerms: new string[] { "id", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3499
        );

        /* ‚ìÇÔ∏è */
        public static readonly SingleEmoji CircledM = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x24c2, 0xfe0f }),
            name: "circled M",
            searchTerms: new string[] { "circled", "m" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3500
        );

        /* üÜï */
        public static readonly SingleEmoji NewButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f195 }),
            name: "NEW button",
            searchTerms: new string[] { "new", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3502
        );

        /* üÜñ */
        public static readonly SingleEmoji NgButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f196 }),
            name: "NG button",
            searchTerms: new string[] { "ng", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3503
        );

        /* üÖæÔ∏è */
        public static readonly SingleEmoji OButtonBloodType = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f17e, 0xfe0f }),
            name: "O button (blood type)",
            searchTerms: new string[] { "o", "button", "blood", "type" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3504
        );

        /* üÜó */
        public static readonly SingleEmoji OkButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f197 }),
            name: "OK button",
            searchTerms: new string[] { "ok", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3506
        );

        /* üÖøÔ∏è */
        public static readonly SingleEmoji PButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f17f, 0xfe0f }),
            name: "P button",
            searchTerms: new string[] { "p", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3507
        );

        /* üÜò */
        public static readonly SingleEmoji SosButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f198 }),
            name: "SOS button",
            searchTerms: new string[] { "sos", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3509
        );

        /* üÜô */
        public static readonly SingleEmoji UpButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f199 }),
            name: "UP! button",
            searchTerms: new string[] { "up", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3510
        );

        /* üÜö */
        public static readonly SingleEmoji VsButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f19a }),
            name: "VS button",
            searchTerms: new string[] { "vs", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3511
        );

        /* üàÅ */
        public static readonly SingleEmoji JapaneseHereButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f201 }),
            name: "Japanese ‚Äúhere‚Äù button",
            searchTerms: new string[] { "japanese", "here", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3512
        );

        /* üàÇÔ∏è */
        public static readonly SingleEmoji JapaneseServiceChargeButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f202, 0xfe0f }),
            name: "Japanese ‚Äúservice charge‚Äù button",
            searchTerms: new string[] { "japanese", "service", "charge", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3513
        );

        /* üà∑Ô∏è */
        public static readonly SingleEmoji JapaneseMonthlyAmountButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f237, 0xfe0f }),
            name: "Japanese ‚Äúmonthly amount‚Äù button",
            searchTerms: new string[] { "japanese", "monthly", "amount", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3515
        );

        /* üà∂ */
        public static readonly SingleEmoji JapaneseNotFreeChargeButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f236 }),
            name: "Japanese ‚Äúnot free of charge‚Äù button",
            searchTerms: new string[] { "japanese", "not", "free", "charge", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3517
        );

        /* üàØ */
        public static readonly SingleEmoji JapaneseReservedButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f22f }),
            name: "Japanese ‚Äúreserved‚Äù button",
            searchTerms: new string[] { "japanese", "reserved", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3518
        );

        /* üâê */
        public static readonly SingleEmoji JapaneseBargainButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f250 }),
            name: "Japanese ‚Äúbargain‚Äù button",
            searchTerms: new string[] { "japanese", "bargain", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3519
        );

        /* üàπ */
        public static readonly SingleEmoji JapaneseDiscountButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f239 }),
            name: "Japanese ‚Äúdiscount‚Äù button",
            searchTerms: new string[] { "japanese", "discount", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3520
        );

        /* üàö */
        public static readonly SingleEmoji JapaneseFreeChargeButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f21a }),
            name: "Japanese ‚Äúfree of charge‚Äù button",
            searchTerms: new string[] { "japanese", "free", "charge", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3521
        );

        /* üà≤ */
        public static readonly SingleEmoji JapaneseProhibitedButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f232 }),
            name: "Japanese ‚Äúprohibited‚Äù button",
            searchTerms: new string[] { "japanese", "prohibited", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3522
        );

        /* üâë */
        public static readonly SingleEmoji JapaneseAcceptableButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f251 }),
            name: "Japanese ‚Äúacceptable‚Äù button",
            searchTerms: new string[] { "japanese", "acceptable", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3523
        );

        /* üà∏ */
        public static readonly SingleEmoji JapaneseApplicationButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f238 }),
            name: "Japanese ‚Äúapplication‚Äù button",
            searchTerms: new string[] { "japanese", "application", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3524
        );

        /* üà¥ */
        public static readonly SingleEmoji JapanesePassingGradeButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f234 }),
            name: "Japanese ‚Äúpassing grade‚Äù button",
            searchTerms: new string[] { "japanese", "passing", "grade", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3525
        );

        /* üà≥ */
        public static readonly SingleEmoji JapaneseVacancyButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f233 }),
            name: "Japanese ‚Äúvacancy‚Äù button",
            searchTerms: new string[] { "japanese", "vacancy", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3526
        );

        /* „äóÔ∏è */
        public static readonly SingleEmoji JapaneseCongratulationsButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x3297, 0xfe0f }),
            name: "Japanese ‚Äúcongratulations‚Äù button",
            searchTerms: new string[] { "japanese", "congratulations", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3527
        );

        /* „äôÔ∏è */
        public static readonly SingleEmoji JapaneseSecretButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x3299, 0xfe0f }),
            name: "Japanese ‚Äúsecret‚Äù button",
            searchTerms: new string[] { "japanese", "secret", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3529
        );

        /* üà∫ */
        public static readonly SingleEmoji JapaneseOpenForBusinessButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f23a }),
            name: "Japanese ‚Äúopen for business‚Äù button",
            searchTerms: new string[] { "japanese", "open", "for", "business", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3531
        );

        /* üàµ */
        public static readonly SingleEmoji JapaneseNoVacancyButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f235 }),
            name: "Japanese ‚Äúno vacancy‚Äù button",
            searchTerms: new string[] { "japanese", "no", "vacancy", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.ALPHANUM,
            hasGlyph: true,
            sortOrder: 3532
        );

        /* üî¥ */
        public static readonly SingleEmoji RedCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f534 }),
            name: "red circle",
            searchTerms: new string[] { "red", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3533
        );

        /* üü† */
        public static readonly SingleEmoji OrangeCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e0 }),
            name: "orange circle",
            searchTerms: new string[] { "orange", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3534
        );

        /* üü° */
        public static readonly SingleEmoji YellowCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e1 }),
            name: "yellow circle",
            searchTerms: new string[] { "yellow", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3535
        );

        /* üü¢ */
        public static readonly SingleEmoji GreenCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e2 }),
            name: "green circle",
            searchTerms: new string[] { "green", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3536
        );

        /* üîµ */
        public static readonly SingleEmoji BlueCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f535 }),
            name: "blue circle",
            searchTerms: new string[] { "blue", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3537
        );

        /* üü£ */
        public static readonly SingleEmoji PurpleCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e3 }),
            name: "purple circle",
            searchTerms: new string[] { "purple", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3538
        );

        /* üü§ */
        public static readonly SingleEmoji BrownCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e4 }),
            name: "brown circle",
            searchTerms: new string[] { "brown", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3539
        );

        /* ‚ö´ */
        public static readonly SingleEmoji BlackCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26ab }),
            name: "black circle",
            searchTerms: new string[] { "black", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3540
        );

        /* ‚ö™ */
        public static readonly SingleEmoji WhiteCircle = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x26aa }),
            name: "white circle",
            searchTerms: new string[] { "white", "circle" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3541
        );

        /* üü• */
        public static readonly SingleEmoji RedSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e5 }),
            name: "red square",
            searchTerms: new string[] { "red", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3542
        );

        /* üüß */
        public static readonly SingleEmoji OrangeSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e7 }),
            name: "orange square",
            searchTerms: new string[] { "orange", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3543
        );

        /* üü® */
        public static readonly SingleEmoji YellowSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e8 }),
            name: "yellow square",
            searchTerms: new string[] { "yellow", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3544
        );

        /* üü© */
        public static readonly SingleEmoji GreenSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e9 }),
            name: "green square",
            searchTerms: new string[] { "green", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3545
        );

        /* üü¶ */
        public static readonly SingleEmoji BlueSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7e6 }),
            name: "blue square",
            searchTerms: new string[] { "blue", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3546
        );

        /* üü™ */
        public static readonly SingleEmoji PurpleSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7ea }),
            name: "purple square",
            searchTerms: new string[] { "purple", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3547
        );

        /* üü´ */
        public static readonly SingleEmoji BrownSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f7eb }),
            name: "brown square",
            searchTerms: new string[] { "brown", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3548
        );

        /* ‚¨õ */
        public static readonly SingleEmoji BlackLargeSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2b1b }),
            name: "black large square",
            searchTerms: new string[] { "black", "large", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3549
        );

        /* ‚¨ú */
        public static readonly SingleEmoji WhiteLargeSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x2b1c }),
            name: "white large square",
            searchTerms: new string[] { "white", "large", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3550
        );

        /* ‚óºÔ∏è */
        public static readonly SingleEmoji BlackMediumSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x25fc, 0xfe0f }),
            name: "black medium square",
            searchTerms: new string[] { "black", "medium", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3551
        );

        /* ‚óªÔ∏è */
        public static readonly SingleEmoji WhiteMediumSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x25fb, 0xfe0f }),
            name: "white medium square",
            searchTerms: new string[] { "white", "medium", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3553
        );

        /* ‚óæ */
        public static readonly SingleEmoji BlackMediumSmallSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x25fe }),
            name: "black medium-small square",
            searchTerms: new string[] { "black", "medium", "small", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3555
        );

        /* ‚óΩ */
        public static readonly SingleEmoji WhiteMediumSmallSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x25fd }),
            name: "white medium-small square",
            searchTerms: new string[] { "white", "medium", "small", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3556
        );

        /* ‚ñ™Ô∏è */
        public static readonly SingleEmoji BlackSmallSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x25aa, 0xfe0f }),
            name: "black small square",
            searchTerms: new string[] { "black", "small", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3557
        );

        /* ‚ñ´Ô∏è */
        public static readonly SingleEmoji WhiteSmallSquare = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x25ab, 0xfe0f }),
            name: "white small square",
            searchTerms: new string[] { "white", "small", "square" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3559
        );

        /* üî∂ */
        public static readonly SingleEmoji LargeOrangeDiamond = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f536 }),
            name: "large orange diamond",
            searchTerms: new string[] { "large", "orange", "diamond" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3561
        );

        /* üî∑ */
        public static readonly SingleEmoji LargeBlueDiamond = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f537 }),
            name: "large blue diamond",
            searchTerms: new string[] { "large", "blue", "diamond" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3562
        );

        /* üî∏ */
        public static readonly SingleEmoji SmallOrangeDiamond = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f538 }),
            name: "small orange diamond",
            searchTerms: new string[] { "small", "orange", "diamond" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3563
        );

        /* üîπ */
        public static readonly SingleEmoji SmallBlueDiamond = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f539 }),
            name: "small blue diamond",
            searchTerms: new string[] { "small", "blue", "diamond" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3564
        );

        /* üî∫ */
        public static readonly SingleEmoji RedTrianglePointedUp = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f53a }),
            name: "red triangle pointed up",
            searchTerms: new string[] { "red", "triangle", "pointed", "up" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3565
        );

        /* üîª */
        public static readonly SingleEmoji RedTrianglePointedDown = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f53b }),
            name: "red triangle pointed down",
            searchTerms: new string[] { "red", "triangle", "pointed", "down" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3566
        );

        /* üí† */
        public static readonly SingleEmoji DiamondADot = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f4a0 }),
            name: "diamond with a dot",
            searchTerms: new string[] { "diamond", "a", "dot" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3567
        );

        /* üîò */
        public static readonly SingleEmoji RadioButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f518 }),
            name: "radio button",
            searchTerms: new string[] { "radio", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3568
        );

        /* üî≥ */
        public static readonly SingleEmoji WhiteSquareButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f533 }),
            name: "white square button",
            searchTerms: new string[] { "white", "square", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3569
        );

        /* üî≤ */
        public static readonly SingleEmoji BlackSquareButton = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f532 }),
            name: "black square button",
            searchTerms: new string[] { "black", "square", "button" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.SYMBOLS,
            subgroup: Subgroups.GEOMETRIC,
            hasGlyph: true,
            sortOrder: 3570
        );

        /* üèÅ */
        public static readonly SingleEmoji ChequeredFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3c1 }),
            name: "chequered flag",
            searchTerms: new string[] { "chequered", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.FLAG,
            hasGlyph: true,
            sortOrder: 3571
        );

        /* üö© */
        public static readonly SingleEmoji TriangularFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f6a9 }),
            name: "triangular flag",
            searchTerms: new string[] { "triangular", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.FLAG,
            hasGlyph: true,
            sortOrder: 3572
        );

        /* üéå */
        public static readonly SingleEmoji CrossedFlags = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f38c }),
            name: "crossed flags",
            searchTerms: new string[] { "crossed", "flags" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.FLAG,
            hasGlyph: true,
            sortOrder: 3573
        );

        /* üè¥ */
        public static readonly SingleEmoji BlackFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f4 }),
            name: "black flag",
            searchTerms: new string[] { "black", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.FLAG,
            hasGlyph: true,
            sortOrder: 3574
        );

        /* üè≥Ô∏è */
        public static readonly SingleEmoji WhiteFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f3, 0xfe0f }),
            name: "white flag",
            searchTerms: new string[] { "white", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.FLAG,
            hasGlyph: true,
            sortOrder: 3575
        );

        /* üè≥Ô∏è‚Äçüåà */
        public static readonly SingleEmoji RainbowFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f3, 0xfe0f, 0x200d, 0x1f308 }),
            name: "rainbow flag",
            searchTerms: new string[] { "rainbow", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.FLAG,
            hasGlyph: true,
            sortOrder: 3577
        );

        /* üè¥‚Äç‚ò†Ô∏è */
        public static readonly SingleEmoji PirateFlag = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f4, 0x200d, 0x2620, 0xfe0f }),
            name: "pirate flag",
            searchTerms: new string[] { "pirate", "flag" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.FLAG,
            hasGlyph: true,
            sortOrder: 3579
        );

        /* üá¶üá® */
        public static readonly SingleEmoji FlagAscensionIsland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1e8 }),
            name: "flag: Ascension Island",
            searchTerms: new string[] { "flag", "ascension", "island" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3581
        );

        /* üá¶üá© */
        public static readonly SingleEmoji FlagAndorra = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1e9 }),
            name: "flag: Andorra",
            searchTerms: new string[] { "flag", "andorra" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3582
        );

        /* üá¶üá™ */
        public static readonly SingleEmoji FlagUnitedArabEmirates = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1ea }),
            name: "flag: United Arab Emirates",
            searchTerms: new string[] { "flag", "united", "arab", "emirates" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3583
        );

        /* üá¶üá´ */
        public static readonly SingleEmoji FlagAfghanistan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1eb }),
            name: "flag: Afghanistan",
            searchTerms: new string[] { "flag", "afghanistan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3584
        );

        /* üá¶üá¨ */
        public static readonly SingleEmoji FlagAntiguaBarbuda = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1ec }),
            name: "flag: Antigua & Barbuda",
            searchTerms: new string[] { "flag", "antigua", "barbuda" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3585
        );

        /* üá¶üáÆ */
        public static readonly SingleEmoji FlagAnguilla = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1ee }),
            name: "flag: Anguilla",
            searchTerms: new string[] { "flag", "anguilla" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3586
        );

        /* üá¶üá± */
        public static readonly SingleEmoji FlagAlbania = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1f1 }),
            name: "flag: Albania",
            searchTerms: new string[] { "flag", "albania" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3587
        );

        /* üá¶üá≤ */
        public static readonly SingleEmoji FlagArmenia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1f2 }),
            name: "flag: Armenia",
            searchTerms: new string[] { "flag", "armenia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3588
        );

        /* üá¶üá¥ */
        public static readonly SingleEmoji FlagAngola = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1f4 }),
            name: "flag: Angola",
            searchTerms: new string[] { "flag", "angola" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3589
        );

        /* üá¶üá∂ */
        public static readonly SingleEmoji FlagAntarctica = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1f6 }),
            name: "flag: Antarctica",
            searchTerms: new string[] { "flag", "antarctica" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3590
        );

        /* üá¶üá∑ */
        public static readonly SingleEmoji FlagArgentina = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1f7 }),
            name: "flag: Argentina",
            searchTerms: new string[] { "flag", "argentina" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3591
        );

        /* üá¶üá∏ */
        public static readonly SingleEmoji FlagAmericanSamoa = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1f8 }),
            name: "flag: American Samoa",
            searchTerms: new string[] { "flag", "american", "samoa" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3592
        );

        /* üá¶üáπ */
        public static readonly SingleEmoji FlagAustria = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1f9 }),
            name: "flag: Austria",
            searchTerms: new string[] { "flag", "austria" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3593
        );

        /* üá¶üá∫ */
        public static readonly SingleEmoji FlagAustralia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1fa }),
            name: "flag: Australia",
            searchTerms: new string[] { "flag", "australia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3594
        );

        /* üá¶üáº */
        public static readonly SingleEmoji FlagAruba = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1fc }),
            name: "flag: Aruba",
            searchTerms: new string[] { "flag", "aruba" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3595
        );

        /* üá¶üáΩ */
        public static readonly SingleEmoji Flag√ÖlandIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1fd }),
            name: "flag: √Öland Islands",
            searchTerms: new string[] { "flag", "√•land", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3596
        );

        /* üá¶üáø */
        public static readonly SingleEmoji FlagAzerbaijan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e6, 0x1f1ff }),
            name: "flag: Azerbaijan",
            searchTerms: new string[] { "flag", "azerbaijan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3597
        );

        /* üáßüá¶ */
        public static readonly SingleEmoji FlagBosniaHerzegovina = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1e6 }),
            name: "flag: Bosnia & Herzegovina",
            searchTerms: new string[] { "flag", "bosnia", "herzegovina" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3598
        );

        /* üáßüáß */
        public static readonly SingleEmoji FlagBarbados = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1e7 }),
            name: "flag: Barbados",
            searchTerms: new string[] { "flag", "barbados" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3599
        );

        /* üáßüá© */
        public static readonly SingleEmoji FlagBangladesh = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1e9 }),
            name: "flag: Bangladesh",
            searchTerms: new string[] { "flag", "bangladesh" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3600
        );

        /* üáßüá™ */
        public static readonly SingleEmoji FlagBelgium = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1ea }),
            name: "flag: Belgium",
            searchTerms: new string[] { "flag", "belgium" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3601
        );

        /* üáßüá´ */
        public static readonly SingleEmoji FlagBurkinaFaso = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1eb }),
            name: "flag: Burkina Faso",
            searchTerms: new string[] { "flag", "burkina", "faso" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3602
        );

        /* üáßüá¨ */
        public static readonly SingleEmoji FlagBulgaria = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1ec }),
            name: "flag: Bulgaria",
            searchTerms: new string[] { "flag", "bulgaria" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3603
        );

        /* üáßüá≠ */
        public static readonly SingleEmoji FlagBahrain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1ed }),
            name: "flag: Bahrain",
            searchTerms: new string[] { "flag", "bahrain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3604
        );

        /* üáßüáÆ */
        public static readonly SingleEmoji FlagBurundi = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1ee }),
            name: "flag: Burundi",
            searchTerms: new string[] { "flag", "burundi" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3605
        );

        /* üáßüáØ */
        public static readonly SingleEmoji FlagBenin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1ef }),
            name: "flag: Benin",
            searchTerms: new string[] { "flag", "benin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3606
        );

        /* üáßüá± */
        public static readonly SingleEmoji FlagStBarth√©lemy = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1f1 }),
            name: "flag: St. Barth√©lemy",
            searchTerms: new string[] { "flag", "st", "barth√©lemy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3607
        );

        /* üáßüá≤ */
        public static readonly SingleEmoji FlagBermuda = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1f2 }),
            name: "flag: Bermuda",
            searchTerms: new string[] { "flag", "bermuda" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3608
        );

        /* üáßüá≥ */
        public static readonly SingleEmoji FlagBrunei = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1f3 }),
            name: "flag: Brunei",
            searchTerms: new string[] { "flag", "brunei" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3609
        );

        /* üáßüá¥ */
        public static readonly SingleEmoji FlagBolivia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1f4 }),
            name: "flag: Bolivia",
            searchTerms: new string[] { "flag", "bolivia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3610
        );

        /* üáßüá∂ */
        public static readonly SingleEmoji FlagCaribbeanNetherlands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1f6 }),
            name: "flag: Caribbean Netherlands",
            searchTerms: new string[] { "flag", "caribbean", "netherlands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3611
        );

        /* üáßüá∑ */
        public static readonly SingleEmoji FlagBrazil = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1f7 }),
            name: "flag: Brazil",
            searchTerms: new string[] { "flag", "brazil" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3612
        );

        /* üáßüá∏ */
        public static readonly SingleEmoji FlagBahamas = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1f8 }),
            name: "flag: Bahamas",
            searchTerms: new string[] { "flag", "bahamas" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3613
        );

        /* üáßüáπ */
        public static readonly SingleEmoji FlagBhutan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1f9 }),
            name: "flag: Bhutan",
            searchTerms: new string[] { "flag", "bhutan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3614
        );

        /* üáßüáª */
        public static readonly SingleEmoji FlagBouvetIsland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1fb }),
            name: "flag: Bouvet Island",
            searchTerms: new string[] { "flag", "bouvet", "island" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3615
        );

        /* üáßüáº */
        public static readonly SingleEmoji FlagBotswana = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1fc }),
            name: "flag: Botswana",
            searchTerms: new string[] { "flag", "botswana" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3616
        );

        /* üáßüáæ */
        public static readonly SingleEmoji FlagBelarus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1fe }),
            name: "flag: Belarus",
            searchTerms: new string[] { "flag", "belarus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3617
        );

        /* üáßüáø */
        public static readonly SingleEmoji FlagBelize = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e7, 0x1f1ff }),
            name: "flag: Belize",
            searchTerms: new string[] { "flag", "belize" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3618
        );

        /* üá®üá¶ */
        public static readonly SingleEmoji FlagCanada = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1e6 }),
            name: "flag: Canada",
            searchTerms: new string[] { "flag", "canada" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3619
        );

        /* üá®üá® */
        public static readonly SingleEmoji FlagCocosKeelingIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1e8 }),
            name: "flag: Cocos (Keeling) Islands",
            searchTerms: new string[] { "flag", "cocos", "keeling", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3620
        );

        /* üá®üá© */
        public static readonly SingleEmoji FlagCongoKinshasa = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1e9 }),
            name: "flag: Congo - Kinshasa",
            searchTerms: new string[] { "flag", "congo", "kinshasa" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3621
        );

        /* üá®üá´ */
        public static readonly SingleEmoji FlagCentralAfricanRepublic = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1eb }),
            name: "flag: Central African Republic",
            searchTerms: new string[] { "flag", "central", "african", "republic" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3622
        );

        /* üá®üá¨ */
        public static readonly SingleEmoji FlagCongoBrazzaville = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1ec }),
            name: "flag: Congo - Brazzaville",
            searchTerms: new string[] { "flag", "congo", "brazzaville" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3623
        );

        /* üá®üá≠ */
        public static readonly SingleEmoji FlagSwitzerland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1ed }),
            name: "flag: Switzerland",
            searchTerms: new string[] { "flag", "switzerland" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3624
        );

        /* üá®üáÆ */
        public static readonly SingleEmoji FlagC√¥teDivoire = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1ee }),
            name: "flag: C√¥te d‚ÄôIvoire",
            searchTerms: new string[] { "flag", "c√¥te", "divoire" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3625
        );

        /* üá®üá∞ */
        public static readonly SingleEmoji FlagCookIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1f0 }),
            name: "flag: Cook Islands",
            searchTerms: new string[] { "flag", "cook", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3626
        );

        /* üá®üá± */
        public static readonly SingleEmoji FlagChile = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1f1 }),
            name: "flag: Chile",
            searchTerms: new string[] { "flag", "chile" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3627
        );

        /* üá®üá≤ */
        public static readonly SingleEmoji FlagCameroon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1f2 }),
            name: "flag: Cameroon",
            searchTerms: new string[] { "flag", "cameroon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3628
        );

        /* üá®üá≥ */
        public static readonly SingleEmoji FlagChina = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1f3 }),
            name: "flag: China",
            searchTerms: new string[] { "flag", "china" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3629
        );

        /* üá®üá¥ */
        public static readonly SingleEmoji FlagColombia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1f4 }),
            name: "flag: Colombia",
            searchTerms: new string[] { "flag", "colombia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3630
        );

        /* üá®üáµ */
        public static readonly SingleEmoji FlagClippertonIsland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1f5 }),
            name: "flag: Clipperton Island",
            searchTerms: new string[] { "flag", "clipperton", "island" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3631
        );

        /* üá®üá∑ */
        public static readonly SingleEmoji FlagCostaRica = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1f7 }),
            name: "flag: Costa Rica",
            searchTerms: new string[] { "flag", "costa", "rica" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3632
        );

        /* üá®üá∫ */
        public static readonly SingleEmoji FlagCuba = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1fa }),
            name: "flag: Cuba",
            searchTerms: new string[] { "flag", "cuba" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3633
        );

        /* üá®üáª */
        public static readonly SingleEmoji FlagCapeVerde = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1fb }),
            name: "flag: Cape Verde",
            searchTerms: new string[] { "flag", "cape", "verde" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3634
        );

        /* üá®üáº */
        public static readonly SingleEmoji FlagCura√ßao = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1fc }),
            name: "flag: Cura√ßao",
            searchTerms: new string[] { "flag", "cura√ßao" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3635
        );

        /* üá®üáΩ */
        public static readonly SingleEmoji FlagChristmasIsland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1fd }),
            name: "flag: Christmas Island",
            searchTerms: new string[] { "flag", "christmas", "island" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3636
        );

        /* üá®üáæ */
        public static readonly SingleEmoji FlagCyprus = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1fe }),
            name: "flag: Cyprus",
            searchTerms: new string[] { "flag", "cyprus" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3637
        );

        /* üá®üáø */
        public static readonly SingleEmoji FlagCzechia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e8, 0x1f1ff }),
            name: "flag: Czechia",
            searchTerms: new string[] { "flag", "czechia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3638
        );

        /* üá©üá™ */
        public static readonly SingleEmoji FlagGermany = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e9, 0x1f1ea }),
            name: "flag: Germany",
            searchTerms: new string[] { "flag", "germany" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3639
        );

        /* üá©üá¨ */
        public static readonly SingleEmoji FlagDiegoGarcia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e9, 0x1f1ec }),
            name: "flag: Diego Garcia",
            searchTerms: new string[] { "flag", "diego", "garcia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3640
        );

        /* üá©üáØ */
        public static readonly SingleEmoji FlagDjibouti = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e9, 0x1f1ef }),
            name: "flag: Djibouti",
            searchTerms: new string[] { "flag", "djibouti" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3641
        );

        /* üá©üá∞ */
        public static readonly SingleEmoji FlagDenmark = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e9, 0x1f1f0 }),
            name: "flag: Denmark",
            searchTerms: new string[] { "flag", "denmark" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3642
        );

        /* üá©üá≤ */
        public static readonly SingleEmoji FlagDominica = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e9, 0x1f1f2 }),
            name: "flag: Dominica",
            searchTerms: new string[] { "flag", "dominica" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3643
        );

        /* üá©üá¥ */
        public static readonly SingleEmoji FlagDominicanRepublic = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e9, 0x1f1f4 }),
            name: "flag: Dominican Republic",
            searchTerms: new string[] { "flag", "dominican", "republic" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3644
        );

        /* üá©üáø */
        public static readonly SingleEmoji FlagAlgeria = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1e9, 0x1f1ff }),
            name: "flag: Algeria",
            searchTerms: new string[] { "flag", "algeria" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3645
        );

        /* üá™üá¶ */
        public static readonly SingleEmoji FlagCeutaMelilla = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ea, 0x1f1e6 }),
            name: "flag: Ceuta & Melilla",
            searchTerms: new string[] { "flag", "ceuta", "melilla" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3646
        );

        /* üá™üá® */
        public static readonly SingleEmoji FlagEcuador = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ea, 0x1f1e8 }),
            name: "flag: Ecuador",
            searchTerms: new string[] { "flag", "ecuador" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3647
        );

        /* üá™üá™ */
        public static readonly SingleEmoji FlagEstonia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ea, 0x1f1ea }),
            name: "flag: Estonia",
            searchTerms: new string[] { "flag", "estonia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3648
        );

        /* üá™üá¨ */
        public static readonly SingleEmoji FlagEgypt = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ea, 0x1f1ec }),
            name: "flag: Egypt",
            searchTerms: new string[] { "flag", "egypt" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3649
        );

        /* üá™üá≠ */
        public static readonly SingleEmoji FlagWesternSahara = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ea, 0x1f1ed }),
            name: "flag: Western Sahara",
            searchTerms: new string[] { "flag", "western", "sahara" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3650
        );

        /* üá™üá∑ */
        public static readonly SingleEmoji FlagEritrea = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ea, 0x1f1f7 }),
            name: "flag: Eritrea",
            searchTerms: new string[] { "flag", "eritrea" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3651
        );

        /* üá™üá∏ */
        public static readonly SingleEmoji FlagSpain = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ea, 0x1f1f8 }),
            name: "flag: Spain",
            searchTerms: new string[] { "flag", "spain" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3652
        );

        /* üá™üáπ */
        public static readonly SingleEmoji FlagEthiopia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ea, 0x1f1f9 }),
            name: "flag: Ethiopia",
            searchTerms: new string[] { "flag", "ethiopia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3653
        );

        /* üá™üá∫ */
        public static readonly SingleEmoji FlagEuropeanUnion = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ea, 0x1f1fa }),
            name: "flag: European Union",
            searchTerms: new string[] { "flag", "european", "union" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3654
        );

        /* üá´üáÆ */
        public static readonly SingleEmoji FlagFinland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1eb, 0x1f1ee }),
            name: "flag: Finland",
            searchTerms: new string[] { "flag", "finland" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3655
        );

        /* üá´üáØ */
        public static readonly SingleEmoji FlagFiji = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1eb, 0x1f1ef }),
            name: "flag: Fiji",
            searchTerms: new string[] { "flag", "fiji" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3656
        );

        /* üá´üá∞ */
        public static readonly SingleEmoji FlagFalklandIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1eb, 0x1f1f0 }),
            name: "flag: Falkland Islands",
            searchTerms: new string[] { "flag", "falkland", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3657
        );

        /* üá´üá≤ */
        public static readonly SingleEmoji FlagMicronesia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1eb, 0x1f1f2 }),
            name: "flag: Micronesia",
            searchTerms: new string[] { "flag", "micronesia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3658
        );

        /* üá´üá¥ */
        public static readonly SingleEmoji FlagFaroeIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1eb, 0x1f1f4 }),
            name: "flag: Faroe Islands",
            searchTerms: new string[] { "flag", "faroe", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3659
        );

        /* üá´üá∑ */
        public static readonly SingleEmoji FlagFrance = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1eb, 0x1f1f7 }),
            name: "flag: France",
            searchTerms: new string[] { "flag", "france" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3660
        );

        /* üá¨üá¶ */
        public static readonly SingleEmoji FlagGabon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1e6 }),
            name: "flag: Gabon",
            searchTerms: new string[] { "flag", "gabon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3661
        );

        /* üá¨üáß */
        public static readonly SingleEmoji FlagUnitedKingdom = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1e7 }),
            name: "flag: United Kingdom",
            searchTerms: new string[] { "flag", "united", "kingdom" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3662
        );

        /* üá¨üá© */
        public static readonly SingleEmoji FlagGrenada = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1e9 }),
            name: "flag: Grenada",
            searchTerms: new string[] { "flag", "grenada" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3663
        );

        /* üá¨üá™ */
        public static readonly SingleEmoji FlagGeorgia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1ea }),
            name: "flag: Georgia",
            searchTerms: new string[] { "flag", "georgia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3664
        );

        /* üá¨üá´ */
        public static readonly SingleEmoji FlagFrenchGuiana = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1eb }),
            name: "flag: French Guiana",
            searchTerms: new string[] { "flag", "french", "guiana" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3665
        );

        /* üá¨üá¨ */
        public static readonly SingleEmoji FlagGuernsey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1ec }),
            name: "flag: Guernsey",
            searchTerms: new string[] { "flag", "guernsey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3666
        );

        /* üá¨üá≠ */
        public static readonly SingleEmoji FlagGhana = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1ed }),
            name: "flag: Ghana",
            searchTerms: new string[] { "flag", "ghana" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3667
        );

        /* üá¨üáÆ */
        public static readonly SingleEmoji FlagGibraltar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1ee }),
            name: "flag: Gibraltar",
            searchTerms: new string[] { "flag", "gibraltar" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3668
        );

        /* üá¨üá± */
        public static readonly SingleEmoji FlagGreenland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1f1 }),
            name: "flag: Greenland",
            searchTerms: new string[] { "flag", "greenland" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3669
        );

        /* üá¨üá≤ */
        public static readonly SingleEmoji FlagGambia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1f2 }),
            name: "flag: Gambia",
            searchTerms: new string[] { "flag", "gambia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3670
        );

        /* üá¨üá≥ */
        public static readonly SingleEmoji FlagGuinea = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1f3 }),
            name: "flag: Guinea",
            searchTerms: new string[] { "flag", "guinea" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3671
        );

        /* üá¨üáµ */
        public static readonly SingleEmoji FlagGuadeloupe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1f5 }),
            name: "flag: Guadeloupe",
            searchTerms: new string[] { "flag", "guadeloupe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3672
        );

        /* üá¨üá∂ */
        public static readonly SingleEmoji FlagEquatorialGuinea = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1f6 }),
            name: "flag: Equatorial Guinea",
            searchTerms: new string[] { "flag", "equatorial", "guinea" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3673
        );

        /* üá¨üá∑ */
        public static readonly SingleEmoji FlagGreece = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1f7 }),
            name: "flag: Greece",
            searchTerms: new string[] { "flag", "greece" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3674
        );

        /* üá¨üá∏ */
        public static readonly SingleEmoji FlagSouthGeorgiaSouthSandwichIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1f8 }),
            name: "flag: South Georgia & South Sandwich Islands",
            searchTerms: new string[] { "flag", "south", "georgia", "south", "sandwich", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3675
        );

        /* üá¨üáπ */
        public static readonly SingleEmoji FlagGuatemala = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1f9 }),
            name: "flag: Guatemala",
            searchTerms: new string[] { "flag", "guatemala" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3676
        );

        /* üá¨üá∫ */
        public static readonly SingleEmoji FlagGuam = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1fa }),
            name: "flag: Guam",
            searchTerms: new string[] { "flag", "guam" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3677
        );

        /* üá¨üáº */
        public static readonly SingleEmoji FlagGuineaBissau = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1fc }),
            name: "flag: Guinea-Bissau",
            searchTerms: new string[] { "flag", "guinea", "bissau" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3678
        );

        /* üá¨üáæ */
        public static readonly SingleEmoji FlagGuyana = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ec, 0x1f1fe }),
            name: "flag: Guyana",
            searchTerms: new string[] { "flag", "guyana" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3679
        );

        /* üá≠üá∞ */
        public static readonly SingleEmoji FlagHongKongSarChina = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ed, 0x1f1f0 }),
            name: "flag: Hong Kong SAR China",
            searchTerms: new string[] { "flag", "hong", "kong", "sar", "china" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3680
        );

        /* üá≠üá≤ */
        public static readonly SingleEmoji FlagHeardMcdonaldIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ed, 0x1f1f2 }),
            name: "flag: Heard & McDonald Islands",
            searchTerms: new string[] { "flag", "heard", "mcdonald", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3681
        );

        /* üá≠üá≥ */
        public static readonly SingleEmoji FlagHonduras = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ed, 0x1f1f3 }),
            name: "flag: Honduras",
            searchTerms: new string[] { "flag", "honduras" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3682
        );

        /* üá≠üá∑ */
        public static readonly SingleEmoji FlagCroatia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ed, 0x1f1f7 }),
            name: "flag: Croatia",
            searchTerms: new string[] { "flag", "croatia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3683
        );

        /* üá≠üáπ */
        public static readonly SingleEmoji FlagHaiti = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ed, 0x1f1f9 }),
            name: "flag: Haiti",
            searchTerms: new string[] { "flag", "haiti" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3684
        );

        /* üá≠üá∫ */
        public static readonly SingleEmoji FlagHungary = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ed, 0x1f1fa }),
            name: "flag: Hungary",
            searchTerms: new string[] { "flag", "hungary" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3685
        );

        /* üáÆüá® */
        public static readonly SingleEmoji FlagCanaryIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1e8 }),
            name: "flag: Canary Islands",
            searchTerms: new string[] { "flag", "canary", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3686
        );

        /* üáÆüá© */
        public static readonly SingleEmoji FlagIndonesia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1e9 }),
            name: "flag: Indonesia",
            searchTerms: new string[] { "flag", "indonesia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3687
        );

        /* üáÆüá™ */
        public static readonly SingleEmoji FlagIreland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1ea }),
            name: "flag: Ireland",
            searchTerms: new string[] { "flag", "ireland" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3688
        );

        /* üáÆüá± */
        public static readonly SingleEmoji FlagIsrael = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1f1 }),
            name: "flag: Israel",
            searchTerms: new string[] { "flag", "israel" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3689
        );

        /* üáÆüá≤ */
        public static readonly SingleEmoji FlagIsleMan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1f2 }),
            name: "flag: Isle of Man",
            searchTerms: new string[] { "flag", "isle", "man" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3690
        );

        /* üáÆüá≥ */
        public static readonly SingleEmoji FlagIndia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1f3 }),
            name: "flag: India",
            searchTerms: new string[] { "flag", "india" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3691
        );

        /* üáÆüá¥ */
        public static readonly SingleEmoji FlagBritishIndianOceanTerritory = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1f4 }),
            name: "flag: British Indian Ocean Territory",
            searchTerms: new string[] { "flag", "british", "indian", "ocean", "territory" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3692
        );

        /* üáÆüá∂ */
        public static readonly SingleEmoji FlagIraq = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1f6 }),
            name: "flag: Iraq",
            searchTerms: new string[] { "flag", "iraq" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3693
        );

        /* üáÆüá∑ */
        public static readonly SingleEmoji FlagIran = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1f7 }),
            name: "flag: Iran",
            searchTerms: new string[] { "flag", "iran" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3694
        );

        /* üáÆüá∏ */
        public static readonly SingleEmoji FlagIceland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1f8 }),
            name: "flag: Iceland",
            searchTerms: new string[] { "flag", "iceland" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3695
        );

        /* üáÆüáπ */
        public static readonly SingleEmoji FlagItaly = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ee, 0x1f1f9 }),
            name: "flag: Italy",
            searchTerms: new string[] { "flag", "italy" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3696
        );

        /* üáØüá™ */
        public static readonly SingleEmoji FlagJersey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ef, 0x1f1ea }),
            name: "flag: Jersey",
            searchTerms: new string[] { "flag", "jersey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3697
        );

        /* üáØüá≤ */
        public static readonly SingleEmoji FlagJamaica = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ef, 0x1f1f2 }),
            name: "flag: Jamaica",
            searchTerms: new string[] { "flag", "jamaica" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3698
        );

        /* üáØüá¥ */
        public static readonly SingleEmoji FlagJordan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ef, 0x1f1f4 }),
            name: "flag: Jordan",
            searchTerms: new string[] { "flag", "jordan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3699
        );

        /* üáØüáµ */
        public static readonly SingleEmoji FlagJapan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ef, 0x1f1f5 }),
            name: "flag: Japan",
            searchTerms: new string[] { "flag", "japan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3700
        );

        /* üá∞üá™ */
        public static readonly SingleEmoji FlagKenya = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1ea }),
            name: "flag: Kenya",
            searchTerms: new string[] { "flag", "kenya" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3701
        );

        /* üá∞üá¨ */
        public static readonly SingleEmoji FlagKyrgyzstan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1ec }),
            name: "flag: Kyrgyzstan",
            searchTerms: new string[] { "flag", "kyrgyzstan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3702
        );

        /* üá∞üá≠ */
        public static readonly SingleEmoji FlagCambodia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1ed }),
            name: "flag: Cambodia",
            searchTerms: new string[] { "flag", "cambodia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3703
        );

        /* üá∞üáÆ */
        public static readonly SingleEmoji FlagKiribati = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1ee }),
            name: "flag: Kiribati",
            searchTerms: new string[] { "flag", "kiribati" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3704
        );

        /* üá∞üá≤ */
        public static readonly SingleEmoji FlagComoros = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1f2 }),
            name: "flag: Comoros",
            searchTerms: new string[] { "flag", "comoros" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3705
        );

        /* üá∞üá≥ */
        public static readonly SingleEmoji FlagStKittsNevis = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1f3 }),
            name: "flag: St. Kitts & Nevis",
            searchTerms: new string[] { "flag", "st", "kitts", "nevis" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3706
        );

        /* üá∞üáµ */
        public static readonly SingleEmoji FlagNorthKorea = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1f5 }),
            name: "flag: North Korea",
            searchTerms: new string[] { "flag", "north", "korea" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3707
        );

        /* üá∞üá∑ */
        public static readonly SingleEmoji FlagSouthKorea = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1f7 }),
            name: "flag: South Korea",
            searchTerms: new string[] { "flag", "south", "korea" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3708
        );

        /* üá∞üáº */
        public static readonly SingleEmoji FlagKuwait = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1fc }),
            name: "flag: Kuwait",
            searchTerms: new string[] { "flag", "kuwait" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3709
        );

        /* üá∞üáæ */
        public static readonly SingleEmoji FlagCaymanIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1fe }),
            name: "flag: Cayman Islands",
            searchTerms: new string[] { "flag", "cayman", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3710
        );

        /* üá∞üáø */
        public static readonly SingleEmoji FlagKazakhstan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f0, 0x1f1ff }),
            name: "flag: Kazakhstan",
            searchTerms: new string[] { "flag", "kazakhstan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3711
        );

        /* üá±üá¶ */
        public static readonly SingleEmoji FlagLaos = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1e6 }),
            name: "flag: Laos",
            searchTerms: new string[] { "flag", "laos" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3712
        );

        /* üá±üáß */
        public static readonly SingleEmoji FlagLebanon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1e7 }),
            name: "flag: Lebanon",
            searchTerms: new string[] { "flag", "lebanon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3713
        );

        /* üá±üá® */
        public static readonly SingleEmoji FlagStLucia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1e8 }),
            name: "flag: St. Lucia",
            searchTerms: new string[] { "flag", "st", "lucia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3714
        );

        /* üá±üáÆ */
        public static readonly SingleEmoji FlagLiechtenstein = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1ee }),
            name: "flag: Liechtenstein",
            searchTerms: new string[] { "flag", "liechtenstein" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3715
        );

        /* üá±üá∞ */
        public static readonly SingleEmoji FlagSriLanka = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1f0 }),
            name: "flag: Sri Lanka",
            searchTerms: new string[] { "flag", "sri", "lanka" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3716
        );

        /* üá±üá∑ */
        public static readonly SingleEmoji FlagLiberia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1f7 }),
            name: "flag: Liberia",
            searchTerms: new string[] { "flag", "liberia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3717
        );

        /* üá±üá∏ */
        public static readonly SingleEmoji FlagLesotho = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1f8 }),
            name: "flag: Lesotho",
            searchTerms: new string[] { "flag", "lesotho" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3718
        );

        /* üá±üáπ */
        public static readonly SingleEmoji FlagLithuania = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1f9 }),
            name: "flag: Lithuania",
            searchTerms: new string[] { "flag", "lithuania" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3719
        );

        /* üá±üá∫ */
        public static readonly SingleEmoji FlagLuxembourg = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1fa }),
            name: "flag: Luxembourg",
            searchTerms: new string[] { "flag", "luxembourg" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3720
        );

        /* üá±üáª */
        public static readonly SingleEmoji FlagLatvia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1fb }),
            name: "flag: Latvia",
            searchTerms: new string[] { "flag", "latvia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3721
        );

        /* üá±üáæ */
        public static readonly SingleEmoji FlagLibya = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f1, 0x1f1fe }),
            name: "flag: Libya",
            searchTerms: new string[] { "flag", "libya" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3722
        );

        /* üá≤üá¶ */
        public static readonly SingleEmoji FlagMorocco = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1e6 }),
            name: "flag: Morocco",
            searchTerms: new string[] { "flag", "morocco" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3723
        );

        /* üá≤üá® */
        public static readonly SingleEmoji FlagMonaco = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1e8 }),
            name: "flag: Monaco",
            searchTerms: new string[] { "flag", "monaco" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3724
        );

        /* üá≤üá© */
        public static readonly SingleEmoji FlagMoldova = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1e9 }),
            name: "flag: Moldova",
            searchTerms: new string[] { "flag", "moldova" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3725
        );

        /* üá≤üá™ */
        public static readonly SingleEmoji FlagMontenegro = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1ea }),
            name: "flag: Montenegro",
            searchTerms: new string[] { "flag", "montenegro" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3726
        );

        /* üá≤üá´ */
        public static readonly SingleEmoji FlagStMartin = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1eb }),
            name: "flag: St. Martin",
            searchTerms: new string[] { "flag", "st", "martin" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3727
        );

        /* üá≤üá¨ */
        public static readonly SingleEmoji FlagMadagascar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1ec }),
            name: "flag: Madagascar",
            searchTerms: new string[] { "flag", "madagascar" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3728
        );

        /* üá≤üá≠ */
        public static readonly SingleEmoji FlagMarshallIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1ed }),
            name: "flag: Marshall Islands",
            searchTerms: new string[] { "flag", "marshall", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3729
        );

        /* üá≤üá∞ */
        public static readonly SingleEmoji FlagMacedonia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f0 }),
            name: "flag: Macedonia",
            searchTerms: new string[] { "flag", "macedonia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3730
        );

        /* üá≤üá± */
        public static readonly SingleEmoji FlagMali = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f1 }),
            name: "flag: Mali",
            searchTerms: new string[] { "flag", "mali" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3731
        );

        /* üá≤üá≤ */
        public static readonly SingleEmoji FlagMyanmarBurma = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f2 }),
            name: "flag: Myanmar (Burma)",
            searchTerms: new string[] { "flag", "myanmar", "burma" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3732
        );

        /* üá≤üá≥ */
        public static readonly SingleEmoji FlagMongolia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f3 }),
            name: "flag: Mongolia",
            searchTerms: new string[] { "flag", "mongolia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3733
        );

        /* üá≤üá¥ */
        public static readonly SingleEmoji FlagMacaoSarChina = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f4 }),
            name: "flag: Macao SAR China",
            searchTerms: new string[] { "flag", "macao", "sar", "china" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3734
        );

        /* üá≤üáµ */
        public static readonly SingleEmoji FlagNorthernMarianaIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f5 }),
            name: "flag: Northern Mariana Islands",
            searchTerms: new string[] { "flag", "northern", "mariana", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3735
        );

        /* üá≤üá∂ */
        public static readonly SingleEmoji FlagMartinique = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f6 }),
            name: "flag: Martinique",
            searchTerms: new string[] { "flag", "martinique" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3736
        );

        /* üá≤üá∑ */
        public static readonly SingleEmoji FlagMauritania = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f7 }),
            name: "flag: Mauritania",
            searchTerms: new string[] { "flag", "mauritania" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3737
        );

        /* üá≤üá∏ */
        public static readonly SingleEmoji FlagMontserrat = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f8 }),
            name: "flag: Montserrat",
            searchTerms: new string[] { "flag", "montserrat" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3738
        );

        /* üá≤üáπ */
        public static readonly SingleEmoji FlagMalta = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1f9 }),
            name: "flag: Malta",
            searchTerms: new string[] { "flag", "malta" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3739
        );

        /* üá≤üá∫ */
        public static readonly SingleEmoji FlagMauritius = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1fa }),
            name: "flag: Mauritius",
            searchTerms: new string[] { "flag", "mauritius" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3740
        );

        /* üá≤üáª */
        public static readonly SingleEmoji FlagMaldives = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1fb }),
            name: "flag: Maldives",
            searchTerms: new string[] { "flag", "maldives" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3741
        );

        /* üá≤üáº */
        public static readonly SingleEmoji FlagMalawi = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1fc }),
            name: "flag: Malawi",
            searchTerms: new string[] { "flag", "malawi" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3742
        );

        /* üá≤üáΩ */
        public static readonly SingleEmoji FlagMexico = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1fd }),
            name: "flag: Mexico",
            searchTerms: new string[] { "flag", "mexico" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3743
        );

        /* üá≤üáæ */
        public static readonly SingleEmoji FlagMalaysia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1fe }),
            name: "flag: Malaysia",
            searchTerms: new string[] { "flag", "malaysia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3744
        );

        /* üá≤üáø */
        public static readonly SingleEmoji FlagMozambique = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f2, 0x1f1ff }),
            name: "flag: Mozambique",
            searchTerms: new string[] { "flag", "mozambique" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3745
        );

        /* üá≥üá¶ */
        public static readonly SingleEmoji FlagNamibia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1e6 }),
            name: "flag: Namibia",
            searchTerms: new string[] { "flag", "namibia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3746
        );

        /* üá≥üá® */
        public static readonly SingleEmoji FlagNewCaledonia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1e8 }),
            name: "flag: New Caledonia",
            searchTerms: new string[] { "flag", "new", "caledonia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3747
        );

        /* üá≥üá™ */
        public static readonly SingleEmoji FlagNiger = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1ea }),
            name: "flag: Niger",
            searchTerms: new string[] { "flag", "niger" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3748
        );

        /* üá≥üá´ */
        public static readonly SingleEmoji FlagNorfolkIsland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1eb }),
            name: "flag: Norfolk Island",
            searchTerms: new string[] { "flag", "norfolk", "island" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3749
        );

        /* üá≥üá¨ */
        public static readonly SingleEmoji FlagNigeria = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1ec }),
            name: "flag: Nigeria",
            searchTerms: new string[] { "flag", "nigeria" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3750
        );

        /* üá≥üáÆ */
        public static readonly SingleEmoji FlagNicaragua = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1ee }),
            name: "flag: Nicaragua",
            searchTerms: new string[] { "flag", "nicaragua" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3751
        );

        /* üá≥üá± */
        public static readonly SingleEmoji FlagNetherlands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1f1 }),
            name: "flag: Netherlands",
            searchTerms: new string[] { "flag", "netherlands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3752
        );

        /* üá≥üá¥ */
        public static readonly SingleEmoji FlagNorway = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1f4 }),
            name: "flag: Norway",
            searchTerms: new string[] { "flag", "norway" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3753
        );

        /* üá≥üáµ */
        public static readonly SingleEmoji FlagNepal = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1f5 }),
            name: "flag: Nepal",
            searchTerms: new string[] { "flag", "nepal" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3754
        );

        /* üá≥üá∑ */
        public static readonly SingleEmoji FlagNauru = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1f7 }),
            name: "flag: Nauru",
            searchTerms: new string[] { "flag", "nauru" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3755
        );

        /* üá≥üá∫ */
        public static readonly SingleEmoji FlagNiue = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1fa }),
            name: "flag: Niue",
            searchTerms: new string[] { "flag", "niue" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3756
        );

        /* üá≥üáø */
        public static readonly SingleEmoji FlagNewZealand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f3, 0x1f1ff }),
            name: "flag: New Zealand",
            searchTerms: new string[] { "flag", "new", "zealand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3757
        );

        /* üá¥üá≤ */
        public static readonly SingleEmoji FlagOman = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f4, 0x1f1f2 }),
            name: "flag: Oman",
            searchTerms: new string[] { "flag", "oman" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3758
        );

        /* üáµüá¶ */
        public static readonly SingleEmoji FlagPanama = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1e6 }),
            name: "flag: Panama",
            searchTerms: new string[] { "flag", "panama" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3759
        );

        /* üáµüá™ */
        public static readonly SingleEmoji FlagPeru = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1ea }),
            name: "flag: Peru",
            searchTerms: new string[] { "flag", "peru" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3760
        );

        /* üáµüá´ */
        public static readonly SingleEmoji FlagFrenchPolynesia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1eb }),
            name: "flag: French Polynesia",
            searchTerms: new string[] { "flag", "french", "polynesia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3761
        );

        /* üáµüá¨ */
        public static readonly SingleEmoji FlagPapuaNewGuinea = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1ec }),
            name: "flag: Papua New Guinea",
            searchTerms: new string[] { "flag", "papua", "new", "guinea" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3762
        );

        /* üáµüá≠ */
        public static readonly SingleEmoji FlagPhilippines = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1ed }),
            name: "flag: Philippines",
            searchTerms: new string[] { "flag", "philippines" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3763
        );

        /* üáµüá∞ */
        public static readonly SingleEmoji FlagPakistan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1f0 }),
            name: "flag: Pakistan",
            searchTerms: new string[] { "flag", "pakistan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3764
        );

        /* üáµüá± */
        public static readonly SingleEmoji FlagPoland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1f1 }),
            name: "flag: Poland",
            searchTerms: new string[] { "flag", "poland" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3765
        );

        /* üáµüá≤ */
        public static readonly SingleEmoji FlagStPierreMiquelon = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1f2 }),
            name: "flag: St. Pierre & Miquelon",
            searchTerms: new string[] { "flag", "st", "pierre", "miquelon" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3766
        );

        /* üáµüá≥ */
        public static readonly SingleEmoji FlagPitcairnIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1f3 }),
            name: "flag: Pitcairn Islands",
            searchTerms: new string[] { "flag", "pitcairn", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3767
        );

        /* üáµüá∑ */
        public static readonly SingleEmoji FlagPuertoRico = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1f7 }),
            name: "flag: Puerto Rico",
            searchTerms: new string[] { "flag", "puerto", "rico" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3768
        );

        /* üáµüá∏ */
        public static readonly SingleEmoji FlagPalestinianTerritories = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1f8 }),
            name: "flag: Palestinian Territories",
            searchTerms: new string[] { "flag", "palestinian", "territories" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3769
        );

        /* üáµüáπ */
        public static readonly SingleEmoji FlagPortugal = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1f9 }),
            name: "flag: Portugal",
            searchTerms: new string[] { "flag", "portugal" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3770
        );

        /* üáµüáº */
        public static readonly SingleEmoji FlagPalau = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1fc }),
            name: "flag: Palau",
            searchTerms: new string[] { "flag", "palau" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3771
        );

        /* üáµüáæ */
        public static readonly SingleEmoji FlagParaguay = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f5, 0x1f1fe }),
            name: "flag: Paraguay",
            searchTerms: new string[] { "flag", "paraguay" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3772
        );

        /* üá∂üá¶ */
        public static readonly SingleEmoji FlagQatar = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f6, 0x1f1e6 }),
            name: "flag: Qatar",
            searchTerms: new string[] { "flag", "qatar" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3773
        );

        /* üá∑üá™ */
        public static readonly SingleEmoji FlagR√©union = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f7, 0x1f1ea }),
            name: "flag: R√©union",
            searchTerms: new string[] { "flag", "r√©union" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3774
        );

        /* üá∑üá¥ */
        public static readonly SingleEmoji FlagRomania = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f7, 0x1f1f4 }),
            name: "flag: Romania",
            searchTerms: new string[] { "flag", "romania" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3775
        );

        /* üá∑üá∏ */
        public static readonly SingleEmoji FlagSerbia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f7, 0x1f1f8 }),
            name: "flag: Serbia",
            searchTerms: new string[] { "flag", "serbia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3776
        );

        /* üá∑üá∫ */
        public static readonly SingleEmoji FlagRussia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f7, 0x1f1fa }),
            name: "flag: Russia",
            searchTerms: new string[] { "flag", "russia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3777
        );

        /* üá∑üáº */
        public static readonly SingleEmoji FlagRwanda = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f7, 0x1f1fc }),
            name: "flag: Rwanda",
            searchTerms: new string[] { "flag", "rwanda" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3778
        );

        /* üá∏üá¶ */
        public static readonly SingleEmoji FlagSaudiArabia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1e6 }),
            name: "flag: Saudi Arabia",
            searchTerms: new string[] { "flag", "saudi", "arabia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3779
        );

        /* üá∏üáß */
        public static readonly SingleEmoji FlagSolomonIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1e7 }),
            name: "flag: Solomon Islands",
            searchTerms: new string[] { "flag", "solomon", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3780
        );

        /* üá∏üá® */
        public static readonly SingleEmoji FlagSeychelles = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1e8 }),
            name: "flag: Seychelles",
            searchTerms: new string[] { "flag", "seychelles" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3781
        );

        /* üá∏üá© */
        public static readonly SingleEmoji FlagSudan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1e9 }),
            name: "flag: Sudan",
            searchTerms: new string[] { "flag", "sudan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3782
        );

        /* üá∏üá™ */
        public static readonly SingleEmoji FlagSweden = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1ea }),
            name: "flag: Sweden",
            searchTerms: new string[] { "flag", "sweden" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3783
        );

        /* üá∏üá¨ */
        public static readonly SingleEmoji FlagSingapore = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1ec }),
            name: "flag: Singapore",
            searchTerms: new string[] { "flag", "singapore" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3784
        );

        /* üá∏üá≠ */
        public static readonly SingleEmoji FlagStHelena = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1ed }),
            name: "flag: St. Helena",
            searchTerms: new string[] { "flag", "st", "helena" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3785
        );

        /* üá∏üáÆ */
        public static readonly SingleEmoji FlagSlovenia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1ee }),
            name: "flag: Slovenia",
            searchTerms: new string[] { "flag", "slovenia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3786
        );

        /* üá∏üáØ */
        public static readonly SingleEmoji FlagSvalbardJanMayen = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1ef }),
            name: "flag: Svalbard & Jan Mayen",
            searchTerms: new string[] { "flag", "svalbard", "jan", "mayen" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3787
        );

        /* üá∏üá∞ */
        public static readonly SingleEmoji FlagSlovakia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1f0 }),
            name: "flag: Slovakia",
            searchTerms: new string[] { "flag", "slovakia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3788
        );

        /* üá∏üá± */
        public static readonly SingleEmoji FlagSierraLeone = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1f1 }),
            name: "flag: Sierra Leone",
            searchTerms: new string[] { "flag", "sierra", "leone" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3789
        );

        /* üá∏üá≤ */
        public static readonly SingleEmoji FlagSanMarino = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1f2 }),
            name: "flag: San Marino",
            searchTerms: new string[] { "flag", "san", "marino" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3790
        );

        /* üá∏üá≥ */
        public static readonly SingleEmoji FlagSenegal = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1f3 }),
            name: "flag: Senegal",
            searchTerms: new string[] { "flag", "senegal" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3791
        );

        /* üá∏üá¥ */
        public static readonly SingleEmoji FlagSomalia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1f4 }),
            name: "flag: Somalia",
            searchTerms: new string[] { "flag", "somalia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3792
        );

        /* üá∏üá∑ */
        public static readonly SingleEmoji FlagSuriname = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1f7 }),
            name: "flag: Suriname",
            searchTerms: new string[] { "flag", "suriname" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3793
        );

        /* üá∏üá∏ */
        public static readonly SingleEmoji FlagSouthSudan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1f8 }),
            name: "flag: South Sudan",
            searchTerms: new string[] { "flag", "south", "sudan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3794
        );

        /* üá∏üáπ */
        public static readonly SingleEmoji FlagS√£oTom√©Pr√≠ncipe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1f9 }),
            name: "flag: S√£o Tom√© & Pr√≠ncipe",
            searchTerms: new string[] { "flag", "s√£o", "tom√©", "pr√≠ncipe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3795
        );

        /* üá∏üáª */
        public static readonly SingleEmoji FlagElSalvador = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1fb }),
            name: "flag: El Salvador",
            searchTerms: new string[] { "flag", "el", "salvador" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3796
        );

        /* üá∏üáΩ */
        public static readonly SingleEmoji FlagSintMaarten = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1fd }),
            name: "flag: Sint Maarten",
            searchTerms: new string[] { "flag", "sint", "maarten" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3797
        );

        /* üá∏üáæ */
        public static readonly SingleEmoji FlagSyria = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1fe }),
            name: "flag: Syria",
            searchTerms: new string[] { "flag", "syria" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3798
        );

        /* üá∏üáø */
        public static readonly SingleEmoji FlagEswatini = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f8, 0x1f1ff }),
            name: "flag: Eswatini",
            searchTerms: new string[] { "flag", "eswatini" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3799
        );

        /* üáπüá¶ */
        public static readonly SingleEmoji FlagTristanDaCunha = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1e6 }),
            name: "flag: Tristan da Cunha",
            searchTerms: new string[] { "flag", "tristan", "da", "cunha" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3800
        );

        /* üáπüá® */
        public static readonly SingleEmoji FlagTurksCaicosIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1e8 }),
            name: "flag: Turks & Caicos Islands",
            searchTerms: new string[] { "flag", "turks", "caicos", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3801
        );

        /* üáπüá© */
        public static readonly SingleEmoji FlagChad = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1e9 }),
            name: "flag: Chad",
            searchTerms: new string[] { "flag", "chad" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3802
        );

        /* üáπüá´ */
        public static readonly SingleEmoji FlagFrenchSouthernTerritories = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1eb }),
            name: "flag: French Southern Territories",
            searchTerms: new string[] { "flag", "french", "southern", "territories" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3803
        );

        /* üáπüá¨ */
        public static readonly SingleEmoji FlagTogo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1ec }),
            name: "flag: Togo",
            searchTerms: new string[] { "flag", "togo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3804
        );

        /* üáπüá≠ */
        public static readonly SingleEmoji FlagThailand = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1ed }),
            name: "flag: Thailand",
            searchTerms: new string[] { "flag", "thailand" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3805
        );

        /* üáπüáØ */
        public static readonly SingleEmoji FlagTajikistan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1ef }),
            name: "flag: Tajikistan",
            searchTerms: new string[] { "flag", "tajikistan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3806
        );

        /* üáπüá∞ */
        public static readonly SingleEmoji FlagTokelau = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1f0 }),
            name: "flag: Tokelau",
            searchTerms: new string[] { "flag", "tokelau" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3807
        );

        /* üáπüá± */
        public static readonly SingleEmoji FlagTimorLeste = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1f1 }),
            name: "flag: Timor-Leste",
            searchTerms: new string[] { "flag", "timor", "leste" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3808
        );

        /* üáπüá≤ */
        public static readonly SingleEmoji FlagTurkmenistan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1f2 }),
            name: "flag: Turkmenistan",
            searchTerms: new string[] { "flag", "turkmenistan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3809
        );

        /* üáπüá≥ */
        public static readonly SingleEmoji FlagTunisia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1f3 }),
            name: "flag: Tunisia",
            searchTerms: new string[] { "flag", "tunisia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3810
        );

        /* üáπüá¥ */
        public static readonly SingleEmoji FlagTonga = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1f4 }),
            name: "flag: Tonga",
            searchTerms: new string[] { "flag", "tonga" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3811
        );

        /* üáπüá∑ */
        public static readonly SingleEmoji FlagTurkey = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1f7 }),
            name: "flag: Turkey",
            searchTerms: new string[] { "flag", "turkey" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3812
        );

        /* üáπüáπ */
        public static readonly SingleEmoji FlagTrinidadTobago = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1f9 }),
            name: "flag: Trinidad & Tobago",
            searchTerms: new string[] { "flag", "trinidad", "tobago" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3813
        );

        /* üáπüáª */
        public static readonly SingleEmoji FlagTuvalu = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1fb }),
            name: "flag: Tuvalu",
            searchTerms: new string[] { "flag", "tuvalu" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3814
        );

        /* üáπüáº */
        public static readonly SingleEmoji FlagTaiwan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1fc }),
            name: "flag: Taiwan",
            searchTerms: new string[] { "flag", "taiwan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3815
        );

        /* üáπüáø */
        public static readonly SingleEmoji FlagTanzania = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1f9, 0x1f1ff }),
            name: "flag: Tanzania",
            searchTerms: new string[] { "flag", "tanzania" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3816
        );

        /* üá∫üá¶ */
        public static readonly SingleEmoji FlagUkraine = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fa, 0x1f1e6 }),
            name: "flag: Ukraine",
            searchTerms: new string[] { "flag", "ukraine" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3817
        );

        /* üá∫üá¨ */
        public static readonly SingleEmoji FlagUganda = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fa, 0x1f1ec }),
            name: "flag: Uganda",
            searchTerms: new string[] { "flag", "uganda" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3818
        );

        /* üá∫üá≤ */
        public static readonly SingleEmoji FlagUsOutlyingIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fa, 0x1f1f2 }),
            name: "flag: U.S. Outlying Islands",
            searchTerms: new string[] { "flag", "us", "outlying", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3819
        );

        /* üá∫üá≥ */
        public static readonly SingleEmoji FlagUnitedNations = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fa, 0x1f1f3 }),
            name: "flag: United Nations",
            searchTerms: new string[] { "flag", "united", "nations" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3820
        );

        /* üá∫üá∏ */
        public static readonly SingleEmoji FlagUnitedStates = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fa, 0x1f1f8 }),
            name: "flag: United States",
            searchTerms: new string[] { "flag", "united", "states" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3821
        );

        /* üá∫üáæ */
        public static readonly SingleEmoji FlagUruguay = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fa, 0x1f1fe }),
            name: "flag: Uruguay",
            searchTerms: new string[] { "flag", "uruguay" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3822
        );

        /* üá∫üáø */
        public static readonly SingleEmoji FlagUzbekistan = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fa, 0x1f1ff }),
            name: "flag: Uzbekistan",
            searchTerms: new string[] { "flag", "uzbekistan" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3823
        );

        /* üáªüá¶ */
        public static readonly SingleEmoji FlagVaticanCity = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fb, 0x1f1e6 }),
            name: "flag: Vatican City",
            searchTerms: new string[] { "flag", "vatican", "city" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3824
        );

        /* üáªüá® */
        public static readonly SingleEmoji FlagStVincentGrenadines = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fb, 0x1f1e8 }),
            name: "flag: St. Vincent & Grenadines",
            searchTerms: new string[] { "flag", "st", "vincent", "grenadines" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3825
        );

        /* üáªüá™ */
        public static readonly SingleEmoji FlagVenezuela = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fb, 0x1f1ea }),
            name: "flag: Venezuela",
            searchTerms: new string[] { "flag", "venezuela" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3826
        );

        /* üáªüá¨ */
        public static readonly SingleEmoji FlagBritishVirginIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fb, 0x1f1ec }),
            name: "flag: British Virgin Islands",
            searchTerms: new string[] { "flag", "british", "virgin", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3827
        );

        /* üáªüáÆ */
        public static readonly SingleEmoji FlagUsVirginIslands = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fb, 0x1f1ee }),
            name: "flag: U.S. Virgin Islands",
            searchTerms: new string[] { "flag", "us", "virgin", "islands" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3828
        );

        /* üáªüá≥ */
        public static readonly SingleEmoji FlagVietnam = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fb, 0x1f1f3 }),
            name: "flag: Vietnam",
            searchTerms: new string[] { "flag", "vietnam" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3829
        );

        /* üáªüá∫ */
        public static readonly SingleEmoji FlagVanuatu = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fb, 0x1f1fa }),
            name: "flag: Vanuatu",
            searchTerms: new string[] { "flag", "vanuatu" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3830
        );

        /* üáºüá´ */
        public static readonly SingleEmoji FlagWallisFutuna = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fc, 0x1f1eb }),
            name: "flag: Wallis & Futuna",
            searchTerms: new string[] { "flag", "wallis", "futuna" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3831
        );

        /* üáºüá∏ */
        public static readonly SingleEmoji FlagSamoa = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fc, 0x1f1f8 }),
            name: "flag: Samoa",
            searchTerms: new string[] { "flag", "samoa" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3832
        );

        /* üáΩüá∞ */
        public static readonly SingleEmoji FlagKosovo = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fd, 0x1f1f0 }),
            name: "flag: Kosovo",
            searchTerms: new string[] { "flag", "kosovo" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3833
        );

        /* üáæüá™ */
        public static readonly SingleEmoji FlagYemen = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fe, 0x1f1ea }),
            name: "flag: Yemen",
            searchTerms: new string[] { "flag", "yemen" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3834
        );

        /* üáæüáπ */
        public static readonly SingleEmoji FlagMayotte = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1fe, 0x1f1f9 }),
            name: "flag: Mayotte",
            searchTerms: new string[] { "flag", "mayotte" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3835
        );

        /* üáøüá¶ */
        public static readonly SingleEmoji FlagSouthAfrica = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ff, 0x1f1e6 }),
            name: "flag: South Africa",
            searchTerms: new string[] { "flag", "south", "africa" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3836
        );

        /* üáøüá≤ */
        public static readonly SingleEmoji FlagZambia = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ff, 0x1f1f2 }),
            name: "flag: Zambia",
            searchTerms: new string[] { "flag", "zambia" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3837
        );

        /* üáøüáº */
        public static readonly SingleEmoji FlagZimbabwe = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f1ff, 0x1f1fc }),
            name: "flag: Zimbabwe",
            searchTerms: new string[] { "flag", "zimbabwe" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.COUNTRY_FLAG,
            hasGlyph: true,
            sortOrder: 3838
        );

        /* üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø */
        public static readonly SingleEmoji FlagEngland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f4, 0xe0067, 0xe0062, 0xe0065, 0xe006e, 0xe0067, 0xe007f }),
            name: "flag: England",
            searchTerms: new string[] { "flag", "england" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.SUBDIVISION_FLAG,
            hasGlyph: true,
            sortOrder: 3839
        );

        /* üè¥Û†ÅßÛ†Å¢Û†Å≥Û†Å£Û†Å¥Û†Åø */
        public static readonly SingleEmoji FlagScotland = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f4, 0xe0067, 0xe0062, 0xe0073, 0xe0063, 0xe0074, 0xe007f }),
            name: "flag: Scotland",
            searchTerms: new string[] { "flag", "scotland" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.SUBDIVISION_FLAG,
            hasGlyph: true,
            sortOrder: 3840
        );

        /* üè¥Û†ÅßÛ†Å¢Û†Å∑Û†Å¨Û†Å≥Û†Åø */
        public static readonly SingleEmoji FlagWales = new SingleEmoji(
            sequence: new UnicodeSequence(new int[] { 0x1f3f4, 0xe0067, 0xe0062, 0xe0077, 0xe006c, 0xe0073, 0xe007f }),
            name: "flag: Wales",
            searchTerms: new string[] { "flag", "wales" },
            skinTones: SingleEmoji.NoSkinTones,
            group: Group.FLAGS,
            subgroup: Subgroups.SUBDIVISION_FLAG,
            hasGlyph: true,
            sortOrder: 3841
        );
    }
}
